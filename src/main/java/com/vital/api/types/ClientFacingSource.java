/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.vital.api.types;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.annotation.Nulls;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.vital.api.core.ObjectMappers;
import java.util.HashMap;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import org.jetbrains.annotations.NotNull;

@JsonInclude(JsonInclude.Include.NON_ABSENT)
@JsonDeserialize(builder = ClientFacingSource.Builder.class)
public final class ClientFacingSource {
    private final String provider;

    private final Optional<String> type;

    private final Optional<String> appId;

    private final Optional<String> deviceId;

    private final Optional<String> sport;

    private final Optional<String> workoutId;

    private final Optional<String> name;

    private final Optional<String> slug;

    private final Optional<String> logo;

    private final Map<String, Object> additionalProperties;

    private ClientFacingSource(
            String provider,
            Optional<String> type,
            Optional<String> appId,
            Optional<String> deviceId,
            Optional<String> sport,
            Optional<String> workoutId,
            Optional<String> name,
            Optional<String> slug,
            Optional<String> logo,
            Map<String, Object> additionalProperties) {
        this.provider = provider;
        this.type = type;
        this.appId = appId;
        this.deviceId = deviceId;
        this.sport = sport;
        this.workoutId = workoutId;
        this.name = name;
        this.slug = slug;
        this.logo = logo;
        this.additionalProperties = additionalProperties;
    }

    /**
     * @return Provider slug. e.g., <code>oura</code>, <code>fitbit</code>, <code>garmin</code>.
     */
    @JsonProperty("provider")
    public String getProvider() {
        return provider;
    }

    /**
     * @return The type of the data source (app or device) by which the summary or the timeseries data were recorded. This defaults to <code>unknown</code> when Vital cannot extract or infer that information
     */
    @JsonProperty("type")
    public Optional<String> getType() {
        return type;
    }

    /**
     * @return The identifier of the app which recorded this summary. This is only applicable to multi-source providers like Apple Health and Android Health Connect.
     */
    @JsonProperty("app_id")
    public Optional<String> getAppId() {
        return appId;
    }

    /**
     * @return The identifier of the device which recorded this summary.
     */
    @JsonProperty("device_id")
    public Optional<String> getDeviceId() {
        return deviceId;
    }

    /**
     * @return For workout stream timeseries, this is the standard sport slug of the workout with which the timeseries data are associated.
     * <p>For the <code>distance</code> timeseries, this is <code>wheelchair_pushing</code> if the user is a wheelchair user, or <code>null</code> otherwise.</p>
     * <p>For all summary types and non-workout timeseries, this is always <code>null</code>.</p>
     */
    @JsonProperty("sport")
    public Optional<String> getSport() {
        return sport;
    }

    /**
     * @return For workout stream timeseries, this is the workout ID with which the timeseries data are associated.
     * <p>For all other types, this is always <code>null</code>.</p>
     */
    @JsonProperty("workout_id")
    public Optional<String> getWorkoutId() {
        return workoutId;
    }

    /**
     * @return Deprecated. Subject to removal after 1 Jan 2024.
     */
    @JsonProperty("name")
    public Optional<String> getName() {
        return name;
    }

    /**
     * @return Deprecated. Use <code>provider</code> instead. Subject to removal after 1 Jan 2024.
     */
    @JsonProperty("slug")
    public Optional<String> getSlug() {
        return slug;
    }

    /**
     * @return Deprecated. Subject to removal after 1 Jan 2024.
     */
    @JsonProperty("logo")
    public Optional<String> getLogo() {
        return logo;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof ClientFacingSource && equalTo((ClientFacingSource) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(ClientFacingSource other) {
        return provider.equals(other.provider)
                && type.equals(other.type)
                && appId.equals(other.appId)
                && deviceId.equals(other.deviceId)
                && sport.equals(other.sport)
                && workoutId.equals(other.workoutId)
                && name.equals(other.name)
                && slug.equals(other.slug)
                && logo.equals(other.logo);
    }

    @java.lang.Override
    public int hashCode() {
        return Objects.hash(
                this.provider,
                this.type,
                this.appId,
                this.deviceId,
                this.sport,
                this.workoutId,
                this.name,
                this.slug,
                this.logo);
    }

    @java.lang.Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static ProviderStage builder() {
        return new Builder();
    }

    public interface ProviderStage {
        /**
         * <p>Provider slug. e.g., <code>oura</code>, <code>fitbit</code>, <code>garmin</code>.</p>
         */
        _FinalStage provider(@NotNull String provider);

        Builder from(ClientFacingSource other);
    }

    public interface _FinalStage {
        ClientFacingSource build();

        /**
         * <p>The type of the data source (app or device) by which the summary or the timeseries data were recorded. This defaults to <code>unknown</code> when Vital cannot extract or infer that information</p>
         */
        _FinalStage type(Optional<String> type);

        _FinalStage type(String type);

        /**
         * <p>The identifier of the app which recorded this summary. This is only applicable to multi-source providers like Apple Health and Android Health Connect.</p>
         */
        _FinalStage appId(Optional<String> appId);

        _FinalStage appId(String appId);

        /**
         * <p>The identifier of the device which recorded this summary.</p>
         */
        _FinalStage deviceId(Optional<String> deviceId);

        _FinalStage deviceId(String deviceId);

        /**
         * <p>For workout stream timeseries, this is the standard sport slug of the workout with which the timeseries data are associated.</p>
         * <p>For the <code>distance</code> timeseries, this is <code>wheelchair_pushing</code> if the user is a wheelchair user, or <code>null</code> otherwise.</p>
         * <p>For all summary types and non-workout timeseries, this is always <code>null</code>.</p>
         */
        _FinalStage sport(Optional<String> sport);

        _FinalStage sport(String sport);

        /**
         * <p>For workout stream timeseries, this is the workout ID with which the timeseries data are associated.</p>
         * <p>For all other types, this is always <code>null</code>.</p>
         */
        _FinalStage workoutId(Optional<String> workoutId);

        _FinalStage workoutId(String workoutId);

        /**
         * <p>Deprecated. Subject to removal after 1 Jan 2024.</p>
         */
        _FinalStage name(Optional<String> name);

        _FinalStage name(String name);

        /**
         * <p>Deprecated. Use <code>provider</code> instead. Subject to removal after 1 Jan 2024.</p>
         */
        _FinalStage slug(Optional<String> slug);

        _FinalStage slug(String slug);

        /**
         * <p>Deprecated. Subject to removal after 1 Jan 2024.</p>
         */
        _FinalStage logo(Optional<String> logo);

        _FinalStage logo(String logo);
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder implements ProviderStage, _FinalStage {
        private String provider;

        private Optional<String> logo = Optional.empty();

        private Optional<String> slug = Optional.empty();

        private Optional<String> name = Optional.empty();

        private Optional<String> workoutId = Optional.empty();

        private Optional<String> sport = Optional.empty();

        private Optional<String> deviceId = Optional.empty();

        private Optional<String> appId = Optional.empty();

        private Optional<String> type = Optional.empty();

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        @java.lang.Override
        public Builder from(ClientFacingSource other) {
            provider(other.getProvider());
            type(other.getType());
            appId(other.getAppId());
            deviceId(other.getDeviceId());
            sport(other.getSport());
            workoutId(other.getWorkoutId());
            name(other.getName());
            slug(other.getSlug());
            logo(other.getLogo());
            return this;
        }

        /**
         * <p>Provider slug. e.g., <code>oura</code>, <code>fitbit</code>, <code>garmin</code>.</p>
         * <p>Provider slug. e.g., <code>oura</code>, <code>fitbit</code>, <code>garmin</code>.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        @JsonSetter("provider")
        public _FinalStage provider(@NotNull String provider) {
            this.provider = Objects.requireNonNull(provider, "provider must not be null");
            return this;
        }

        /**
         * <p>Deprecated. Subject to removal after 1 Jan 2024.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        public _FinalStage logo(String logo) {
            this.logo = Optional.ofNullable(logo);
            return this;
        }

        /**
         * <p>Deprecated. Subject to removal after 1 Jan 2024.</p>
         */
        @java.lang.Override
        @JsonSetter(value = "logo", nulls = Nulls.SKIP)
        public _FinalStage logo(Optional<String> logo) {
            this.logo = logo;
            return this;
        }

        /**
         * <p>Deprecated. Use <code>provider</code> instead. Subject to removal after 1 Jan 2024.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        public _FinalStage slug(String slug) {
            this.slug = Optional.ofNullable(slug);
            return this;
        }

        /**
         * <p>Deprecated. Use <code>provider</code> instead. Subject to removal after 1 Jan 2024.</p>
         */
        @java.lang.Override
        @JsonSetter(value = "slug", nulls = Nulls.SKIP)
        public _FinalStage slug(Optional<String> slug) {
            this.slug = slug;
            return this;
        }

        /**
         * <p>Deprecated. Subject to removal after 1 Jan 2024.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        public _FinalStage name(String name) {
            this.name = Optional.ofNullable(name);
            return this;
        }

        /**
         * <p>Deprecated. Subject to removal after 1 Jan 2024.</p>
         */
        @java.lang.Override
        @JsonSetter(value = "name", nulls = Nulls.SKIP)
        public _FinalStage name(Optional<String> name) {
            this.name = name;
            return this;
        }

        /**
         * <p>For workout stream timeseries, this is the workout ID with which the timeseries data are associated.</p>
         * <p>For all other types, this is always <code>null</code>.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        public _FinalStage workoutId(String workoutId) {
            this.workoutId = Optional.ofNullable(workoutId);
            return this;
        }

        /**
         * <p>For workout stream timeseries, this is the workout ID with which the timeseries data are associated.</p>
         * <p>For all other types, this is always <code>null</code>.</p>
         */
        @java.lang.Override
        @JsonSetter(value = "workout_id", nulls = Nulls.SKIP)
        public _FinalStage workoutId(Optional<String> workoutId) {
            this.workoutId = workoutId;
            return this;
        }

        /**
         * <p>For workout stream timeseries, this is the standard sport slug of the workout with which the timeseries data are associated.</p>
         * <p>For the <code>distance</code> timeseries, this is <code>wheelchair_pushing</code> if the user is a wheelchair user, or <code>null</code> otherwise.</p>
         * <p>For all summary types and non-workout timeseries, this is always <code>null</code>.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        public _FinalStage sport(String sport) {
            this.sport = Optional.ofNullable(sport);
            return this;
        }

        /**
         * <p>For workout stream timeseries, this is the standard sport slug of the workout with which the timeseries data are associated.</p>
         * <p>For the <code>distance</code> timeseries, this is <code>wheelchair_pushing</code> if the user is a wheelchair user, or <code>null</code> otherwise.</p>
         * <p>For all summary types and non-workout timeseries, this is always <code>null</code>.</p>
         */
        @java.lang.Override
        @JsonSetter(value = "sport", nulls = Nulls.SKIP)
        public _FinalStage sport(Optional<String> sport) {
            this.sport = sport;
            return this;
        }

        /**
         * <p>The identifier of the device which recorded this summary.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        public _FinalStage deviceId(String deviceId) {
            this.deviceId = Optional.ofNullable(deviceId);
            return this;
        }

        /**
         * <p>The identifier of the device which recorded this summary.</p>
         */
        @java.lang.Override
        @JsonSetter(value = "device_id", nulls = Nulls.SKIP)
        public _FinalStage deviceId(Optional<String> deviceId) {
            this.deviceId = deviceId;
            return this;
        }

        /**
         * <p>The identifier of the app which recorded this summary. This is only applicable to multi-source providers like Apple Health and Android Health Connect.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        public _FinalStage appId(String appId) {
            this.appId = Optional.ofNullable(appId);
            return this;
        }

        /**
         * <p>The identifier of the app which recorded this summary. This is only applicable to multi-source providers like Apple Health and Android Health Connect.</p>
         */
        @java.lang.Override
        @JsonSetter(value = "app_id", nulls = Nulls.SKIP)
        public _FinalStage appId(Optional<String> appId) {
            this.appId = appId;
            return this;
        }

        /**
         * <p>The type of the data source (app or device) by which the summary or the timeseries data were recorded. This defaults to <code>unknown</code> when Vital cannot extract or infer that information</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        public _FinalStage type(String type) {
            this.type = Optional.ofNullable(type);
            return this;
        }

        /**
         * <p>The type of the data source (app or device) by which the summary or the timeseries data were recorded. This defaults to <code>unknown</code> when Vital cannot extract or infer that information</p>
         */
        @java.lang.Override
        @JsonSetter(value = "type", nulls = Nulls.SKIP)
        public _FinalStage type(Optional<String> type) {
            this.type = type;
            return this;
        }

        @java.lang.Override
        public ClientFacingSource build() {
            return new ClientFacingSource(
                    provider, type, appId, deviceId, sport, workoutId, name, slug, logo, additionalProperties);
        }
    }
}
