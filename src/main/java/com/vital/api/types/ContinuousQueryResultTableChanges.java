/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.vital.api.types;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.annotation.Nulls;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.vital.api.core.ObjectMappers;
import java.util.HashMap;
import java.util.LinkedHashMap;
import java.util.List;
import java.util.Map;
import java.util.Objects;

@JsonInclude(JsonInclude.Include.NON_EMPTY)
@JsonDeserialize(builder = ContinuousQueryResultTableChanges.Builder.class)
public final class ContinuousQueryResultTableChanges {
    private final String queryId;

    private final String querySlug;

    private final Map<String, List<Object>> data;

    private final Map<String, Object> additionalProperties;

    private ContinuousQueryResultTableChanges(
            String queryId,
            String querySlug,
            Map<String, List<Object>> data,
            Map<String, Object> additionalProperties) {
        this.queryId = queryId;
        this.querySlug = querySlug;
        this.data = data;
        this.additionalProperties = additionalProperties;
    }

    @JsonProperty("query_id")
    public String getQueryId() {
        return queryId;
    }

    @JsonProperty("query_slug")
    public String getQuerySlug() {
        return querySlug;
    }

    @JsonProperty("data")
    public Map<String, List<Object>> getData() {
        return data;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof ContinuousQueryResultTableChanges && equalTo((ContinuousQueryResultTableChanges) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(ContinuousQueryResultTableChanges other) {
        return queryId.equals(other.queryId) && querySlug.equals(other.querySlug) && data.equals(other.data);
    }

    @java.lang.Override
    public int hashCode() {
        return Objects.hash(this.queryId, this.querySlug, this.data);
    }

    @java.lang.Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static QueryIdStage builder() {
        return new Builder();
    }

    public interface QueryIdStage {
        QuerySlugStage queryId(String queryId);

        Builder from(ContinuousQueryResultTableChanges other);
    }

    public interface QuerySlugStage {
        _FinalStage querySlug(String querySlug);
    }

    public interface _FinalStage {
        ContinuousQueryResultTableChanges build();

        _FinalStage data(Map<String, List<Object>> data);

        _FinalStage putAllData(Map<String, List<Object>> data);

        _FinalStage data(String key, List<Object> value);
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder implements QueryIdStage, QuerySlugStage, _FinalStage {
        private String queryId;

        private String querySlug;

        private Map<String, List<Object>> data = new LinkedHashMap<>();

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        @java.lang.Override
        public Builder from(ContinuousQueryResultTableChanges other) {
            queryId(other.getQueryId());
            querySlug(other.getQuerySlug());
            data(other.getData());
            return this;
        }

        @java.lang.Override
        @JsonSetter("query_id")
        public QuerySlugStage queryId(String queryId) {
            this.queryId = queryId;
            return this;
        }

        @java.lang.Override
        @JsonSetter("query_slug")
        public _FinalStage querySlug(String querySlug) {
            this.querySlug = querySlug;
            return this;
        }

        @java.lang.Override
        public _FinalStage data(String key, List<Object> value) {
            this.data.put(key, value);
            return this;
        }

        @java.lang.Override
        public _FinalStage putAllData(Map<String, List<Object>> data) {
            this.data.putAll(data);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "data", nulls = Nulls.SKIP)
        public _FinalStage data(Map<String, List<Object>> data) {
            this.data.clear();
            this.data.putAll(data);
            return this;
        }

        @java.lang.Override
        public ContinuousQueryResultTableChanges build() {
            return new ContinuousQueryResultTableChanges(queryId, querySlug, data, additionalProperties);
        }
    }
}
