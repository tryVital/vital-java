/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.vital.api.types;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.vital.api.core.ObjectMappers;
import java.util.HashMap;
import java.util.Map;
import java.util.Objects;

@JsonInclude(JsonInclude.Include.NON_EMPTY)
@JsonDeserialize(builder = WorkoutColumnExpr.Builder.class)
public final class WorkoutColumnExpr {
    private final WorkoutColumnExprWorkout workout;

    private final Map<String, Object> additionalProperties;

    private WorkoutColumnExpr(WorkoutColumnExprWorkout workout, Map<String, Object> additionalProperties) {
        this.workout = workout;
        this.additionalProperties = additionalProperties;
    }

    @JsonProperty("workout")
    public WorkoutColumnExprWorkout getWorkout() {
        return workout;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof WorkoutColumnExpr && equalTo((WorkoutColumnExpr) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(WorkoutColumnExpr other) {
        return workout.equals(other.workout);
    }

    @java.lang.Override
    public int hashCode() {
        return Objects.hash(this.workout);
    }

    @java.lang.Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static WorkoutStage builder() {
        return new Builder();
    }

    public interface WorkoutStage {
        _FinalStage workout(WorkoutColumnExprWorkout workout);

        Builder from(WorkoutColumnExpr other);
    }

    public interface _FinalStage {
        WorkoutColumnExpr build();
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder implements WorkoutStage, _FinalStage {
        private WorkoutColumnExprWorkout workout;

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        @java.lang.Override
        public Builder from(WorkoutColumnExpr other) {
            workout(other.getWorkout());
            return this;
        }

        @java.lang.Override
        @JsonSetter("workout")
        public _FinalStage workout(WorkoutColumnExprWorkout workout) {
            this.workout = workout;
            return this;
        }

        @java.lang.Override
        public WorkoutColumnExpr build() {
            return new WorkoutColumnExpr(workout, additionalProperties);
        }
    }
}
