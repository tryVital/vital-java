/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.vital.api.types;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.annotation.Nulls;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.vital.api.core.ObjectMappers;
import java.util.HashMap;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;

@JsonInclude(JsonInclude.Include.NON_EMPTY)
@JsonDeserialize(builder = VitalCoreProvidersLabTestLabsSchemasResultsFhirCodingItem.Builder.class)
public final class VitalCoreProvidersLabTestLabsSchemasResultsFhirCodingItem {
    private final Optional<String> system;

    private final String code;

    private final String display;

    private final Map<String, Object> additionalProperties;

    private VitalCoreProvidersLabTestLabsSchemasResultsFhirCodingItem(
            Optional<String> system, String code, String display, Map<String, Object> additionalProperties) {
        this.system = system;
        this.code = code;
        this.display = display;
        this.additionalProperties = additionalProperties;
    }

    @JsonProperty("system")
    public Optional<String> getSystem() {
        return system;
    }

    @JsonProperty("code")
    public String getCode() {
        return code;
    }

    @JsonProperty("display")
    public String getDisplay() {
        return display;
    }

    @Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof VitalCoreProvidersLabTestLabsSchemasResultsFhirCodingItem
                && equalTo((VitalCoreProvidersLabTestLabsSchemasResultsFhirCodingItem) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(VitalCoreProvidersLabTestLabsSchemasResultsFhirCodingItem other) {
        return system.equals(other.system) && code.equals(other.code) && display.equals(other.display);
    }

    @Override
    public int hashCode() {
        return Objects.hash(this.system, this.code, this.display);
    }

    @Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static CodeStage builder() {
        return new Builder();
    }

    public interface CodeStage {
        DisplayStage code(String code);

        Builder from(VitalCoreProvidersLabTestLabsSchemasResultsFhirCodingItem other);
    }

    public interface DisplayStage {
        _FinalStage display(String display);
    }

    public interface _FinalStage {
        VitalCoreProvidersLabTestLabsSchemasResultsFhirCodingItem build();

        _FinalStage system(Optional<String> system);

        _FinalStage system(String system);
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder implements CodeStage, DisplayStage, _FinalStage {
        private String code;

        private String display;

        private Optional<String> system = Optional.empty();

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        @Override
        public Builder from(VitalCoreProvidersLabTestLabsSchemasResultsFhirCodingItem other) {
            system(other.getSystem());
            code(other.getCode());
            display(other.getDisplay());
            return this;
        }

        @Override
        @JsonSetter("code")
        public DisplayStage code(String code) {
            this.code = code;
            return this;
        }

        @Override
        @JsonSetter("display")
        public _FinalStage display(String display) {
            this.display = display;
            return this;
        }

        @Override
        public _FinalStage system(String system) {
            this.system = Optional.of(system);
            return this;
        }

        @Override
        @JsonSetter(value = "system", nulls = Nulls.SKIP)
        public _FinalStage system(Optional<String> system) {
            this.system = system;
            return this;
        }

        @Override
        public VitalCoreProvidersLabTestLabsSchemasResultsFhirCodingItem build() {
            return new VitalCoreProvidersLabTestLabsSchemasResultsFhirCodingItem(
                    system, code, display, additionalProperties);
        }
    }
}
