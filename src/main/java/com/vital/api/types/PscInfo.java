/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.vital.api.types;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.annotation.Nulls;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.vital.api.core.ObjectMappers;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Objects;

@JsonInclude(JsonInclude.Include.NON_EMPTY)
@JsonDeserialize(builder = PscInfo.Builder.class)
public final class PscInfo {
    private final int labId;

    private final Labs slug;

    private final List<ClientFacingLabLocation> patientServiceCenters;

    private final Map<String, Object> additionalProperties;

    private PscInfo(
            int labId,
            Labs slug,
            List<ClientFacingLabLocation> patientServiceCenters,
            Map<String, Object> additionalProperties) {
        this.labId = labId;
        this.slug = slug;
        this.patientServiceCenters = patientServiceCenters;
        this.additionalProperties = additionalProperties;
    }

    @JsonProperty("lab_id")
    public int getLabId() {
        return labId;
    }

    @JsonProperty("slug")
    public Labs getSlug() {
        return slug;
    }

    @JsonProperty("patient_service_centers")
    public List<ClientFacingLabLocation> getPatientServiceCenters() {
        return patientServiceCenters;
    }

    @Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof PscInfo && equalTo((PscInfo) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(PscInfo other) {
        return labId == other.labId
                && slug.equals(other.slug)
                && patientServiceCenters.equals(other.patientServiceCenters);
    }

    @Override
    public int hashCode() {
        return Objects.hash(this.labId, this.slug, this.patientServiceCenters);
    }

    @Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static LabIdStage builder() {
        return new Builder();
    }

    public interface LabIdStage {
        SlugStage labId(int labId);

        Builder from(PscInfo other);
    }

    public interface SlugStage {
        _FinalStage slug(Labs slug);
    }

    public interface _FinalStage {
        PscInfo build();

        _FinalStage patientServiceCenters(List<ClientFacingLabLocation> patientServiceCenters);

        _FinalStage addPatientServiceCenters(ClientFacingLabLocation patientServiceCenters);

        _FinalStage addAllPatientServiceCenters(List<ClientFacingLabLocation> patientServiceCenters);
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder implements LabIdStage, SlugStage, _FinalStage {
        private int labId;

        private Labs slug;

        private List<ClientFacingLabLocation> patientServiceCenters = new ArrayList<>();

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        @Override
        public Builder from(PscInfo other) {
            labId(other.getLabId());
            slug(other.getSlug());
            patientServiceCenters(other.getPatientServiceCenters());
            return this;
        }

        @Override
        @JsonSetter("lab_id")
        public SlugStage labId(int labId) {
            this.labId = labId;
            return this;
        }

        @Override
        @JsonSetter("slug")
        public _FinalStage slug(Labs slug) {
            this.slug = slug;
            return this;
        }

        @Override
        public _FinalStage addAllPatientServiceCenters(List<ClientFacingLabLocation> patientServiceCenters) {
            this.patientServiceCenters.addAll(patientServiceCenters);
            return this;
        }

        @Override
        public _FinalStage addPatientServiceCenters(ClientFacingLabLocation patientServiceCenters) {
            this.patientServiceCenters.add(patientServiceCenters);
            return this;
        }

        @Override
        @JsonSetter(value = "patient_service_centers", nulls = Nulls.SKIP)
        public _FinalStage patientServiceCenters(List<ClientFacingLabLocation> patientServiceCenters) {
            this.patientServiceCenters.clear();
            this.patientServiceCenters.addAll(patientServiceCenters);
            return this;
        }

        @Override
        public PscInfo build() {
            return new PscInfo(labId, slug, patientServiceCenters, additionalProperties);
        }
    }
}
