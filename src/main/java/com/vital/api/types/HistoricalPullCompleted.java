/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.vital.api.types;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.vital.api.core.ObjectMappers;
import java.time.OffsetDateTime;
import java.util.HashMap;
import java.util.Map;
import java.util.Objects;
import org.jetbrains.annotations.NotNull;

@JsonInclude(JsonInclude.Include.NON_ABSENT)
@JsonDeserialize(builder = HistoricalPullCompleted.Builder.class)
public final class HistoricalPullCompleted {
    private final String userId;

    private final OffsetDateTime startDate;

    private final OffsetDateTime endDate;

    private final boolean isFinal;

    private final String provider;

    private final Map<String, Object> additionalProperties;

    private HistoricalPullCompleted(
            String userId,
            OffsetDateTime startDate,
            OffsetDateTime endDate,
            boolean isFinal,
            String provider,
            Map<String, Object> additionalProperties) {
        this.userId = userId;
        this.startDate = startDate;
        this.endDate = endDate;
        this.isFinal = isFinal;
        this.provider = provider;
        this.additionalProperties = additionalProperties;
    }

    @JsonProperty("user_id")
    public String getUserId() {
        return userId;
    }

    @JsonProperty("start_date")
    public OffsetDateTime getStartDate() {
        return startDate;
    }

    @JsonProperty("end_date")
    public OffsetDateTime getEndDate() {
        return endDate;
    }

    @JsonProperty("is_final")
    public boolean getIsFinal() {
        return isFinal;
    }

    @JsonProperty("provider")
    public String getProvider() {
        return provider;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof HistoricalPullCompleted && equalTo((HistoricalPullCompleted) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(HistoricalPullCompleted other) {
        return userId.equals(other.userId)
                && startDate.equals(other.startDate)
                && endDate.equals(other.endDate)
                && isFinal == other.isFinal
                && provider.equals(other.provider);
    }

    @java.lang.Override
    public int hashCode() {
        return Objects.hash(this.userId, this.startDate, this.endDate, this.isFinal, this.provider);
    }

    @java.lang.Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static UserIdStage builder() {
        return new Builder();
    }

    public interface UserIdStage {
        StartDateStage userId(@NotNull String userId);

        Builder from(HistoricalPullCompleted other);
    }

    public interface StartDateStage {
        EndDateStage startDate(@NotNull OffsetDateTime startDate);
    }

    public interface EndDateStage {
        IsFinalStage endDate(@NotNull OffsetDateTime endDate);
    }

    public interface IsFinalStage {
        ProviderStage isFinal(boolean isFinal);
    }

    public interface ProviderStage {
        _FinalStage provider(@NotNull String provider);
    }

    public interface _FinalStage {
        HistoricalPullCompleted build();
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder
            implements UserIdStage, StartDateStage, EndDateStage, IsFinalStage, ProviderStage, _FinalStage {
        private String userId;

        private OffsetDateTime startDate;

        private OffsetDateTime endDate;

        private boolean isFinal;

        private String provider;

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        @java.lang.Override
        public Builder from(HistoricalPullCompleted other) {
            userId(other.getUserId());
            startDate(other.getStartDate());
            endDate(other.getEndDate());
            isFinal(other.getIsFinal());
            provider(other.getProvider());
            return this;
        }

        @java.lang.Override
        @JsonSetter("user_id")
        public StartDateStage userId(@NotNull String userId) {
            this.userId = Objects.requireNonNull(userId, "userId must not be null");
            return this;
        }

        @java.lang.Override
        @JsonSetter("start_date")
        public EndDateStage startDate(@NotNull OffsetDateTime startDate) {
            this.startDate = Objects.requireNonNull(startDate, "startDate must not be null");
            return this;
        }

        @java.lang.Override
        @JsonSetter("end_date")
        public IsFinalStage endDate(@NotNull OffsetDateTime endDate) {
            this.endDate = Objects.requireNonNull(endDate, "endDate must not be null");
            return this;
        }

        @java.lang.Override
        @JsonSetter("is_final")
        public ProviderStage isFinal(boolean isFinal) {
            this.isFinal = isFinal;
            return this;
        }

        @java.lang.Override
        @JsonSetter("provider")
        public _FinalStage provider(@NotNull String provider) {
            this.provider = Objects.requireNonNull(provider, "provider must not be null");
            return this;
        }

        @java.lang.Override
        public HistoricalPullCompleted build() {
            return new HistoricalPullCompleted(userId, startDate, endDate, isFinal, provider, additionalProperties);
        }
    }
}
