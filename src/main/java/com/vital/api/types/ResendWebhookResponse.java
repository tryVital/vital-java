/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.vital.api.types;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.annotation.Nulls;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.vital.api.core.ObjectMappers;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Objects;

@JsonInclude(JsonInclude.Include.NON_EMPTY)
@JsonDeserialize(builder = ResendWebhookResponse.Builder.class)
public final class ResendWebhookResponse {
    private final List<String> orderIds;

    private final Map<String, Object> additionalProperties;

    private ResendWebhookResponse(List<String> orderIds, Map<String, Object> additionalProperties) {
        this.orderIds = orderIds;
        this.additionalProperties = additionalProperties;
    }

    @JsonProperty("order_ids")
    public List<String> getOrderIds() {
        return orderIds;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof ResendWebhookResponse && equalTo((ResendWebhookResponse) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(ResendWebhookResponse other) {
        return orderIds.equals(other.orderIds);
    }

    @java.lang.Override
    public int hashCode() {
        return Objects.hash(this.orderIds);
    }

    @java.lang.Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static Builder builder() {
        return new Builder();
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder {
        private List<String> orderIds = new ArrayList<>();

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        public Builder from(ResendWebhookResponse other) {
            orderIds(other.getOrderIds());
            return this;
        }

        @JsonSetter(value = "order_ids", nulls = Nulls.SKIP)
        public Builder orderIds(List<String> orderIds) {
            this.orderIds.clear();
            this.orderIds.addAll(orderIds);
            return this;
        }

        public Builder addOrderIds(String orderIds) {
            this.orderIds.add(orderIds);
            return this;
        }

        public Builder addAllOrderIds(List<String> orderIds) {
            this.orderIds.addAll(orderIds);
            return this;
        }

        public ResendWebhookResponse build() {
            return new ResendWebhookResponse(orderIds, additionalProperties);
        }
    }
}
