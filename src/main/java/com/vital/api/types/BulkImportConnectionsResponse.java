/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.vital.api.types;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.annotation.Nulls;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.vital.api.core.ObjectMappers;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Objects;

@JsonInclude(JsonInclude.Include.NON_ABSENT)
@JsonDeserialize(builder = BulkImportConnectionsResponse.Builder.class)
public final class BulkImportConnectionsResponse {
    private final List<String> userIdsImported;

    private final List<String> userIdsFailed;

    private final Map<String, Object> additionalProperties;

    private BulkImportConnectionsResponse(
            List<String> userIdsImported, List<String> userIdsFailed, Map<String, Object> additionalProperties) {
        this.userIdsImported = userIdsImported;
        this.userIdsFailed = userIdsFailed;
        this.additionalProperties = additionalProperties;
    }

    @JsonProperty("user_ids_imported")
    public List<String> getUserIdsImported() {
        return userIdsImported;
    }

    @JsonProperty("user_ids_failed")
    public List<String> getUserIdsFailed() {
        return userIdsFailed;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof BulkImportConnectionsResponse && equalTo((BulkImportConnectionsResponse) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(BulkImportConnectionsResponse other) {
        return userIdsImported.equals(other.userIdsImported) && userIdsFailed.equals(other.userIdsFailed);
    }

    @java.lang.Override
    public int hashCode() {
        return Objects.hash(this.userIdsImported, this.userIdsFailed);
    }

    @java.lang.Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static Builder builder() {
        return new Builder();
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder {
        private List<String> userIdsImported = new ArrayList<>();

        private List<String> userIdsFailed = new ArrayList<>();

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        public Builder from(BulkImportConnectionsResponse other) {
            userIdsImported(other.getUserIdsImported());
            userIdsFailed(other.getUserIdsFailed());
            return this;
        }

        @JsonSetter(value = "user_ids_imported", nulls = Nulls.SKIP)
        public Builder userIdsImported(List<String> userIdsImported) {
            this.userIdsImported.clear();
            this.userIdsImported.addAll(userIdsImported);
            return this;
        }

        public Builder addUserIdsImported(String userIdsImported) {
            this.userIdsImported.add(userIdsImported);
            return this;
        }

        public Builder addAllUserIdsImported(List<String> userIdsImported) {
            if (userIdsImported != null) {
                this.userIdsImported.addAll(userIdsImported);
            }
            return this;
        }

        @JsonSetter(value = "user_ids_failed", nulls = Nulls.SKIP)
        public Builder userIdsFailed(List<String> userIdsFailed) {
            this.userIdsFailed.clear();
            this.userIdsFailed.addAll(userIdsFailed);
            return this;
        }

        public Builder addUserIdsFailed(String userIdsFailed) {
            this.userIdsFailed.add(userIdsFailed);
            return this;
        }

        public Builder addAllUserIdsFailed(List<String> userIdsFailed) {
            if (userIdsFailed != null) {
                this.userIdsFailed.addAll(userIdsFailed);
            }
            return this;
        }

        public BulkImportConnectionsResponse build() {
            return new BulkImportConnectionsResponse(userIdsImported, userIdsFailed, additionalProperties);
        }
    }
}
