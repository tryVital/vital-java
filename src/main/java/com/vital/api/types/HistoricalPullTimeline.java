/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.vital.api.types;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.annotation.Nulls;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.vital.api.core.ObjectMappers;
import java.util.HashMap;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;

@JsonInclude(JsonInclude.Include.NON_EMPTY)
@JsonDeserialize(builder = HistoricalPullTimeline.Builder.class)
public final class HistoricalPullTimeline {
    private final String scheduledAt;

    private final Optional<String> startedAt;

    private final Optional<String> endedAt;

    private final Map<String, Object> additionalProperties;

    private HistoricalPullTimeline(
            String scheduledAt,
            Optional<String> startedAt,
            Optional<String> endedAt,
            Map<String, Object> additionalProperties) {
        this.scheduledAt = scheduledAt;
        this.startedAt = startedAt;
        this.endedAt = endedAt;
        this.additionalProperties = additionalProperties;
    }

    @JsonProperty("scheduled_at")
    public String getScheduledAt() {
        return scheduledAt;
    }

    @JsonProperty("started_at")
    public Optional<String> getStartedAt() {
        return startedAt;
    }

    @JsonProperty("ended_at")
    public Optional<String> getEndedAt() {
        return endedAt;
    }

    @Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof HistoricalPullTimeline && equalTo((HistoricalPullTimeline) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(HistoricalPullTimeline other) {
        return scheduledAt.equals(other.scheduledAt)
                && startedAt.equals(other.startedAt)
                && endedAt.equals(other.endedAt);
    }

    @Override
    public int hashCode() {
        return Objects.hash(this.scheduledAt, this.startedAt, this.endedAt);
    }

    @Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static ScheduledAtStage builder() {
        return new Builder();
    }

    public interface ScheduledAtStage {
        _FinalStage scheduledAt(String scheduledAt);

        Builder from(HistoricalPullTimeline other);
    }

    public interface _FinalStage {
        HistoricalPullTimeline build();

        _FinalStage startedAt(Optional<String> startedAt);

        _FinalStage startedAt(String startedAt);

        _FinalStage endedAt(Optional<String> endedAt);

        _FinalStage endedAt(String endedAt);
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder implements ScheduledAtStage, _FinalStage {
        private String scheduledAt;

        private Optional<String> endedAt = Optional.empty();

        private Optional<String> startedAt = Optional.empty();

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        @Override
        public Builder from(HistoricalPullTimeline other) {
            scheduledAt(other.getScheduledAt());
            startedAt(other.getStartedAt());
            endedAt(other.getEndedAt());
            return this;
        }

        @Override
        @JsonSetter("scheduled_at")
        public _FinalStage scheduledAt(String scheduledAt) {
            this.scheduledAt = scheduledAt;
            return this;
        }

        @Override
        public _FinalStage endedAt(String endedAt) {
            this.endedAt = Optional.of(endedAt);
            return this;
        }

        @Override
        @JsonSetter(value = "ended_at", nulls = Nulls.SKIP)
        public _FinalStage endedAt(Optional<String> endedAt) {
            this.endedAt = endedAt;
            return this;
        }

        @Override
        public _FinalStage startedAt(String startedAt) {
            this.startedAt = Optional.of(startedAt);
            return this;
        }

        @Override
        @JsonSetter(value = "started_at", nulls = Nulls.SKIP)
        public _FinalStage startedAt(Optional<String> startedAt) {
            this.startedAt = startedAt;
            return this;
        }

        @Override
        public HistoricalPullTimeline build() {
            return new HistoricalPullTimeline(scheduledAt, startedAt, endedAt, additionalProperties);
        }
    }
}
