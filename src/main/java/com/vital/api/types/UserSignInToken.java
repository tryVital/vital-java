/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.vital.api.types;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.vital.api.core.ObjectMappers;
import java.util.HashMap;
import java.util.Map;
import java.util.Objects;

@JsonInclude(JsonInclude.Include.NON_EMPTY)
@JsonDeserialize(builder = UserSignInToken.Builder.class)
public final class UserSignInToken {
    private final String publicKey;

    private final String userToken;

    private final Map<String, Object> additionalProperties;

    private UserSignInToken(String publicKey, String userToken, Map<String, Object> additionalProperties) {
        this.publicKey = publicKey;
        this.userToken = userToken;
        this.additionalProperties = additionalProperties;
    }

    @JsonProperty("public_key")
    public String getPublicKey() {
        return publicKey;
    }

    @JsonProperty("user_token")
    public String getUserToken() {
        return userToken;
    }

    @Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof UserSignInToken && equalTo((UserSignInToken) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(UserSignInToken other) {
        return publicKey.equals(other.publicKey) && userToken.equals(other.userToken);
    }

    @Override
    public int hashCode() {
        return Objects.hash(this.publicKey, this.userToken);
    }

    @Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static PublicKeyStage builder() {
        return new Builder();
    }

    public interface PublicKeyStage {
        UserTokenStage publicKey(String publicKey);

        Builder from(UserSignInToken other);
    }

    public interface UserTokenStage {
        _FinalStage userToken(String userToken);
    }

    public interface _FinalStage {
        UserSignInToken build();
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder implements PublicKeyStage, UserTokenStage, _FinalStage {
        private String publicKey;

        private String userToken;

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        @Override
        public Builder from(UserSignInToken other) {
            publicKey(other.getPublicKey());
            userToken(other.getUserToken());
            return this;
        }

        @Override
        @JsonSetter("public_key")
        public UserTokenStage publicKey(String publicKey) {
            this.publicKey = publicKey;
            return this;
        }

        @Override
        @JsonSetter("user_token")
        public _FinalStage userToken(String userToken) {
            this.userToken = userToken;
            return this;
        }

        @Override
        public UserSignInToken build() {
            return new UserSignInToken(publicKey, userToken, additionalProperties);
        }
    }
}
