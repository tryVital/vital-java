/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.vital.api.types;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.annotation.Nulls;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.vital.api.core.ObjectMappers;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;

@JsonInclude(JsonInclude.Include.NON_EMPTY)
@JsonDeserialize(builder = PscAreaInfoDetails.Builder.class)
public final class PscAreaInfoDetails {
    private final boolean appointmentWithVital;

    private final int withinRadius;

    private final String radius;

    private final Optional<List<LabLocationCapability>> capabilities;

    private final Map<String, Object> additionalProperties;

    private PscAreaInfoDetails(
            boolean appointmentWithVital,
            int withinRadius,
            String radius,
            Optional<List<LabLocationCapability>> capabilities,
            Map<String, Object> additionalProperties) {
        this.appointmentWithVital = appointmentWithVital;
        this.withinRadius = withinRadius;
        this.radius = radius;
        this.capabilities = capabilities;
        this.additionalProperties = additionalProperties;
    }

    @JsonProperty("appointment_with_vital")
    public boolean getAppointmentWithVital() {
        return appointmentWithVital;
    }

    @JsonProperty("within_radius")
    public int getWithinRadius() {
        return withinRadius;
    }

    @JsonProperty("radius")
    public String getRadius() {
        return radius;
    }

    @JsonProperty("capabilities")
    public Optional<List<LabLocationCapability>> getCapabilities() {
        return capabilities;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof PscAreaInfoDetails && equalTo((PscAreaInfoDetails) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(PscAreaInfoDetails other) {
        return appointmentWithVital == other.appointmentWithVital
                && withinRadius == other.withinRadius
                && radius.equals(other.radius)
                && capabilities.equals(other.capabilities);
    }

    @java.lang.Override
    public int hashCode() {
        return Objects.hash(this.appointmentWithVital, this.withinRadius, this.radius, this.capabilities);
    }

    @java.lang.Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static AppointmentWithVitalStage builder() {
        return new Builder();
    }

    public interface AppointmentWithVitalStage {
        WithinRadiusStage appointmentWithVital(boolean appointmentWithVital);

        Builder from(PscAreaInfoDetails other);
    }

    public interface WithinRadiusStage {
        RadiusStage withinRadius(int withinRadius);
    }

    public interface RadiusStage {
        _FinalStage radius(String radius);
    }

    public interface _FinalStage {
        PscAreaInfoDetails build();

        _FinalStage capabilities(Optional<List<LabLocationCapability>> capabilities);

        _FinalStage capabilities(List<LabLocationCapability> capabilities);
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder
            implements AppointmentWithVitalStage, WithinRadiusStage, RadiusStage, _FinalStage {
        private boolean appointmentWithVital;

        private int withinRadius;

        private String radius;

        private Optional<List<LabLocationCapability>> capabilities = Optional.empty();

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        @java.lang.Override
        public Builder from(PscAreaInfoDetails other) {
            appointmentWithVital(other.getAppointmentWithVital());
            withinRadius(other.getWithinRadius());
            radius(other.getRadius());
            capabilities(other.getCapabilities());
            return this;
        }

        @java.lang.Override
        @JsonSetter("appointment_with_vital")
        public WithinRadiusStage appointmentWithVital(boolean appointmentWithVital) {
            this.appointmentWithVital = appointmentWithVital;
            return this;
        }

        @java.lang.Override
        @JsonSetter("within_radius")
        public RadiusStage withinRadius(int withinRadius) {
            this.withinRadius = withinRadius;
            return this;
        }

        @java.lang.Override
        @JsonSetter("radius")
        public _FinalStage radius(String radius) {
            this.radius = radius;
            return this;
        }

        @java.lang.Override
        public _FinalStage capabilities(List<LabLocationCapability> capabilities) {
            this.capabilities = Optional.of(capabilities);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "capabilities", nulls = Nulls.SKIP)
        public _FinalStage capabilities(Optional<List<LabLocationCapability>> capabilities) {
            this.capabilities = capabilities;
            return this;
        }

        @java.lang.Override
        public PscAreaInfoDetails build() {
            return new PscAreaInfoDetails(
                    appointmentWithVital, withinRadius, radius, capabilities, additionalProperties);
        }
    }
}
