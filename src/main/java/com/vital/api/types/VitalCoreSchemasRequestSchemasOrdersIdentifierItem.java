/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.vital.api.types;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.vital.api.core.ObjectMappers;
import java.util.HashMap;
import java.util.Map;
import java.util.Objects;

@JsonInclude(JsonInclude.Include.NON_EMPTY)
@JsonDeserialize(builder = VitalCoreSchemasRequestSchemasOrdersIdentifierItem.Builder.class)
public final class VitalCoreSchemasRequestSchemasOrdersIdentifierItem {
    private final String value;

    private final String system;

    private final Map<String, Object> additionalProperties;

    private VitalCoreSchemasRequestSchemasOrdersIdentifierItem(
            String value, String system, Map<String, Object> additionalProperties) {
        this.value = value;
        this.system = system;
        this.additionalProperties = additionalProperties;
    }

    @JsonProperty("value")
    public String getValue() {
        return value;
    }

    @JsonProperty("system")
    public String getSystem() {
        return system;
    }

    @Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof VitalCoreSchemasRequestSchemasOrdersIdentifierItem
                && equalTo((VitalCoreSchemasRequestSchemasOrdersIdentifierItem) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(VitalCoreSchemasRequestSchemasOrdersIdentifierItem other) {
        return value.equals(other.value) && system.equals(other.system);
    }

    @Override
    public int hashCode() {
        return Objects.hash(this.value, this.system);
    }

    @Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static ValueStage builder() {
        return new Builder();
    }

    public interface ValueStage {
        SystemStage value(String value);

        Builder from(VitalCoreSchemasRequestSchemasOrdersIdentifierItem other);
    }

    public interface SystemStage {
        _FinalStage system(String system);
    }

    public interface _FinalStage {
        VitalCoreSchemasRequestSchemasOrdersIdentifierItem build();
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder implements ValueStage, SystemStage, _FinalStage {
        private String value;

        private String system;

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        @Override
        public Builder from(VitalCoreSchemasRequestSchemasOrdersIdentifierItem other) {
            value(other.getValue());
            system(other.getSystem());
            return this;
        }

        @Override
        @JsonSetter("value")
        public SystemStage value(String value) {
            this.value = value;
            return this;
        }

        @Override
        @JsonSetter("system")
        public _FinalStage system(String system) {
            this.system = system;
            return this;
        }

        @Override
        public VitalCoreSchemasRequestSchemasOrdersIdentifierItem build() {
            return new VitalCoreSchemasRequestSchemasOrdersIdentifierItem(value, system, additionalProperties);
        }
    }
}
