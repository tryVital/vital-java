/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.vital.api.types;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.annotation.Nulls;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.vital.api.core.ObjectMappers;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Objects;

@JsonInclude(JsonInclude.Include.NON_EMPTY)
@JsonDeserialize(builder = PostOrderPhysician.Builder.class)
public final class PostOrderPhysician {
    private final String resourceType;

    private final List<VitalCoreSchemasRequestSchemasOrdersNameItem> name;

    private final List<TelecomItem> telecom;

    private final List<VitalCoreSchemasRequestSchemasOrdersIdentifierItem> identifier;

    private final List<QualificationItem> qualification;

    private final Map<String, Object> additionalProperties;

    private PostOrderPhysician(
            String resourceType,
            List<VitalCoreSchemasRequestSchemasOrdersNameItem> name,
            List<TelecomItem> telecom,
            List<VitalCoreSchemasRequestSchemasOrdersIdentifierItem> identifier,
            List<QualificationItem> qualification,
            Map<String, Object> additionalProperties) {
        this.resourceType = resourceType;
        this.name = name;
        this.telecom = telecom;
        this.identifier = identifier;
        this.qualification = qualification;
        this.additionalProperties = additionalProperties;
    }

    @JsonProperty("resourceType")
    public String getResourceType() {
        return resourceType;
    }

    @JsonProperty("name")
    public List<VitalCoreSchemasRequestSchemasOrdersNameItem> getName() {
        return name;
    }

    @JsonProperty("telecom")
    public List<TelecomItem> getTelecom() {
        return telecom;
    }

    @JsonProperty("identifier")
    public List<VitalCoreSchemasRequestSchemasOrdersIdentifierItem> getIdentifier() {
        return identifier;
    }

    @JsonProperty("qualification")
    public List<QualificationItem> getQualification() {
        return qualification;
    }

    @Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof PostOrderPhysician && equalTo((PostOrderPhysician) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(PostOrderPhysician other) {
        return resourceType.equals(other.resourceType)
                && name.equals(other.name)
                && telecom.equals(other.telecom)
                && identifier.equals(other.identifier)
                && qualification.equals(other.qualification);
    }

    @Override
    public int hashCode() {
        return Objects.hash(this.resourceType, this.name, this.telecom, this.identifier, this.qualification);
    }

    @Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static ResourceTypeStage builder() {
        return new Builder();
    }

    public interface ResourceTypeStage {
        _FinalStage resourceType(String resourceType);

        Builder from(PostOrderPhysician other);
    }

    public interface _FinalStage {
        PostOrderPhysician build();

        _FinalStage name(List<VitalCoreSchemasRequestSchemasOrdersNameItem> name);

        _FinalStage addName(VitalCoreSchemasRequestSchemasOrdersNameItem name);

        _FinalStage addAllName(List<VitalCoreSchemasRequestSchemasOrdersNameItem> name);

        _FinalStage telecom(List<TelecomItem> telecom);

        _FinalStage addTelecom(TelecomItem telecom);

        _FinalStage addAllTelecom(List<TelecomItem> telecom);

        _FinalStage identifier(List<VitalCoreSchemasRequestSchemasOrdersIdentifierItem> identifier);

        _FinalStage addIdentifier(VitalCoreSchemasRequestSchemasOrdersIdentifierItem identifier);

        _FinalStage addAllIdentifier(List<VitalCoreSchemasRequestSchemasOrdersIdentifierItem> identifier);

        _FinalStage qualification(List<QualificationItem> qualification);

        _FinalStage addQualification(QualificationItem qualification);

        _FinalStage addAllQualification(List<QualificationItem> qualification);
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder implements ResourceTypeStage, _FinalStage {
        private String resourceType;

        private List<QualificationItem> qualification = new ArrayList<>();

        private List<VitalCoreSchemasRequestSchemasOrdersIdentifierItem> identifier = new ArrayList<>();

        private List<TelecomItem> telecom = new ArrayList<>();

        private List<VitalCoreSchemasRequestSchemasOrdersNameItem> name = new ArrayList<>();

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        @Override
        public Builder from(PostOrderPhysician other) {
            resourceType(other.getResourceType());
            name(other.getName());
            telecom(other.getTelecom());
            identifier(other.getIdentifier());
            qualification(other.getQualification());
            return this;
        }

        @Override
        @JsonSetter("resourceType")
        public _FinalStage resourceType(String resourceType) {
            this.resourceType = resourceType;
            return this;
        }

        @Override
        public _FinalStage addAllQualification(List<QualificationItem> qualification) {
            this.qualification.addAll(qualification);
            return this;
        }

        @Override
        public _FinalStage addQualification(QualificationItem qualification) {
            this.qualification.add(qualification);
            return this;
        }

        @Override
        @JsonSetter(value = "qualification", nulls = Nulls.SKIP)
        public _FinalStage qualification(List<QualificationItem> qualification) {
            this.qualification.clear();
            this.qualification.addAll(qualification);
            return this;
        }

        @Override
        public _FinalStage addAllIdentifier(List<VitalCoreSchemasRequestSchemasOrdersIdentifierItem> identifier) {
            this.identifier.addAll(identifier);
            return this;
        }

        @Override
        public _FinalStage addIdentifier(VitalCoreSchemasRequestSchemasOrdersIdentifierItem identifier) {
            this.identifier.add(identifier);
            return this;
        }

        @Override
        @JsonSetter(value = "identifier", nulls = Nulls.SKIP)
        public _FinalStage identifier(List<VitalCoreSchemasRequestSchemasOrdersIdentifierItem> identifier) {
            this.identifier.clear();
            this.identifier.addAll(identifier);
            return this;
        }

        @Override
        public _FinalStage addAllTelecom(List<TelecomItem> telecom) {
            this.telecom.addAll(telecom);
            return this;
        }

        @Override
        public _FinalStage addTelecom(TelecomItem telecom) {
            this.telecom.add(telecom);
            return this;
        }

        @Override
        @JsonSetter(value = "telecom", nulls = Nulls.SKIP)
        public _FinalStage telecom(List<TelecomItem> telecom) {
            this.telecom.clear();
            this.telecom.addAll(telecom);
            return this;
        }

        @Override
        public _FinalStage addAllName(List<VitalCoreSchemasRequestSchemasOrdersNameItem> name) {
            this.name.addAll(name);
            return this;
        }

        @Override
        public _FinalStage addName(VitalCoreSchemasRequestSchemasOrdersNameItem name) {
            this.name.add(name);
            return this;
        }

        @Override
        @JsonSetter(value = "name", nulls = Nulls.SKIP)
        public _FinalStage name(List<VitalCoreSchemasRequestSchemasOrdersNameItem> name) {
            this.name.clear();
            this.name.addAll(name);
            return this;
        }

        @Override
        public PostOrderPhysician build() {
            return new PostOrderPhysician(resourceType, name, telecom, identifier, qualification, additionalProperties);
        }
    }
}
