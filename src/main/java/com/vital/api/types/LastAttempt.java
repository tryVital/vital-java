/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.vital.api.types;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.vital.api.core.ObjectMappers;
import java.util.HashMap;
import java.util.Map;
import java.util.Objects;

@JsonInclude(JsonInclude.Include.NON_EMPTY)
@JsonDeserialize(builder = LastAttempt.Builder.class)
public final class LastAttempt {
    private final String timestamp;

    private final AttemptStatus status;

    private final Map<String, Object> additionalProperties;

    private LastAttempt(String timestamp, AttemptStatus status, Map<String, Object> additionalProperties) {
        this.timestamp = timestamp;
        this.status = status;
        this.additionalProperties = additionalProperties;
    }

    @JsonProperty("timestamp")
    public String getTimestamp() {
        return timestamp;
    }

    @JsonProperty("status")
    public AttemptStatus getStatus() {
        return status;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof LastAttempt && equalTo((LastAttempt) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(LastAttempt other) {
        return timestamp.equals(other.timestamp) && status.equals(other.status);
    }

    @java.lang.Override
    public int hashCode() {
        return Objects.hash(this.timestamp, this.status);
    }

    @java.lang.Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static TimestampStage builder() {
        return new Builder();
    }

    public interface TimestampStage {
        StatusStage timestamp(String timestamp);

        Builder from(LastAttempt other);
    }

    public interface StatusStage {
        _FinalStage status(AttemptStatus status);
    }

    public interface _FinalStage {
        LastAttempt build();
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder implements TimestampStage, StatusStage, _FinalStage {
        private String timestamp;

        private AttemptStatus status;

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        @java.lang.Override
        public Builder from(LastAttempt other) {
            timestamp(other.getTimestamp());
            status(other.getStatus());
            return this;
        }

        @java.lang.Override
        @JsonSetter("timestamp")
        public StatusStage timestamp(String timestamp) {
            this.timestamp = timestamp;
            return this;
        }

        @java.lang.Override
        @JsonSetter("status")
        public _FinalStage status(AttemptStatus status) {
            this.status = status;
            return this;
        }

        @java.lang.Override
        public LastAttempt build() {
            return new LastAttempt(timestamp, status, additionalProperties);
        }
    }
}
