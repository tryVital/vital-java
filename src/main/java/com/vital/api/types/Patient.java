/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.vital.api.types;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.annotation.Nulls;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.vital.api.core.ObjectMappers;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Objects;

@JsonInclude(JsonInclude.Include.NON_EMPTY)
@JsonDeserialize(builder = Patient.Builder.class)
public final class Patient {
    private final PatientBirthDate birthDate;

    private final List<VitalCoreProvidersLabTestLabsSchemasResultsFhirNameItem> name;

    private final String gender;

    private final List<VitalCoreProvidersLabTestLabsSchemasResultsFhirIdentifierItem> identifier;

    private final Map<String, Object> additionalProperties;

    private Patient(
            PatientBirthDate birthDate,
            List<VitalCoreProvidersLabTestLabsSchemasResultsFhirNameItem> name,
            String gender,
            List<VitalCoreProvidersLabTestLabsSchemasResultsFhirIdentifierItem> identifier,
            Map<String, Object> additionalProperties) {
        this.birthDate = birthDate;
        this.name = name;
        this.gender = gender;
        this.identifier = identifier;
        this.additionalProperties = additionalProperties;
    }

    @JsonProperty("birthDate")
    public PatientBirthDate getBirthDate() {
        return birthDate;
    }

    @JsonProperty("name")
    public List<VitalCoreProvidersLabTestLabsSchemasResultsFhirNameItem> getName() {
        return name;
    }

    @JsonProperty("gender")
    public String getGender() {
        return gender;
    }

    @JsonProperty("identifier")
    public List<VitalCoreProvidersLabTestLabsSchemasResultsFhirIdentifierItem> getIdentifier() {
        return identifier;
    }

    @Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof Patient && equalTo((Patient) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(Patient other) {
        return birthDate.equals(other.birthDate)
                && name.equals(other.name)
                && gender.equals(other.gender)
                && identifier.equals(other.identifier);
    }

    @Override
    public int hashCode() {
        return Objects.hash(this.birthDate, this.name, this.gender, this.identifier);
    }

    @Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static BirthDateStage builder() {
        return new Builder();
    }

    public interface BirthDateStage {
        GenderStage birthDate(PatientBirthDate birthDate);

        Builder from(Patient other);
    }

    public interface GenderStage {
        _FinalStage gender(String gender);
    }

    public interface _FinalStage {
        Patient build();

        _FinalStage name(List<VitalCoreProvidersLabTestLabsSchemasResultsFhirNameItem> name);

        _FinalStage addName(VitalCoreProvidersLabTestLabsSchemasResultsFhirNameItem name);

        _FinalStage addAllName(List<VitalCoreProvidersLabTestLabsSchemasResultsFhirNameItem> name);

        _FinalStage identifier(List<VitalCoreProvidersLabTestLabsSchemasResultsFhirIdentifierItem> identifier);

        _FinalStage addIdentifier(VitalCoreProvidersLabTestLabsSchemasResultsFhirIdentifierItem identifier);

        _FinalStage addAllIdentifier(List<VitalCoreProvidersLabTestLabsSchemasResultsFhirIdentifierItem> identifier);
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder implements BirthDateStage, GenderStage, _FinalStage {
        private PatientBirthDate birthDate;

        private String gender;

        private List<VitalCoreProvidersLabTestLabsSchemasResultsFhirIdentifierItem> identifier = new ArrayList<>();

        private List<VitalCoreProvidersLabTestLabsSchemasResultsFhirNameItem> name = new ArrayList<>();

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        @Override
        public Builder from(Patient other) {
            birthDate(other.getBirthDate());
            name(other.getName());
            gender(other.getGender());
            identifier(other.getIdentifier());
            return this;
        }

        @Override
        @JsonSetter("birthDate")
        public GenderStage birthDate(PatientBirthDate birthDate) {
            this.birthDate = birthDate;
            return this;
        }

        @Override
        @JsonSetter("gender")
        public _FinalStage gender(String gender) {
            this.gender = gender;
            return this;
        }

        @Override
        public _FinalStage addAllIdentifier(
                List<VitalCoreProvidersLabTestLabsSchemasResultsFhirIdentifierItem> identifier) {
            this.identifier.addAll(identifier);
            return this;
        }

        @Override
        public _FinalStage addIdentifier(VitalCoreProvidersLabTestLabsSchemasResultsFhirIdentifierItem identifier) {
            this.identifier.add(identifier);
            return this;
        }

        @Override
        @JsonSetter(value = "identifier", nulls = Nulls.SKIP)
        public _FinalStage identifier(List<VitalCoreProvidersLabTestLabsSchemasResultsFhirIdentifierItem> identifier) {
            this.identifier.clear();
            this.identifier.addAll(identifier);
            return this;
        }

        @Override
        public _FinalStage addAllName(List<VitalCoreProvidersLabTestLabsSchemasResultsFhirNameItem> name) {
            this.name.addAll(name);
            return this;
        }

        @Override
        public _FinalStage addName(VitalCoreProvidersLabTestLabsSchemasResultsFhirNameItem name) {
            this.name.add(name);
            return this;
        }

        @Override
        @JsonSetter(value = "name", nulls = Nulls.SKIP)
        public _FinalStage name(List<VitalCoreProvidersLabTestLabsSchemasResultsFhirNameItem> name) {
            this.name.clear();
            this.name.addAll(name);
            return this;
        }

        @Override
        public Patient build() {
            return new Patient(birthDate, name, gender, identifier, additionalProperties);
        }
    }
}
