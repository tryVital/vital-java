/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.vital.api.types;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.annotation.Nulls;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.vital.api.core.ObjectMappers;
import java.util.HashMap;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;

@JsonInclude(JsonInclude.Include.NON_EMPTY)
@JsonDeserialize(builder = GuarantorDetails.Builder.class)
public final class GuarantorDetails {
    private final String firstName;

    private final String lastName;

    private final Address address;

    private final String phoneNumber;

    private final Optional<Integer> householdIncome;

    private final Optional<Integer> householdSize;

    private final Optional<String> email;

    private final Map<String, Object> additionalProperties;

    private GuarantorDetails(
            String firstName,
            String lastName,
            Address address,
            String phoneNumber,
            Optional<Integer> householdIncome,
            Optional<Integer> householdSize,
            Optional<String> email,
            Map<String, Object> additionalProperties) {
        this.firstName = firstName;
        this.lastName = lastName;
        this.address = address;
        this.phoneNumber = phoneNumber;
        this.householdIncome = householdIncome;
        this.householdSize = householdSize;
        this.email = email;
        this.additionalProperties = additionalProperties;
    }

    @JsonProperty("first_name")
    public String getFirstName() {
        return firstName;
    }

    @JsonProperty("last_name")
    public String getLastName() {
        return lastName;
    }

    @JsonProperty("address")
    public Address getAddress() {
        return address;
    }

    @JsonProperty("phone_number")
    public String getPhoneNumber() {
        return phoneNumber;
    }

    @JsonProperty("household_income")
    public Optional<Integer> getHouseholdIncome() {
        return householdIncome;
    }

    @JsonProperty("household_size")
    public Optional<Integer> getHouseholdSize() {
        return householdSize;
    }

    @JsonProperty("email")
    public Optional<String> getEmail() {
        return email;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof GuarantorDetails && equalTo((GuarantorDetails) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(GuarantorDetails other) {
        return firstName.equals(other.firstName)
                && lastName.equals(other.lastName)
                && address.equals(other.address)
                && phoneNumber.equals(other.phoneNumber)
                && householdIncome.equals(other.householdIncome)
                && householdSize.equals(other.householdSize)
                && email.equals(other.email);
    }

    @java.lang.Override
    public int hashCode() {
        return Objects.hash(
                this.firstName,
                this.lastName,
                this.address,
                this.phoneNumber,
                this.householdIncome,
                this.householdSize,
                this.email);
    }

    @java.lang.Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static FirstNameStage builder() {
        return new Builder();
    }

    public interface FirstNameStage {
        LastNameStage firstName(String firstName);

        Builder from(GuarantorDetails other);
    }

    public interface LastNameStage {
        AddressStage lastName(String lastName);
    }

    public interface AddressStage {
        PhoneNumberStage address(Address address);
    }

    public interface PhoneNumberStage {
        _FinalStage phoneNumber(String phoneNumber);
    }

    public interface _FinalStage {
        GuarantorDetails build();

        _FinalStage householdIncome(Optional<Integer> householdIncome);

        _FinalStage householdIncome(Integer householdIncome);

        _FinalStage householdSize(Optional<Integer> householdSize);

        _FinalStage householdSize(Integer householdSize);

        _FinalStage email(Optional<String> email);

        _FinalStage email(String email);
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder
            implements FirstNameStage, LastNameStage, AddressStage, PhoneNumberStage, _FinalStage {
        private String firstName;

        private String lastName;

        private Address address;

        private String phoneNumber;

        private Optional<String> email = Optional.empty();

        private Optional<Integer> householdSize = Optional.empty();

        private Optional<Integer> householdIncome = Optional.empty();

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        @java.lang.Override
        public Builder from(GuarantorDetails other) {
            firstName(other.getFirstName());
            lastName(other.getLastName());
            address(other.getAddress());
            phoneNumber(other.getPhoneNumber());
            householdIncome(other.getHouseholdIncome());
            householdSize(other.getHouseholdSize());
            email(other.getEmail());
            return this;
        }

        @java.lang.Override
        @JsonSetter("first_name")
        public LastNameStage firstName(String firstName) {
            this.firstName = firstName;
            return this;
        }

        @java.lang.Override
        @JsonSetter("last_name")
        public AddressStage lastName(String lastName) {
            this.lastName = lastName;
            return this;
        }

        @java.lang.Override
        @JsonSetter("address")
        public PhoneNumberStage address(Address address) {
            this.address = address;
            return this;
        }

        @java.lang.Override
        @JsonSetter("phone_number")
        public _FinalStage phoneNumber(String phoneNumber) {
            this.phoneNumber = phoneNumber;
            return this;
        }

        @java.lang.Override
        public _FinalStage email(String email) {
            this.email = Optional.of(email);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "email", nulls = Nulls.SKIP)
        public _FinalStage email(Optional<String> email) {
            this.email = email;
            return this;
        }

        @java.lang.Override
        public _FinalStage householdSize(Integer householdSize) {
            this.householdSize = Optional.of(householdSize);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "household_size", nulls = Nulls.SKIP)
        public _FinalStage householdSize(Optional<Integer> householdSize) {
            this.householdSize = householdSize;
            return this;
        }

        @java.lang.Override
        public _FinalStage householdIncome(Integer householdIncome) {
            this.householdIncome = Optional.of(householdIncome);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "household_income", nulls = Nulls.SKIP)
        public _FinalStage householdIncome(Optional<Integer> householdIncome) {
            this.householdIncome = householdIncome;
            return this;
        }

        @java.lang.Override
        public GuarantorDetails build() {
            return new GuarantorDetails(
                    firstName,
                    lastName,
                    address,
                    phoneNumber,
                    householdIncome,
                    householdSize,
                    email,
                    additionalProperties);
        }
    }
}
