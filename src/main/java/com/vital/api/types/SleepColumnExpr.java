/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.vital.api.types;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.vital.api.core.ObjectMappers;
import java.util.HashMap;
import java.util.Map;
import java.util.Objects;

@JsonInclude(JsonInclude.Include.NON_EMPTY)
@JsonDeserialize(builder = SleepColumnExpr.Builder.class)
public final class SleepColumnExpr {
    private final SleepColumnExprSleep sleep;

    private final Map<String, Object> additionalProperties;

    private SleepColumnExpr(SleepColumnExprSleep sleep, Map<String, Object> additionalProperties) {
        this.sleep = sleep;
        this.additionalProperties = additionalProperties;
    }

    @JsonProperty("sleep")
    public SleepColumnExprSleep getSleep() {
        return sleep;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof SleepColumnExpr && equalTo((SleepColumnExpr) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(SleepColumnExpr other) {
        return sleep.equals(other.sleep);
    }

    @java.lang.Override
    public int hashCode() {
        return Objects.hash(this.sleep);
    }

    @java.lang.Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static SleepStage builder() {
        return new Builder();
    }

    public interface SleepStage {
        _FinalStage sleep(SleepColumnExprSleep sleep);

        Builder from(SleepColumnExpr other);
    }

    public interface _FinalStage {
        SleepColumnExpr build();
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder implements SleepStage, _FinalStage {
        private SleepColumnExprSleep sleep;

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        @java.lang.Override
        public Builder from(SleepColumnExpr other) {
            sleep(other.getSleep());
            return this;
        }

        @java.lang.Override
        @JsonSetter("sleep")
        public _FinalStage sleep(SleepColumnExprSleep sleep) {
            this.sleep = sleep;
            return this;
        }

        @java.lang.Override
        public SleepColumnExpr build() {
            return new SleepColumnExpr(sleep, additionalProperties);
        }
    }
}
