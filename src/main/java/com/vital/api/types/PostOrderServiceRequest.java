/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.vital.api.types;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.annotation.Nulls;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.vital.api.core.ObjectMappers;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Objects;

@JsonInclude(JsonInclude.Include.NON_EMPTY)
@JsonDeserialize(builder = PostOrderServiceRequest.Builder.class)
public final class PostOrderServiceRequest {
    private final String resourceType;

    private final List<VitalCoreSchemasRequestSchemasOrdersIdentifierItem> identifier;

    private final String status;

    private final String intent;

    private final Priority priority;

    private final Subject subject;

    private final Requester requester;

    private final Map<String, Object> additionalProperties;

    private PostOrderServiceRequest(
            String resourceType,
            List<VitalCoreSchemasRequestSchemasOrdersIdentifierItem> identifier,
            String status,
            String intent,
            Priority priority,
            Subject subject,
            Requester requester,
            Map<String, Object> additionalProperties) {
        this.resourceType = resourceType;
        this.identifier = identifier;
        this.status = status;
        this.intent = intent;
        this.priority = priority;
        this.subject = subject;
        this.requester = requester;
        this.additionalProperties = additionalProperties;
    }

    @JsonProperty("resourceType")
    public String getResourceType() {
        return resourceType;
    }

    @JsonProperty("identifier")
    public List<VitalCoreSchemasRequestSchemasOrdersIdentifierItem> getIdentifier() {
        return identifier;
    }

    @JsonProperty("status")
    public String getStatus() {
        return status;
    }

    @JsonProperty("intent")
    public String getIntent() {
        return intent;
    }

    @JsonProperty("priority")
    public Priority getPriority() {
        return priority;
    }

    @JsonProperty("subject")
    public Subject getSubject() {
        return subject;
    }

    @JsonProperty("requester")
    public Requester getRequester() {
        return requester;
    }

    @Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof PostOrderServiceRequest && equalTo((PostOrderServiceRequest) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(PostOrderServiceRequest other) {
        return resourceType.equals(other.resourceType)
                && identifier.equals(other.identifier)
                && status.equals(other.status)
                && intent.equals(other.intent)
                && priority.equals(other.priority)
                && subject.equals(other.subject)
                && requester.equals(other.requester);
    }

    @Override
    public int hashCode() {
        return Objects.hash(
                this.resourceType,
                this.identifier,
                this.status,
                this.intent,
                this.priority,
                this.subject,
                this.requester);
    }

    @Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static ResourceTypeStage builder() {
        return new Builder();
    }

    public interface ResourceTypeStage {
        StatusStage resourceType(String resourceType);

        Builder from(PostOrderServiceRequest other);
    }

    public interface StatusStage {
        IntentStage status(String status);
    }

    public interface IntentStage {
        PriorityStage intent(String intent);
    }

    public interface PriorityStage {
        SubjectStage priority(Priority priority);
    }

    public interface SubjectStage {
        RequesterStage subject(Subject subject);
    }

    public interface RequesterStage {
        _FinalStage requester(Requester requester);
    }

    public interface _FinalStage {
        PostOrderServiceRequest build();

        _FinalStage identifier(List<VitalCoreSchemasRequestSchemasOrdersIdentifierItem> identifier);

        _FinalStage addIdentifier(VitalCoreSchemasRequestSchemasOrdersIdentifierItem identifier);

        _FinalStage addAllIdentifier(List<VitalCoreSchemasRequestSchemasOrdersIdentifierItem> identifier);
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder
            implements ResourceTypeStage,
                    StatusStage,
                    IntentStage,
                    PriorityStage,
                    SubjectStage,
                    RequesterStage,
                    _FinalStage {
        private String resourceType;

        private String status;

        private String intent;

        private Priority priority;

        private Subject subject;

        private Requester requester;

        private List<VitalCoreSchemasRequestSchemasOrdersIdentifierItem> identifier = new ArrayList<>();

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        @Override
        public Builder from(PostOrderServiceRequest other) {
            resourceType(other.getResourceType());
            identifier(other.getIdentifier());
            status(other.getStatus());
            intent(other.getIntent());
            priority(other.getPriority());
            subject(other.getSubject());
            requester(other.getRequester());
            return this;
        }

        @Override
        @JsonSetter("resourceType")
        public StatusStage resourceType(String resourceType) {
            this.resourceType = resourceType;
            return this;
        }

        @Override
        @JsonSetter("status")
        public IntentStage status(String status) {
            this.status = status;
            return this;
        }

        @Override
        @JsonSetter("intent")
        public PriorityStage intent(String intent) {
            this.intent = intent;
            return this;
        }

        @Override
        @JsonSetter("priority")
        public SubjectStage priority(Priority priority) {
            this.priority = priority;
            return this;
        }

        @Override
        @JsonSetter("subject")
        public RequesterStage subject(Subject subject) {
            this.subject = subject;
            return this;
        }

        @Override
        @JsonSetter("requester")
        public _FinalStage requester(Requester requester) {
            this.requester = requester;
            return this;
        }

        @Override
        public _FinalStage addAllIdentifier(List<VitalCoreSchemasRequestSchemasOrdersIdentifierItem> identifier) {
            this.identifier.addAll(identifier);
            return this;
        }

        @Override
        public _FinalStage addIdentifier(VitalCoreSchemasRequestSchemasOrdersIdentifierItem identifier) {
            this.identifier.add(identifier);
            return this;
        }

        @Override
        @JsonSetter(value = "identifier", nulls = Nulls.SKIP)
        public _FinalStage identifier(List<VitalCoreSchemasRequestSchemasOrdersIdentifierItem> identifier) {
            this.identifier.clear();
            this.identifier.addAll(identifier);
            return this;
        }

        @Override
        public PostOrderServiceRequest build() {
            return new PostOrderServiceRequest(
                    resourceType, identifier, status, intent, priority, subject, requester, additionalProperties);
        }
    }
}
