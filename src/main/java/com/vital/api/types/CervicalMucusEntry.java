/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.vital.api.types;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.vital.api.core.ObjectMappers;
import java.util.HashMap;
import java.util.Map;
import java.util.Objects;

@JsonInclude(JsonInclude.Include.NON_EMPTY)
@JsonDeserialize(builder = CervicalMucusEntry.Builder.class)
public final class CervicalMucusEntry {
    private final String date;

    private final CervicalMucusEntryQuality quality;

    private final Map<String, Object> additionalProperties;

    private CervicalMucusEntry(
            String date, CervicalMucusEntryQuality quality, Map<String, Object> additionalProperties) {
        this.date = date;
        this.quality = quality;
        this.additionalProperties = additionalProperties;
    }

    @JsonProperty("date")
    public String getDate() {
        return date;
    }

    @JsonProperty("quality")
    public CervicalMucusEntryQuality getQuality() {
        return quality;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof CervicalMucusEntry && equalTo((CervicalMucusEntry) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(CervicalMucusEntry other) {
        return date.equals(other.date) && quality.equals(other.quality);
    }

    @java.lang.Override
    public int hashCode() {
        return Objects.hash(this.date, this.quality);
    }

    @java.lang.Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static DateStage builder() {
        return new Builder();
    }

    public interface DateStage {
        QualityStage date(String date);

        Builder from(CervicalMucusEntry other);
    }

    public interface QualityStage {
        _FinalStage quality(CervicalMucusEntryQuality quality);
    }

    public interface _FinalStage {
        CervicalMucusEntry build();
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder implements DateStage, QualityStage, _FinalStage {
        private String date;

        private CervicalMucusEntryQuality quality;

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        @java.lang.Override
        public Builder from(CervicalMucusEntry other) {
            date(other.getDate());
            quality(other.getQuality());
            return this;
        }

        @java.lang.Override
        @JsonSetter("date")
        public QualityStage date(String date) {
            this.date = date;
            return this;
        }

        @java.lang.Override
        @JsonSetter("quality")
        public _FinalStage quality(CervicalMucusEntryQuality quality) {
            this.quality = quality;
            return this;
        }

        @java.lang.Override
        public CervicalMucusEntry build() {
            return new CervicalMucusEntry(date, quality, additionalProperties);
        }
    }
}
