/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.vital.api.types;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.annotation.Nulls;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.vital.api.core.ObjectMappers;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Objects;

@JsonInclude(JsonInclude.Include.NON_EMPTY)
@JsonDeserialize(builder = PostOrderCoverage.Builder.class)
public final class PostOrderCoverage {
    private final String resourceType;

    private final String network;

    private final String subscriberId;

    private final String status;

    private final Beneficiary beneficiary;

    private final List<VitalCoreSchemasRequestSchemasOrdersIdentifierItem> identifier;

    private final List<PayorItem> payor;

    private final Relationship relationship;

    private final Map<String, Object> additionalProperties;

    private PostOrderCoverage(
            String resourceType,
            String network,
            String subscriberId,
            String status,
            Beneficiary beneficiary,
            List<VitalCoreSchemasRequestSchemasOrdersIdentifierItem> identifier,
            List<PayorItem> payor,
            Relationship relationship,
            Map<String, Object> additionalProperties) {
        this.resourceType = resourceType;
        this.network = network;
        this.subscriberId = subscriberId;
        this.status = status;
        this.beneficiary = beneficiary;
        this.identifier = identifier;
        this.payor = payor;
        this.relationship = relationship;
        this.additionalProperties = additionalProperties;
    }

    @JsonProperty("resourceType")
    public String getResourceType() {
        return resourceType;
    }

    @JsonProperty("network")
    public String getNetwork() {
        return network;
    }

    @JsonProperty("subscriberId")
    public String getSubscriberId() {
        return subscriberId;
    }

    @JsonProperty("status")
    public String getStatus() {
        return status;
    }

    @JsonProperty("beneficiary")
    public Beneficiary getBeneficiary() {
        return beneficiary;
    }

    @JsonProperty("identifier")
    public List<VitalCoreSchemasRequestSchemasOrdersIdentifierItem> getIdentifier() {
        return identifier;
    }

    @JsonProperty("payor")
    public List<PayorItem> getPayor() {
        return payor;
    }

    @JsonProperty("relationship")
    public Relationship getRelationship() {
        return relationship;
    }

    @Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof PostOrderCoverage && equalTo((PostOrderCoverage) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(PostOrderCoverage other) {
        return resourceType.equals(other.resourceType)
                && network.equals(other.network)
                && subscriberId.equals(other.subscriberId)
                && status.equals(other.status)
                && beneficiary.equals(other.beneficiary)
                && identifier.equals(other.identifier)
                && payor.equals(other.payor)
                && relationship.equals(other.relationship);
    }

    @Override
    public int hashCode() {
        return Objects.hash(
                this.resourceType,
                this.network,
                this.subscriberId,
                this.status,
                this.beneficiary,
                this.identifier,
                this.payor,
                this.relationship);
    }

    @Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static ResourceTypeStage builder() {
        return new Builder();
    }

    public interface ResourceTypeStage {
        NetworkStage resourceType(String resourceType);

        Builder from(PostOrderCoverage other);
    }

    public interface NetworkStage {
        SubscriberIdStage network(String network);
    }

    public interface SubscriberIdStage {
        StatusStage subscriberId(String subscriberId);
    }

    public interface StatusStage {
        BeneficiaryStage status(String status);
    }

    public interface BeneficiaryStage {
        RelationshipStage beneficiary(Beneficiary beneficiary);
    }

    public interface RelationshipStage {
        _FinalStage relationship(Relationship relationship);
    }

    public interface _FinalStage {
        PostOrderCoverage build();

        _FinalStage identifier(List<VitalCoreSchemasRequestSchemasOrdersIdentifierItem> identifier);

        _FinalStage addIdentifier(VitalCoreSchemasRequestSchemasOrdersIdentifierItem identifier);

        _FinalStage addAllIdentifier(List<VitalCoreSchemasRequestSchemasOrdersIdentifierItem> identifier);

        _FinalStage payor(List<PayorItem> payor);

        _FinalStage addPayor(PayorItem payor);

        _FinalStage addAllPayor(List<PayorItem> payor);
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder
            implements ResourceTypeStage,
                    NetworkStage,
                    SubscriberIdStage,
                    StatusStage,
                    BeneficiaryStage,
                    RelationshipStage,
                    _FinalStage {
        private String resourceType;

        private String network;

        private String subscriberId;

        private String status;

        private Beneficiary beneficiary;

        private Relationship relationship;

        private List<PayorItem> payor = new ArrayList<>();

        private List<VitalCoreSchemasRequestSchemasOrdersIdentifierItem> identifier = new ArrayList<>();

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        @Override
        public Builder from(PostOrderCoverage other) {
            resourceType(other.getResourceType());
            network(other.getNetwork());
            subscriberId(other.getSubscriberId());
            status(other.getStatus());
            beneficiary(other.getBeneficiary());
            identifier(other.getIdentifier());
            payor(other.getPayor());
            relationship(other.getRelationship());
            return this;
        }

        @Override
        @JsonSetter("resourceType")
        public NetworkStage resourceType(String resourceType) {
            this.resourceType = resourceType;
            return this;
        }

        @Override
        @JsonSetter("network")
        public SubscriberIdStage network(String network) {
            this.network = network;
            return this;
        }

        @Override
        @JsonSetter("subscriberId")
        public StatusStage subscriberId(String subscriberId) {
            this.subscriberId = subscriberId;
            return this;
        }

        @Override
        @JsonSetter("status")
        public BeneficiaryStage status(String status) {
            this.status = status;
            return this;
        }

        @Override
        @JsonSetter("beneficiary")
        public RelationshipStage beneficiary(Beneficiary beneficiary) {
            this.beneficiary = beneficiary;
            return this;
        }

        @Override
        @JsonSetter("relationship")
        public _FinalStage relationship(Relationship relationship) {
            this.relationship = relationship;
            return this;
        }

        @Override
        public _FinalStage addAllPayor(List<PayorItem> payor) {
            this.payor.addAll(payor);
            return this;
        }

        @Override
        public _FinalStage addPayor(PayorItem payor) {
            this.payor.add(payor);
            return this;
        }

        @Override
        @JsonSetter(value = "payor", nulls = Nulls.SKIP)
        public _FinalStage payor(List<PayorItem> payor) {
            this.payor.clear();
            this.payor.addAll(payor);
            return this;
        }

        @Override
        public _FinalStage addAllIdentifier(List<VitalCoreSchemasRequestSchemasOrdersIdentifierItem> identifier) {
            this.identifier.addAll(identifier);
            return this;
        }

        @Override
        public _FinalStage addIdentifier(VitalCoreSchemasRequestSchemasOrdersIdentifierItem identifier) {
            this.identifier.add(identifier);
            return this;
        }

        @Override
        @JsonSetter(value = "identifier", nulls = Nulls.SKIP)
        public _FinalStage identifier(List<VitalCoreSchemasRequestSchemasOrdersIdentifierItem> identifier) {
            this.identifier.clear();
            this.identifier.addAll(identifier);
            return this;
        }

        @Override
        public PostOrderCoverage build() {
            return new PostOrderCoverage(
                    resourceType,
                    network,
                    subscriberId,
                    status,
                    beneficiary,
                    identifier,
                    payor,
                    relationship,
                    additionalProperties);
        }
    }
}
