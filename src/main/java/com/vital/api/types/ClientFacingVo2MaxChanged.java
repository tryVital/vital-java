/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.vital.api.types;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.vital.api.core.ObjectMappers;
import java.util.HashMap;
import java.util.Map;
import java.util.Objects;
import org.jetbrains.annotations.NotNull;

@JsonInclude(JsonInclude.Include.NON_ABSENT)
@JsonDeserialize(builder = ClientFacingVo2MaxChanged.Builder.class)
public final class ClientFacingVo2MaxChanged {
    private final ClientFacingVo2MaxChangedEventType eventType;

    private final String userId;

    private final String clientUserId;

    private final String teamId;

    private final GroupedVo2Max data;

    private final Map<String, Object> additionalProperties;

    private ClientFacingVo2MaxChanged(
            ClientFacingVo2MaxChangedEventType eventType,
            String userId,
            String clientUserId,
            String teamId,
            GroupedVo2Max data,
            Map<String, Object> additionalProperties) {
        this.eventType = eventType;
        this.userId = userId;
        this.clientUserId = clientUserId;
        this.teamId = teamId;
        this.data = data;
        this.additionalProperties = additionalProperties;
    }

    @JsonProperty("event_type")
    public ClientFacingVo2MaxChangedEventType getEventType() {
        return eventType;
    }

    @JsonProperty("user_id")
    public String getUserId() {
        return userId;
    }

    @JsonProperty("client_user_id")
    public String getClientUserId() {
        return clientUserId;
    }

    @JsonProperty("team_id")
    public String getTeamId() {
        return teamId;
    }

    @JsonProperty("data")
    public GroupedVo2Max getData() {
        return data;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof ClientFacingVo2MaxChanged && equalTo((ClientFacingVo2MaxChanged) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(ClientFacingVo2MaxChanged other) {
        return eventType.equals(other.eventType)
                && userId.equals(other.userId)
                && clientUserId.equals(other.clientUserId)
                && teamId.equals(other.teamId)
                && data.equals(other.data);
    }

    @java.lang.Override
    public int hashCode() {
        return Objects.hash(this.eventType, this.userId, this.clientUserId, this.teamId, this.data);
    }

    @java.lang.Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static EventTypeStage builder() {
        return new Builder();
    }

    public interface EventTypeStage {
        UserIdStage eventType(@NotNull ClientFacingVo2MaxChangedEventType eventType);

        Builder from(ClientFacingVo2MaxChanged other);
    }

    public interface UserIdStage {
        ClientUserIdStage userId(@NotNull String userId);
    }

    public interface ClientUserIdStage {
        TeamIdStage clientUserId(@NotNull String clientUserId);
    }

    public interface TeamIdStage {
        DataStage teamId(@NotNull String teamId);
    }

    public interface DataStage {
        _FinalStage data(@NotNull GroupedVo2Max data);
    }

    public interface _FinalStage {
        ClientFacingVo2MaxChanged build();
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder
            implements EventTypeStage, UserIdStage, ClientUserIdStage, TeamIdStage, DataStage, _FinalStage {
        private ClientFacingVo2MaxChangedEventType eventType;

        private String userId;

        private String clientUserId;

        private String teamId;

        private GroupedVo2Max data;

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        @java.lang.Override
        public Builder from(ClientFacingVo2MaxChanged other) {
            eventType(other.getEventType());
            userId(other.getUserId());
            clientUserId(other.getClientUserId());
            teamId(other.getTeamId());
            data(other.getData());
            return this;
        }

        @java.lang.Override
        @JsonSetter("event_type")
        public UserIdStage eventType(@NotNull ClientFacingVo2MaxChangedEventType eventType) {
            this.eventType = Objects.requireNonNull(eventType, "eventType must not be null");
            return this;
        }

        @java.lang.Override
        @JsonSetter("user_id")
        public ClientUserIdStage userId(@NotNull String userId) {
            this.userId = Objects.requireNonNull(userId, "userId must not be null");
            return this;
        }

        @java.lang.Override
        @JsonSetter("client_user_id")
        public TeamIdStage clientUserId(@NotNull String clientUserId) {
            this.clientUserId = Objects.requireNonNull(clientUserId, "clientUserId must not be null");
            return this;
        }

        @java.lang.Override
        @JsonSetter("team_id")
        public DataStage teamId(@NotNull String teamId) {
            this.teamId = Objects.requireNonNull(teamId, "teamId must not be null");
            return this;
        }

        @java.lang.Override
        @JsonSetter("data")
        public _FinalStage data(@NotNull GroupedVo2Max data) {
            this.data = Objects.requireNonNull(data, "data must not be null");
            return this;
        }

        @java.lang.Override
        public ClientFacingVo2MaxChanged build() {
            return new ClientFacingVo2MaxChanged(eventType, userId, clientUserId, teamId, data, additionalProperties);
        }
    }
}
