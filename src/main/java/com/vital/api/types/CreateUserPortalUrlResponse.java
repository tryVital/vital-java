/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.vital.api.types;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.vital.api.core.ObjectMappers;
import java.util.HashMap;
import java.util.Map;
import java.util.Objects;
import org.jetbrains.annotations.NotNull;

@JsonInclude(JsonInclude.Include.NON_ABSENT)
@JsonDeserialize(builder = CreateUserPortalUrlResponse.Builder.class)
public final class CreateUserPortalUrlResponse {
    private final String url;

    private final int expiresIn;

    private final Map<String, Object> additionalProperties;

    private CreateUserPortalUrlResponse(String url, int expiresIn, Map<String, Object> additionalProperties) {
        this.url = url;
        this.expiresIn = expiresIn;
        this.additionalProperties = additionalProperties;
    }

    @JsonProperty("url")
    public String getUrl() {
        return url;
    }

    @JsonProperty("expires_in")
    public int getExpiresIn() {
        return expiresIn;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof CreateUserPortalUrlResponse && equalTo((CreateUserPortalUrlResponse) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(CreateUserPortalUrlResponse other) {
        return url.equals(other.url) && expiresIn == other.expiresIn;
    }

    @java.lang.Override
    public int hashCode() {
        return Objects.hash(this.url, this.expiresIn);
    }

    @java.lang.Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static UrlStage builder() {
        return new Builder();
    }

    public interface UrlStage {
        ExpiresInStage url(@NotNull String url);

        Builder from(CreateUserPortalUrlResponse other);
    }

    public interface ExpiresInStage {
        _FinalStage expiresIn(int expiresIn);
    }

    public interface _FinalStage {
        CreateUserPortalUrlResponse build();
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder implements UrlStage, ExpiresInStage, _FinalStage {
        private String url;

        private int expiresIn;

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        @java.lang.Override
        public Builder from(CreateUserPortalUrlResponse other) {
            url(other.getUrl());
            expiresIn(other.getExpiresIn());
            return this;
        }

        @java.lang.Override
        @JsonSetter("url")
        public ExpiresInStage url(@NotNull String url) {
            this.url = Objects.requireNonNull(url, "url must not be null");
            return this;
        }

        @java.lang.Override
        @JsonSetter("expires_in")
        public _FinalStage expiresIn(int expiresIn) {
            this.expiresIn = expiresIn;
            return this;
        }

        @java.lang.Override
        public CreateUserPortalUrlResponse build() {
            return new CreateUserPortalUrlResponse(url, expiresIn, additionalProperties);
        }
    }
}
