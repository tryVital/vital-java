/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.vital.api.types;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.annotation.Nulls;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.vital.api.core.ObjectMappers;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Objects;

@JsonInclude(JsonInclude.Include.NON_EMPTY)
@JsonDeserialize(builder = PostOrderPatient.Builder.class)
public final class PostOrderPatient {
    private final String resourceType;

    private final List<VitalCoreSchemasRequestSchemasOrdersNameItem> name;

    private final List<TelecomItem> telecom;

    private final String gender;

    private final PostOrderPatientBirthDate birthDate;

    private final List<Addres> address;

    private final Map<String, Object> additionalProperties;

    private PostOrderPatient(
            String resourceType,
            List<VitalCoreSchemasRequestSchemasOrdersNameItem> name,
            List<TelecomItem> telecom,
            String gender,
            PostOrderPatientBirthDate birthDate,
            List<Addres> address,
            Map<String, Object> additionalProperties) {
        this.resourceType = resourceType;
        this.name = name;
        this.telecom = telecom;
        this.gender = gender;
        this.birthDate = birthDate;
        this.address = address;
        this.additionalProperties = additionalProperties;
    }

    @JsonProperty("resourceType")
    public String getResourceType() {
        return resourceType;
    }

    @JsonProperty("name")
    public List<VitalCoreSchemasRequestSchemasOrdersNameItem> getName() {
        return name;
    }

    @JsonProperty("telecom")
    public List<TelecomItem> getTelecom() {
        return telecom;
    }

    @JsonProperty("gender")
    public String getGender() {
        return gender;
    }

    @JsonProperty("birthDate")
    public PostOrderPatientBirthDate getBirthDate() {
        return birthDate;
    }

    @JsonProperty("address")
    public List<Addres> getAddress() {
        return address;
    }

    @Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof PostOrderPatient && equalTo((PostOrderPatient) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(PostOrderPatient other) {
        return resourceType.equals(other.resourceType)
                && name.equals(other.name)
                && telecom.equals(other.telecom)
                && gender.equals(other.gender)
                && birthDate.equals(other.birthDate)
                && address.equals(other.address);
    }

    @Override
    public int hashCode() {
        return Objects.hash(this.resourceType, this.name, this.telecom, this.gender, this.birthDate, this.address);
    }

    @Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static ResourceTypeStage builder() {
        return new Builder();
    }

    public interface ResourceTypeStage {
        GenderStage resourceType(String resourceType);

        Builder from(PostOrderPatient other);
    }

    public interface GenderStage {
        BirthDateStage gender(String gender);
    }

    public interface BirthDateStage {
        _FinalStage birthDate(PostOrderPatientBirthDate birthDate);
    }

    public interface _FinalStage {
        PostOrderPatient build();

        _FinalStage name(List<VitalCoreSchemasRequestSchemasOrdersNameItem> name);

        _FinalStage addName(VitalCoreSchemasRequestSchemasOrdersNameItem name);

        _FinalStage addAllName(List<VitalCoreSchemasRequestSchemasOrdersNameItem> name);

        _FinalStage telecom(List<TelecomItem> telecom);

        _FinalStage addTelecom(TelecomItem telecom);

        _FinalStage addAllTelecom(List<TelecomItem> telecom);

        _FinalStage address(List<Addres> address);

        _FinalStage addAddress(Addres address);

        _FinalStage addAllAddress(List<Addres> address);
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder implements ResourceTypeStage, GenderStage, BirthDateStage, _FinalStage {
        private String resourceType;

        private String gender;

        private PostOrderPatientBirthDate birthDate;

        private List<Addres> address = new ArrayList<>();

        private List<TelecomItem> telecom = new ArrayList<>();

        private List<VitalCoreSchemasRequestSchemasOrdersNameItem> name = new ArrayList<>();

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        @Override
        public Builder from(PostOrderPatient other) {
            resourceType(other.getResourceType());
            name(other.getName());
            telecom(other.getTelecom());
            gender(other.getGender());
            birthDate(other.getBirthDate());
            address(other.getAddress());
            return this;
        }

        @Override
        @JsonSetter("resourceType")
        public GenderStage resourceType(String resourceType) {
            this.resourceType = resourceType;
            return this;
        }

        @Override
        @JsonSetter("gender")
        public BirthDateStage gender(String gender) {
            this.gender = gender;
            return this;
        }

        @Override
        @JsonSetter("birthDate")
        public _FinalStage birthDate(PostOrderPatientBirthDate birthDate) {
            this.birthDate = birthDate;
            return this;
        }

        @Override
        public _FinalStage addAllAddress(List<Addres> address) {
            this.address.addAll(address);
            return this;
        }

        @Override
        public _FinalStage addAddress(Addres address) {
            this.address.add(address);
            return this;
        }

        @Override
        @JsonSetter(value = "address", nulls = Nulls.SKIP)
        public _FinalStage address(List<Addres> address) {
            this.address.clear();
            this.address.addAll(address);
            return this;
        }

        @Override
        public _FinalStage addAllTelecom(List<TelecomItem> telecom) {
            this.telecom.addAll(telecom);
            return this;
        }

        @Override
        public _FinalStage addTelecom(TelecomItem telecom) {
            this.telecom.add(telecom);
            return this;
        }

        @Override
        @JsonSetter(value = "telecom", nulls = Nulls.SKIP)
        public _FinalStage telecom(List<TelecomItem> telecom) {
            this.telecom.clear();
            this.telecom.addAll(telecom);
            return this;
        }

        @Override
        public _FinalStage addAllName(List<VitalCoreSchemasRequestSchemasOrdersNameItem> name) {
            this.name.addAll(name);
            return this;
        }

        @Override
        public _FinalStage addName(VitalCoreSchemasRequestSchemasOrdersNameItem name) {
            this.name.add(name);
            return this;
        }

        @Override
        @JsonSetter(value = "name", nulls = Nulls.SKIP)
        public _FinalStage name(List<VitalCoreSchemasRequestSchemasOrdersNameItem> name) {
            this.name.clear();
            this.name.addAll(name);
            return this;
        }

        @Override
        public PostOrderPatient build() {
            return new PostOrderPatient(resourceType, name, telecom, gender, birthDate, address, additionalProperties);
        }
    }
}
