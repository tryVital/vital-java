/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.vital.api.types;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.vital.api.core.ObjectMappers;
import java.util.HashMap;
import java.util.Map;
import java.util.Objects;

@JsonInclude(JsonInclude.Include.NON_EMPTY)
@JsonDeserialize(builder = MealColumnExpr.Builder.class)
public final class MealColumnExpr {
    private final MealColumnExprMeal meal;

    private final Map<String, Object> additionalProperties;

    private MealColumnExpr(MealColumnExprMeal meal, Map<String, Object> additionalProperties) {
        this.meal = meal;
        this.additionalProperties = additionalProperties;
    }

    /**
     * @return ℹ️ This enum is non-exhaustive.
     */
    @JsonProperty("meal")
    public MealColumnExprMeal getMeal() {
        return meal;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof MealColumnExpr && equalTo((MealColumnExpr) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(MealColumnExpr other) {
        return meal.equals(other.meal);
    }

    @java.lang.Override
    public int hashCode() {
        return Objects.hash(this.meal);
    }

    @java.lang.Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static MealStage builder() {
        return new Builder();
    }

    public interface MealStage {
        _FinalStage meal(MealColumnExprMeal meal);

        Builder from(MealColumnExpr other);
    }

    public interface _FinalStage {
        MealColumnExpr build();
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder implements MealStage, _FinalStage {
        private MealColumnExprMeal meal;

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        @java.lang.Override
        public Builder from(MealColumnExpr other) {
            meal(other.getMeal());
            return this;
        }

        /**
         * <p>ℹ️ This enum is non-exhaustive.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        @JsonSetter("meal")
        public _FinalStage meal(MealColumnExprMeal meal) {
            this.meal = meal;
            return this;
        }

        @java.lang.Override
        public MealColumnExpr build() {
            return new MealColumnExpr(meal, additionalProperties);
        }
    }
}
