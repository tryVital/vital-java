/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.vital.api.types;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.vital.api.core.ObjectMappers;
import java.util.HashMap;
import java.util.Map;
import java.util.Objects;

@JsonInclude(JsonInclude.Include.NON_EMPTY)
@JsonDeserialize(builder = AppointmentLocation.Builder.class)
public final class AppointmentLocation {
    private final LngLat location;

    private final UsAddress address;

    private final String code;

    private final String name;

    private final Map<String, Object> additionalProperties;

    private AppointmentLocation(
            LngLat location, UsAddress address, String code, String name, Map<String, Object> additionalProperties) {
        this.location = location;
        this.address = address;
        this.code = code;
        this.name = name;
        this.additionalProperties = additionalProperties;
    }

    @JsonProperty("location")
    public LngLat getLocation() {
        return location;
    }

    @JsonProperty("address")
    public UsAddress getAddress() {
        return address;
    }

    @JsonProperty("code")
    public String getCode() {
        return code;
    }

    @JsonProperty("name")
    public String getName() {
        return name;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof AppointmentLocation && equalTo((AppointmentLocation) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(AppointmentLocation other) {
        return location.equals(other.location)
                && address.equals(other.address)
                && code.equals(other.code)
                && name.equals(other.name);
    }

    @java.lang.Override
    public int hashCode() {
        return Objects.hash(this.location, this.address, this.code, this.name);
    }

    @java.lang.Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static LocationStage builder() {
        return new Builder();
    }

    public interface LocationStage {
        AddressStage location(LngLat location);

        Builder from(AppointmentLocation other);
    }

    public interface AddressStage {
        CodeStage address(UsAddress address);
    }

    public interface CodeStage {
        NameStage code(String code);
    }

    public interface NameStage {
        _FinalStage name(String name);
    }

    public interface _FinalStage {
        AppointmentLocation build();
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder implements LocationStage, AddressStage, CodeStage, NameStage, _FinalStage {
        private LngLat location;

        private UsAddress address;

        private String code;

        private String name;

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        @java.lang.Override
        public Builder from(AppointmentLocation other) {
            location(other.getLocation());
            address(other.getAddress());
            code(other.getCode());
            name(other.getName());
            return this;
        }

        @java.lang.Override
        @JsonSetter("location")
        public AddressStage location(LngLat location) {
            this.location = location;
            return this;
        }

        @java.lang.Override
        @JsonSetter("address")
        public CodeStage address(UsAddress address) {
            this.address = address;
            return this;
        }

        @java.lang.Override
        @JsonSetter("code")
        public NameStage code(String code) {
            this.code = code;
            return this;
        }

        @java.lang.Override
        @JsonSetter("name")
        public _FinalStage name(String name) {
            this.name = name;
            return this;
        }

        @java.lang.Override
        public AppointmentLocation build() {
            return new AppointmentLocation(location, address, code, name, additionalProperties);
        }
    }
}
