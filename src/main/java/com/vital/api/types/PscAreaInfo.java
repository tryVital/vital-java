/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.vital.api.types;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.annotation.Nulls;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.vital.api.core.ObjectMappers;
import java.util.HashMap;
import java.util.LinkedHashMap;
import java.util.List;
import java.util.Map;
import java.util.Objects;

@JsonInclude(JsonInclude.Include.NON_EMPTY)
@JsonDeserialize(builder = PscAreaInfo.Builder.class)
public final class PscAreaInfo {
    private final Map<String, List<ClientFacingLabLocation>> locations;

    private final Map<String, Object> additionalProperties;

    private PscAreaInfo(
            Map<String, List<ClientFacingLabLocation>> locations, Map<String, Object> additionalProperties) {
        this.locations = locations;
        this.additionalProperties = additionalProperties;
    }

    @JsonProperty("locations")
    public Map<String, List<ClientFacingLabLocation>> getLocations() {
        return locations;
    }

    @Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof PscAreaInfo && equalTo((PscAreaInfo) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(PscAreaInfo other) {
        return locations.equals(other.locations);
    }

    @Override
    public int hashCode() {
        return Objects.hash(this.locations);
    }

    @Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static Builder builder() {
        return new Builder();
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder {
        private Map<String, List<ClientFacingLabLocation>> locations = new LinkedHashMap<>();

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        public Builder from(PscAreaInfo other) {
            locations(other.getLocations());
            return this;
        }

        @JsonSetter(value = "locations", nulls = Nulls.SKIP)
        public Builder locations(Map<String, List<ClientFacingLabLocation>> locations) {
            this.locations.clear();
            this.locations.putAll(locations);
            return this;
        }

        public Builder putAllLocations(Map<String, List<ClientFacingLabLocation>> locations) {
            this.locations.putAll(locations);
            return this;
        }

        public Builder locations(String key, List<ClientFacingLabLocation> value) {
            this.locations.put(key, value);
            return this;
        }

        public PscAreaInfo build() {
            return new PscAreaInfo(locations, additionalProperties);
        }
    }
}
