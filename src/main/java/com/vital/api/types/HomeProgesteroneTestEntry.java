/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.vital.api.types;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.vital.api.core.ObjectMappers;
import java.util.HashMap;
import java.util.Map;
import java.util.Objects;

@JsonInclude(JsonInclude.Include.NON_EMPTY)
@JsonDeserialize(builder = HomeProgesteroneTestEntry.Builder.class)
public final class HomeProgesteroneTestEntry {
    private final String date;

    private final HomeProgesteroneTestEntryTestResult testResult;

    private final Map<String, Object> additionalProperties;

    private HomeProgesteroneTestEntry(
            String date, HomeProgesteroneTestEntryTestResult testResult, Map<String, Object> additionalProperties) {
        this.date = date;
        this.testResult = testResult;
        this.additionalProperties = additionalProperties;
    }

    @JsonProperty("date")
    public String getDate() {
        return date;
    }

    @JsonProperty("test_result")
    public HomeProgesteroneTestEntryTestResult getTestResult() {
        return testResult;
    }

    @Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof HomeProgesteroneTestEntry && equalTo((HomeProgesteroneTestEntry) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(HomeProgesteroneTestEntry other) {
        return date.equals(other.date) && testResult.equals(other.testResult);
    }

    @Override
    public int hashCode() {
        return Objects.hash(this.date, this.testResult);
    }

    @Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static DateStage builder() {
        return new Builder();
    }

    public interface DateStage {
        TestResultStage date(String date);

        Builder from(HomeProgesteroneTestEntry other);
    }

    public interface TestResultStage {
        _FinalStage testResult(HomeProgesteroneTestEntryTestResult testResult);
    }

    public interface _FinalStage {
        HomeProgesteroneTestEntry build();
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder implements DateStage, TestResultStage, _FinalStage {
        private String date;

        private HomeProgesteroneTestEntryTestResult testResult;

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        @Override
        public Builder from(HomeProgesteroneTestEntry other) {
            date(other.getDate());
            testResult(other.getTestResult());
            return this;
        }

        @Override
        @JsonSetter("date")
        public TestResultStage date(String date) {
            this.date = date;
            return this;
        }

        @Override
        @JsonSetter("test_result")
        public _FinalStage testResult(HomeProgesteroneTestEntryTestResult testResult) {
            this.testResult = testResult;
            return this;
        }

        @Override
        public HomeProgesteroneTestEntry build() {
            return new HomeProgesteroneTestEntry(date, testResult, additionalProperties);
        }
    }
}
