/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.vital.api.types;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.annotation.Nulls;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.vital.api.core.ObjectMappers;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Objects;

@JsonInclude(JsonInclude.Include.NON_EMPTY)
@JsonDeserialize(builder = ClientFacingLabLocation.Builder.class)
public final class ClientFacingLabLocation {
    private final LabLocationMetadata metadata;

    private final int distance;

    private final String siteCode;

    private final List<Billing> supportedBillTypes;

    private final LngLat location;

    private final List<LabLocationCapability> capabilities;

    private final Map<String, Object> additionalProperties;

    private ClientFacingLabLocation(
            LabLocationMetadata metadata,
            int distance,
            String siteCode,
            List<Billing> supportedBillTypes,
            LngLat location,
            List<LabLocationCapability> capabilities,
            Map<String, Object> additionalProperties) {
        this.metadata = metadata;
        this.distance = distance;
        this.siteCode = siteCode;
        this.supportedBillTypes = supportedBillTypes;
        this.location = location;
        this.capabilities = capabilities;
        this.additionalProperties = additionalProperties;
    }

    @JsonProperty("metadata")
    public LabLocationMetadata getMetadata() {
        return metadata;
    }

    @JsonProperty("distance")
    public int getDistance() {
        return distance;
    }

    @JsonProperty("site_code")
    public String getSiteCode() {
        return siteCode;
    }

    @JsonProperty("supported_bill_types")
    public List<Billing> getSupportedBillTypes() {
        return supportedBillTypes;
    }

    @JsonProperty("location")
    public LngLat getLocation() {
        return location;
    }

    @JsonProperty("capabilities")
    public List<LabLocationCapability> getCapabilities() {
        return capabilities;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof ClientFacingLabLocation && equalTo((ClientFacingLabLocation) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(ClientFacingLabLocation other) {
        return metadata.equals(other.metadata)
                && distance == other.distance
                && siteCode.equals(other.siteCode)
                && supportedBillTypes.equals(other.supportedBillTypes)
                && location.equals(other.location)
                && capabilities.equals(other.capabilities);
    }

    @java.lang.Override
    public int hashCode() {
        return Objects.hash(
                this.metadata, this.distance, this.siteCode, this.supportedBillTypes, this.location, this.capabilities);
    }

    @java.lang.Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static MetadataStage builder() {
        return new Builder();
    }

    public interface MetadataStage {
        DistanceStage metadata(LabLocationMetadata metadata);

        Builder from(ClientFacingLabLocation other);
    }

    public interface DistanceStage {
        SiteCodeStage distance(int distance);
    }

    public interface SiteCodeStage {
        LocationStage siteCode(String siteCode);
    }

    public interface LocationStage {
        _FinalStage location(LngLat location);
    }

    public interface _FinalStage {
        ClientFacingLabLocation build();

        _FinalStage supportedBillTypes(List<Billing> supportedBillTypes);

        _FinalStage addSupportedBillTypes(Billing supportedBillTypes);

        _FinalStage addAllSupportedBillTypes(List<Billing> supportedBillTypes);

        _FinalStage capabilities(List<LabLocationCapability> capabilities);

        _FinalStage addCapabilities(LabLocationCapability capabilities);

        _FinalStage addAllCapabilities(List<LabLocationCapability> capabilities);
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder
            implements MetadataStage, DistanceStage, SiteCodeStage, LocationStage, _FinalStage {
        private LabLocationMetadata metadata;

        private int distance;

        private String siteCode;

        private LngLat location;

        private List<LabLocationCapability> capabilities = new ArrayList<>();

        private List<Billing> supportedBillTypes = new ArrayList<>();

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        @java.lang.Override
        public Builder from(ClientFacingLabLocation other) {
            metadata(other.getMetadata());
            distance(other.getDistance());
            siteCode(other.getSiteCode());
            supportedBillTypes(other.getSupportedBillTypes());
            location(other.getLocation());
            capabilities(other.getCapabilities());
            return this;
        }

        @java.lang.Override
        @JsonSetter("metadata")
        public DistanceStage metadata(LabLocationMetadata metadata) {
            this.metadata = metadata;
            return this;
        }

        @java.lang.Override
        @JsonSetter("distance")
        public SiteCodeStage distance(int distance) {
            this.distance = distance;
            return this;
        }

        @java.lang.Override
        @JsonSetter("site_code")
        public LocationStage siteCode(String siteCode) {
            this.siteCode = siteCode;
            return this;
        }

        @java.lang.Override
        @JsonSetter("location")
        public _FinalStage location(LngLat location) {
            this.location = location;
            return this;
        }

        @java.lang.Override
        public _FinalStage addAllCapabilities(List<LabLocationCapability> capabilities) {
            this.capabilities.addAll(capabilities);
            return this;
        }

        @java.lang.Override
        public _FinalStage addCapabilities(LabLocationCapability capabilities) {
            this.capabilities.add(capabilities);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "capabilities", nulls = Nulls.SKIP)
        public _FinalStage capabilities(List<LabLocationCapability> capabilities) {
            this.capabilities.clear();
            this.capabilities.addAll(capabilities);
            return this;
        }

        @java.lang.Override
        public _FinalStage addAllSupportedBillTypes(List<Billing> supportedBillTypes) {
            this.supportedBillTypes.addAll(supportedBillTypes);
            return this;
        }

        @java.lang.Override
        public _FinalStage addSupportedBillTypes(Billing supportedBillTypes) {
            this.supportedBillTypes.add(supportedBillTypes);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "supported_bill_types", nulls = Nulls.SKIP)
        public _FinalStage supportedBillTypes(List<Billing> supportedBillTypes) {
            this.supportedBillTypes.clear();
            this.supportedBillTypes.addAll(supportedBillTypes);
            return this;
        }

        @java.lang.Override
        public ClientFacingLabLocation build() {
            return new ClientFacingLabLocation(
                    metadata, distance, siteCode, supportedBillTypes, location, capabilities, additionalProperties);
        }
    }
}
