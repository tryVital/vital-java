/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.vital.api.types;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.annotation.Nulls;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.vital.api.core.ObjectMappers;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Objects;

@JsonInclude(JsonInclude.Include.NON_EMPTY)
@JsonDeserialize(builder = QualificationItem.Builder.class)
public final class QualificationItem {
    private final VitalCoreSchemasRequestSchemasOrdersCode code;

    private final Period period;

    private final List<IdentifierItem1> identifier;

    private final Map<String, Object> additionalProperties;

    private QualificationItem(
            VitalCoreSchemasRequestSchemasOrdersCode code,
            Period period,
            List<IdentifierItem1> identifier,
            Map<String, Object> additionalProperties) {
        this.code = code;
        this.period = period;
        this.identifier = identifier;
        this.additionalProperties = additionalProperties;
    }

    @JsonProperty("code")
    public VitalCoreSchemasRequestSchemasOrdersCode getCode() {
        return code;
    }

    @JsonProperty("period")
    public Period getPeriod() {
        return period;
    }

    @JsonProperty("identifier")
    public List<IdentifierItem1> getIdentifier() {
        return identifier;
    }

    @Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof QualificationItem && equalTo((QualificationItem) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(QualificationItem other) {
        return code.equals(other.code) && period.equals(other.period) && identifier.equals(other.identifier);
    }

    @Override
    public int hashCode() {
        return Objects.hash(this.code, this.period, this.identifier);
    }

    @Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static CodeStage builder() {
        return new Builder();
    }

    public interface CodeStage {
        PeriodStage code(VitalCoreSchemasRequestSchemasOrdersCode code);

        Builder from(QualificationItem other);
    }

    public interface PeriodStage {
        _FinalStage period(Period period);
    }

    public interface _FinalStage {
        QualificationItem build();

        _FinalStage identifier(List<IdentifierItem1> identifier);

        _FinalStage addIdentifier(IdentifierItem1 identifier);

        _FinalStage addAllIdentifier(List<IdentifierItem1> identifier);
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder implements CodeStage, PeriodStage, _FinalStage {
        private VitalCoreSchemasRequestSchemasOrdersCode code;

        private Period period;

        private List<IdentifierItem1> identifier = new ArrayList<>();

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        @Override
        public Builder from(QualificationItem other) {
            code(other.getCode());
            period(other.getPeriod());
            identifier(other.getIdentifier());
            return this;
        }

        @Override
        @JsonSetter("code")
        public PeriodStage code(VitalCoreSchemasRequestSchemasOrdersCode code) {
            this.code = code;
            return this;
        }

        @Override
        @JsonSetter("period")
        public _FinalStage period(Period period) {
            this.period = period;
            return this;
        }

        @Override
        public _FinalStage addAllIdentifier(List<IdentifierItem1> identifier) {
            this.identifier.addAll(identifier);
            return this;
        }

        @Override
        public _FinalStage addIdentifier(IdentifierItem1 identifier) {
            this.identifier.add(identifier);
            return this;
        }

        @Override
        @JsonSetter(value = "identifier", nulls = Nulls.SKIP)
        public _FinalStage identifier(List<IdentifierItem1> identifier) {
            this.identifier.clear();
            this.identifier.addAll(identifier);
            return this;
        }

        @Override
        public QualificationItem build() {
            return new QualificationItem(code, period, identifier, additionalProperties);
        }
    }
}
