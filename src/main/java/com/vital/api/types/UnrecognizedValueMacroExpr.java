/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.vital.api.types;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.vital.api.core.ObjectMappers;
import java.util.HashMap;
import java.util.Map;
import java.util.Objects;

@JsonInclude(JsonInclude.Include.NON_EMPTY)
@JsonDeserialize(builder = UnrecognizedValueMacroExpr.Builder.class)
public final class UnrecognizedValueMacroExpr {
    private final String valueMacro;

    private final Map<String, Object> additionalProperties;

    private UnrecognizedValueMacroExpr(String valueMacro, Map<String, Object> additionalProperties) {
        this.valueMacro = valueMacro;
        this.additionalProperties = additionalProperties;
    }

    @JsonProperty("value_macro")
    public String getValueMacro() {
        return valueMacro;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof UnrecognizedValueMacroExpr && equalTo((UnrecognizedValueMacroExpr) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(UnrecognizedValueMacroExpr other) {
        return valueMacro.equals(other.valueMacro);
    }

    @java.lang.Override
    public int hashCode() {
        return Objects.hash(this.valueMacro);
    }

    @java.lang.Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static ValueMacroStage builder() {
        return new Builder();
    }

    public interface ValueMacroStage {
        _FinalStage valueMacro(String valueMacro);

        Builder from(UnrecognizedValueMacroExpr other);
    }

    public interface _FinalStage {
        UnrecognizedValueMacroExpr build();
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder implements ValueMacroStage, _FinalStage {
        private String valueMacro;

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        @java.lang.Override
        public Builder from(UnrecognizedValueMacroExpr other) {
            valueMacro(other.getValueMacro());
            return this;
        }

        @java.lang.Override
        @JsonSetter("value_macro")
        public _FinalStage valueMacro(String valueMacro) {
            this.valueMacro = valueMacro;
            return this;
        }

        @java.lang.Override
        public UnrecognizedValueMacroExpr build() {
            return new UnrecognizedValueMacroExpr(valueMacro, additionalProperties);
        }
    }
}
