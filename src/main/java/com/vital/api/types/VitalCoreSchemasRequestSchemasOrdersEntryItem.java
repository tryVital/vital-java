/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.vital.api.types;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.vital.api.core.ObjectMappers;
import java.util.HashMap;
import java.util.Map;
import java.util.Objects;

@JsonInclude(JsonInclude.Include.NON_EMPTY)
@JsonDeserialize(builder = VitalCoreSchemasRequestSchemasOrdersEntryItem.Builder.class)
public final class VitalCoreSchemasRequestSchemasOrdersEntryItem {
    private final VitalCoreSchemasRequestSchemasOrdersEntryItemResource resource;

    private final Map<String, Object> additionalProperties;

    private VitalCoreSchemasRequestSchemasOrdersEntryItem(
            VitalCoreSchemasRequestSchemasOrdersEntryItemResource resource, Map<String, Object> additionalProperties) {
        this.resource = resource;
        this.additionalProperties = additionalProperties;
    }

    @JsonProperty("resource")
    public VitalCoreSchemasRequestSchemasOrdersEntryItemResource getResource() {
        return resource;
    }

    @Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof VitalCoreSchemasRequestSchemasOrdersEntryItem
                && equalTo((VitalCoreSchemasRequestSchemasOrdersEntryItem) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(VitalCoreSchemasRequestSchemasOrdersEntryItem other) {
        return resource.equals(other.resource);
    }

    @Override
    public int hashCode() {
        return Objects.hash(this.resource);
    }

    @Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static ResourceStage builder() {
        return new Builder();
    }

    public interface ResourceStage {
        _FinalStage resource(VitalCoreSchemasRequestSchemasOrdersEntryItemResource resource);

        Builder from(VitalCoreSchemasRequestSchemasOrdersEntryItem other);
    }

    public interface _FinalStage {
        VitalCoreSchemasRequestSchemasOrdersEntryItem build();
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder implements ResourceStage, _FinalStage {
        private VitalCoreSchemasRequestSchemasOrdersEntryItemResource resource;

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        @Override
        public Builder from(VitalCoreSchemasRequestSchemasOrdersEntryItem other) {
            resource(other.getResource());
            return this;
        }

        @Override
        @JsonSetter("resource")
        public _FinalStage resource(VitalCoreSchemasRequestSchemasOrdersEntryItemResource resource) {
            this.resource = resource;
            return this;
        }

        @Override
        public VitalCoreSchemasRequestSchemasOrdersEntryItem build() {
            return new VitalCoreSchemasRequestSchemasOrdersEntryItem(resource, additionalProperties);
        }
    }
}
