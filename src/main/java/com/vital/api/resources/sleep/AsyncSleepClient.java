/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.vital.api.resources.sleep;

import com.vital.api.core.ClientOptions;
import com.vital.api.core.RequestOptions;
import com.vital.api.resources.sleep.requests.SleepGetRawRequest;
import com.vital.api.resources.sleep.requests.SleepGetRequest;
import com.vital.api.types.ClientFacingSleepStream;
import com.vital.api.types.ClientSleepResponse;
import com.vital.api.types.RawSleep;
import java.util.concurrent.CompletableFuture;

public class AsyncSleepClient {
    protected final ClientOptions clientOptions;

    private final AsyncRawSleepClient rawClient;

    public AsyncSleepClient(ClientOptions clientOptions) {
        this.clientOptions = clientOptions;
        this.rawClient = new AsyncRawSleepClient(clientOptions);
    }

    /**
     * Get responses with HTTP metadata like headers
     */
    public AsyncRawSleepClient withRawResponse() {
        return this.rawClient;
    }

    /**
     * Get sleep summary for user_id
     */
    public CompletableFuture<ClientSleepResponse> get(String userId, SleepGetRequest request) {
        return this.rawClient.get(userId, request).thenApply(response -> response.body());
    }

    /**
     * Get sleep summary for user_id
     */
    public CompletableFuture<ClientSleepResponse> get(
            String userId, SleepGetRequest request, RequestOptions requestOptions) {
        return this.rawClient.get(userId, request, requestOptions).thenApply(response -> response.body());
    }

    /**
     * Get raw sleep summary for user_id
     */
    public CompletableFuture<RawSleep> getRaw(String userId, SleepGetRawRequest request) {
        return this.rawClient.getRaw(userId, request).thenApply(response -> response.body());
    }

    /**
     * Get raw sleep summary for user_id
     */
    public CompletableFuture<RawSleep> getRaw(
            String userId, SleepGetRawRequest request, RequestOptions requestOptions) {
        return this.rawClient.getRaw(userId, request, requestOptions).thenApply(response -> response.body());
    }

    /**
     * Get Sleep stream for a user_id
     */
    public CompletableFuture<ClientFacingSleepStream> getStreamBySleepId(String sleepId) {
        return this.rawClient.getStreamBySleepId(sleepId).thenApply(response -> response.body());
    }

    /**
     * Get Sleep stream for a user_id
     */
    public CompletableFuture<ClientFacingSleepStream> getStreamBySleepId(
            String sleepId, RequestOptions requestOptions) {
        return this.rawClient.getStreamBySleepId(sleepId, requestOptions).thenApply(response -> response.body());
    }
}
