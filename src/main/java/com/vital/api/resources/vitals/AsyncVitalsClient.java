/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.vital.api.resources.vitals;

import com.vital.api.core.ClientOptions;
import com.vital.api.core.RequestOptions;
import com.vital.api.resources.vitals.requests.VitalsAfibBurdenGroupedRequest;
import com.vital.api.resources.vitals.requests.VitalsBasalBodyTemperatureGroupedRequest;
import com.vital.api.resources.vitals.requests.VitalsBloodOxygenGroupedRequest;
import com.vital.api.resources.vitals.requests.VitalsBloodOxygenRequest;
import com.vital.api.resources.vitals.requests.VitalsBloodPressureGroupedRequest;
import com.vital.api.resources.vitals.requests.VitalsBloodPressureRequest;
import com.vital.api.resources.vitals.requests.VitalsBodyFatGroupedRequest;
import com.vital.api.resources.vitals.requests.VitalsBodyFatRequest;
import com.vital.api.resources.vitals.requests.VitalsBodyMassIndexGroupedRequest;
import com.vital.api.resources.vitals.requests.VitalsBodyTemperatureDeltaGroupedRequest;
import com.vital.api.resources.vitals.requests.VitalsBodyTemperatureGroupedRequest;
import com.vital.api.resources.vitals.requests.VitalsBodyWeightGroupedRequest;
import com.vital.api.resources.vitals.requests.VitalsBodyWeightRequest;
import com.vital.api.resources.vitals.requests.VitalsCaffeineGroupedRequest;
import com.vital.api.resources.vitals.requests.VitalsCaffeineRequest;
import com.vital.api.resources.vitals.requests.VitalsCaloriesActiveGroupedRequest;
import com.vital.api.resources.vitals.requests.VitalsCaloriesActiveRequest;
import com.vital.api.resources.vitals.requests.VitalsCaloriesBasalGroupedRequest;
import com.vital.api.resources.vitals.requests.VitalsCaloriesBasalRequest;
import com.vital.api.resources.vitals.requests.VitalsCarbohydratesGroupedRequest;
import com.vital.api.resources.vitals.requests.VitalsCholesterolGroupedRequest;
import com.vital.api.resources.vitals.requests.VitalsCholesterolHdlRequest;
import com.vital.api.resources.vitals.requests.VitalsCholesterolLdlRequest;
import com.vital.api.resources.vitals.requests.VitalsCholesterolRequest;
import com.vital.api.resources.vitals.requests.VitalsCholesterolTotalRequest;
import com.vital.api.resources.vitals.requests.VitalsCholesterolTriglyceridesRequest;
import com.vital.api.resources.vitals.requests.VitalsDaylightExposureGroupedRequest;
import com.vital.api.resources.vitals.requests.VitalsDistanceGroupedRequest;
import com.vital.api.resources.vitals.requests.VitalsDistanceRequest;
import com.vital.api.resources.vitals.requests.VitalsElectrocardiogramVoltageGroupedRequest;
import com.vital.api.resources.vitals.requests.VitalsElectrocardiogramVoltageRequest;
import com.vital.api.resources.vitals.requests.VitalsFallGroupedRequest;
import com.vital.api.resources.vitals.requests.VitalsFloorsClimbedGroupedRequest;
import com.vital.api.resources.vitals.requests.VitalsFloorsClimbedRequest;
import com.vital.api.resources.vitals.requests.VitalsForcedExpiratoryVolume1GroupedRequest;
import com.vital.api.resources.vitals.requests.VitalsForcedVitalCapacityGroupedRequest;
import com.vital.api.resources.vitals.requests.VitalsGlucoseGroupedRequest;
import com.vital.api.resources.vitals.requests.VitalsGlucoseRequest;
import com.vital.api.resources.vitals.requests.VitalsHandwashingGroupedRequest;
import com.vital.api.resources.vitals.requests.VitalsHeartRateAlertGroupedRequest;
import com.vital.api.resources.vitals.requests.VitalsHeartRateRecoveryOneMinuteGroupedRequest;
import com.vital.api.resources.vitals.requests.VitalsHeartrateGroupedRequest;
import com.vital.api.resources.vitals.requests.VitalsHeartrateRequest;
import com.vital.api.resources.vitals.requests.VitalsHrvGroupedRequest;
import com.vital.api.resources.vitals.requests.VitalsHrvRequest;
import com.vital.api.resources.vitals.requests.VitalsHypnogramGroupedRequest;
import com.vital.api.resources.vitals.requests.VitalsHypnogramRequest;
import com.vital.api.resources.vitals.requests.VitalsIgeGroupedRequest;
import com.vital.api.resources.vitals.requests.VitalsIgeRequest;
import com.vital.api.resources.vitals.requests.VitalsIggGroupedRequest;
import com.vital.api.resources.vitals.requests.VitalsIggRequest;
import com.vital.api.resources.vitals.requests.VitalsInhalerUsageGroupedRequest;
import com.vital.api.resources.vitals.requests.VitalsInsulinInjectionGroupedRequest;
import com.vital.api.resources.vitals.requests.VitalsLeanBodyMassGroupedRequest;
import com.vital.api.resources.vitals.requests.VitalsMindfulnessMinutesGroupedRequest;
import com.vital.api.resources.vitals.requests.VitalsMindfulnessMinutesRequest;
import com.vital.api.resources.vitals.requests.VitalsNoteGroupedRequest;
import com.vital.api.resources.vitals.requests.VitalsPeakExpiratoryFlowRateGroupedRequest;
import com.vital.api.resources.vitals.requests.VitalsRespiratoryRateGroupedRequest;
import com.vital.api.resources.vitals.requests.VitalsRespiratoryRateRequest;
import com.vital.api.resources.vitals.requests.VitalsSleepApneaAlertGroupedRequest;
import com.vital.api.resources.vitals.requests.VitalsSleepBreathingDisturbanceGroupedRequest;
import com.vital.api.resources.vitals.requests.VitalsStandDurationGroupedRequest;
import com.vital.api.resources.vitals.requests.VitalsStandHourGroupedRequest;
import com.vital.api.resources.vitals.requests.VitalsStepsGroupedRequest;
import com.vital.api.resources.vitals.requests.VitalsStepsRequest;
import com.vital.api.resources.vitals.requests.VitalsStressLevelGroupedRequest;
import com.vital.api.resources.vitals.requests.VitalsStressLevelRequest;
import com.vital.api.resources.vitals.requests.VitalsUvExposureGroupedRequest;
import com.vital.api.resources.vitals.requests.VitalsVo2MaxGroupedRequest;
import com.vital.api.resources.vitals.requests.VitalsVo2MaxRequest;
import com.vital.api.resources.vitals.requests.VitalsWaistCircumferenceGroupedRequest;
import com.vital.api.resources.vitals.requests.VitalsWaterGroupedRequest;
import com.vital.api.resources.vitals.requests.VitalsWaterRequest;
import com.vital.api.resources.vitals.requests.VitalsWheelchairPushGroupedRequest;
import com.vital.api.resources.vitals.requests.VitalsWorkoutDistanceGroupedRequest;
import com.vital.api.resources.vitals.requests.VitalsWorkoutDurationGroupedRequest;
import com.vital.api.resources.vitals.requests.VitalsWorkoutSwimmingStrokeGroupedRequest;
import com.vital.api.types.ClientFacingBloodOxygenTimeseries;
import com.vital.api.types.ClientFacingBloodPressureTimeseries;
import com.vital.api.types.ClientFacingBodyFatTimeseries;
import com.vital.api.types.ClientFacingBodyWeightTimeseries;
import com.vital.api.types.ClientFacingCaffeineTimeseries;
import com.vital.api.types.ClientFacingCaloriesActiveTimeseries;
import com.vital.api.types.ClientFacingCaloriesBasalTimeseries;
import com.vital.api.types.ClientFacingCholesterolTimeseries;
import com.vital.api.types.ClientFacingDistanceTimeseries;
import com.vital.api.types.ClientFacingElectrocardiogramVoltageTimeseries;
import com.vital.api.types.ClientFacingFloorsClimbedTimeseries;
import com.vital.api.types.ClientFacingGlucoseTimeseries;
import com.vital.api.types.ClientFacingHeartRateTimeseries;
import com.vital.api.types.ClientFacingHrvTimeseries;
import com.vital.api.types.ClientFacingHypnogramTimeseries;
import com.vital.api.types.ClientFacingIgeTimeseries;
import com.vital.api.types.ClientFacingIggTimeseries;
import com.vital.api.types.ClientFacingMindfulnessMinutesTimeseries;
import com.vital.api.types.ClientFacingRespiratoryRateTimeseries;
import com.vital.api.types.ClientFacingStepsTimeseries;
import com.vital.api.types.ClientFacingStressLevelTimeseries;
import com.vital.api.types.ClientFacingVo2MaxTimeseries;
import com.vital.api.types.ClientFacingWaterTimeseries;
import com.vital.api.types.GroupedAFibBurdenResponse;
import com.vital.api.types.GroupedBasalBodyTemperatureResponse;
import com.vital.api.types.GroupedBloodOxygenResponse;
import com.vital.api.types.GroupedBloodPressureResponse;
import com.vital.api.types.GroupedBodyFatResponse;
import com.vital.api.types.GroupedBodyMassIndexResponse;
import com.vital.api.types.GroupedBodyTemperatureDeltaResponse;
import com.vital.api.types.GroupedBodyTemperatureResponse;
import com.vital.api.types.GroupedBodyWeightResponse;
import com.vital.api.types.GroupedCaffeineResponse;
import com.vital.api.types.GroupedCaloriesActiveResponse;
import com.vital.api.types.GroupedCaloriesBasalResponse;
import com.vital.api.types.GroupedCarbohydratesResponse;
import com.vital.api.types.GroupedCholesterolResponse;
import com.vital.api.types.GroupedDaylightExposureResponse;
import com.vital.api.types.GroupedDistanceResponse;
import com.vital.api.types.GroupedElectrocardiogramVoltageResponse;
import com.vital.api.types.GroupedFallResponse;
import com.vital.api.types.GroupedFloorsClimbedResponse;
import com.vital.api.types.GroupedForcedExpiratoryVolume1Response;
import com.vital.api.types.GroupedForcedVitalCapacityResponse;
import com.vital.api.types.GroupedGlucoseResponse;
import com.vital.api.types.GroupedHandwashingResponse;
import com.vital.api.types.GroupedHeartRateAlertResponse;
import com.vital.api.types.GroupedHeartRateRecoveryOneMinuteResponse;
import com.vital.api.types.GroupedHeartRateResponse;
import com.vital.api.types.GroupedHrvResponse;
import com.vital.api.types.GroupedHypnogramResponse;
import com.vital.api.types.GroupedIgeResponse;
import com.vital.api.types.GroupedIggResponse;
import com.vital.api.types.GroupedInhalerUsageResponse;
import com.vital.api.types.GroupedInsulinInjectionResponse;
import com.vital.api.types.GroupedLeanBodyMassResponse;
import com.vital.api.types.GroupedMindfulnessMinutesResponse;
import com.vital.api.types.GroupedNoteResponse;
import com.vital.api.types.GroupedPeakExpiratoryFlowRateResponse;
import com.vital.api.types.GroupedRespiratoryRateResponse;
import com.vital.api.types.GroupedSleepApneaAlertResponse;
import com.vital.api.types.GroupedSleepBreathingDisturbanceResponse;
import com.vital.api.types.GroupedStandDurationResponse;
import com.vital.api.types.GroupedStandHourResponse;
import com.vital.api.types.GroupedStepsResponse;
import com.vital.api.types.GroupedStressLevelResponse;
import com.vital.api.types.GroupedUvExposureResponse;
import com.vital.api.types.GroupedVo2MaxResponse;
import com.vital.api.types.GroupedWaistCircumferenceResponse;
import com.vital.api.types.GroupedWaterResponse;
import com.vital.api.types.GroupedWheelchairPushResponse;
import com.vital.api.types.GroupedWorkoutDistanceResponse;
import com.vital.api.types.GroupedWorkoutDurationResponse;
import com.vital.api.types.GroupedWorkoutSwimmingStrokeResponse;
import java.util.List;
import java.util.concurrent.CompletableFuture;

public class AsyncVitalsClient {
    protected final ClientOptions clientOptions;

    private final AsyncRawVitalsClient rawClient;

    public AsyncVitalsClient(ClientOptions clientOptions) {
        this.clientOptions = clientOptions;
        this.rawClient = new AsyncRawVitalsClient(clientOptions);
    }

    /**
     * Get responses with HTTP metadata like headers
     */
    public AsyncRawVitalsClient withRawResponse() {
        return this.rawClient;
    }

    public CompletableFuture<GroupedWorkoutSwimmingStrokeResponse> workoutSwimmingStrokeGrouped(
            String userId, VitalsWorkoutSwimmingStrokeGroupedRequest request) {
        return this.rawClient.workoutSwimmingStrokeGrouped(userId, request).thenApply(response -> response.body());
    }

    public CompletableFuture<GroupedWorkoutSwimmingStrokeResponse> workoutSwimmingStrokeGrouped(
            String userId, VitalsWorkoutSwimmingStrokeGroupedRequest request, RequestOptions requestOptions) {
        return this.rawClient
                .workoutSwimmingStrokeGrouped(userId, request, requestOptions)
                .thenApply(response -> response.body());
    }

    public CompletableFuture<GroupedWorkoutDistanceResponse> workoutDistanceGrouped(
            String userId, VitalsWorkoutDistanceGroupedRequest request) {
        return this.rawClient.workoutDistanceGrouped(userId, request).thenApply(response -> response.body());
    }

    public CompletableFuture<GroupedWorkoutDistanceResponse> workoutDistanceGrouped(
            String userId, VitalsWorkoutDistanceGroupedRequest request, RequestOptions requestOptions) {
        return this.rawClient
                .workoutDistanceGrouped(userId, request, requestOptions)
                .thenApply(response -> response.body());
    }

    public CompletableFuture<GroupedHeartRateRecoveryOneMinuteResponse> heartRateRecoveryOneMinuteGrouped(
            String userId, VitalsHeartRateRecoveryOneMinuteGroupedRequest request) {
        return this.rawClient.heartRateRecoveryOneMinuteGrouped(userId, request).thenApply(response -> response.body());
    }

    public CompletableFuture<GroupedHeartRateRecoveryOneMinuteResponse> heartRateRecoveryOneMinuteGrouped(
            String userId, VitalsHeartRateRecoveryOneMinuteGroupedRequest request, RequestOptions requestOptions) {
        return this.rawClient
                .heartRateRecoveryOneMinuteGrouped(userId, request, requestOptions)
                .thenApply(response -> response.body());
    }

    public CompletableFuture<GroupedWaistCircumferenceResponse> waistCircumferenceGrouped(
            String userId, VitalsWaistCircumferenceGroupedRequest request) {
        return this.rawClient.waistCircumferenceGrouped(userId, request).thenApply(response -> response.body());
    }

    public CompletableFuture<GroupedWaistCircumferenceResponse> waistCircumferenceGrouped(
            String userId, VitalsWaistCircumferenceGroupedRequest request, RequestOptions requestOptions) {
        return this.rawClient
                .waistCircumferenceGrouped(userId, request, requestOptions)
                .thenApply(response -> response.body());
    }

    public CompletableFuture<GroupedLeanBodyMassResponse> leanBodyMassGrouped(
            String userId, VitalsLeanBodyMassGroupedRequest request) {
        return this.rawClient.leanBodyMassGrouped(userId, request).thenApply(response -> response.body());
    }

    public CompletableFuture<GroupedLeanBodyMassResponse> leanBodyMassGrouped(
            String userId, VitalsLeanBodyMassGroupedRequest request, RequestOptions requestOptions) {
        return this.rawClient
                .leanBodyMassGrouped(userId, request, requestOptions)
                .thenApply(response -> response.body());
    }

    public CompletableFuture<GroupedBodyMassIndexResponse> bodyMassIndexGrouped(
            String userId, VitalsBodyMassIndexGroupedRequest request) {
        return this.rawClient.bodyMassIndexGrouped(userId, request).thenApply(response -> response.body());
    }

    public CompletableFuture<GroupedBodyMassIndexResponse> bodyMassIndexGrouped(
            String userId, VitalsBodyMassIndexGroupedRequest request, RequestOptions requestOptions) {
        return this.rawClient
                .bodyMassIndexGrouped(userId, request, requestOptions)
                .thenApply(response -> response.body());
    }

    public CompletableFuture<GroupedBasalBodyTemperatureResponse> basalBodyTemperatureGrouped(
            String userId, VitalsBasalBodyTemperatureGroupedRequest request) {
        return this.rawClient.basalBodyTemperatureGrouped(userId, request).thenApply(response -> response.body());
    }

    public CompletableFuture<GroupedBasalBodyTemperatureResponse> basalBodyTemperatureGrouped(
            String userId, VitalsBasalBodyTemperatureGroupedRequest request, RequestOptions requestOptions) {
        return this.rawClient
                .basalBodyTemperatureGrouped(userId, request, requestOptions)
                .thenApply(response -> response.body());
    }

    public CompletableFuture<GroupedHandwashingResponse> handwashingGrouped(
            String userId, VitalsHandwashingGroupedRequest request) {
        return this.rawClient.handwashingGrouped(userId, request).thenApply(response -> response.body());
    }

    public CompletableFuture<GroupedHandwashingResponse> handwashingGrouped(
            String userId, VitalsHandwashingGroupedRequest request, RequestOptions requestOptions) {
        return this.rawClient
                .handwashingGrouped(userId, request, requestOptions)
                .thenApply(response -> response.body());
    }

    public CompletableFuture<GroupedDaylightExposureResponse> daylightExposureGrouped(
            String userId, VitalsDaylightExposureGroupedRequest request) {
        return this.rawClient.daylightExposureGrouped(userId, request).thenApply(response -> response.body());
    }

    public CompletableFuture<GroupedDaylightExposureResponse> daylightExposureGrouped(
            String userId, VitalsDaylightExposureGroupedRequest request, RequestOptions requestOptions) {
        return this.rawClient
                .daylightExposureGrouped(userId, request, requestOptions)
                .thenApply(response -> response.body());
    }

    public CompletableFuture<GroupedUvExposureResponse> uvExposureGrouped(
            String userId, VitalsUvExposureGroupedRequest request) {
        return this.rawClient.uvExposureGrouped(userId, request).thenApply(response -> response.body());
    }

    public CompletableFuture<GroupedUvExposureResponse> uvExposureGrouped(
            String userId, VitalsUvExposureGroupedRequest request, RequestOptions requestOptions) {
        return this.rawClient.uvExposureGrouped(userId, request, requestOptions).thenApply(response -> response.body());
    }

    public CompletableFuture<GroupedFallResponse> fallGrouped(String userId, VitalsFallGroupedRequest request) {
        return this.rawClient.fallGrouped(userId, request).thenApply(response -> response.body());
    }

    public CompletableFuture<GroupedFallResponse> fallGrouped(
            String userId, VitalsFallGroupedRequest request, RequestOptions requestOptions) {
        return this.rawClient.fallGrouped(userId, request, requestOptions).thenApply(response -> response.body());
    }

    public CompletableFuture<GroupedInhalerUsageResponse> inhalerUsageGrouped(
            String userId, VitalsInhalerUsageGroupedRequest request) {
        return this.rawClient.inhalerUsageGrouped(userId, request).thenApply(response -> response.body());
    }

    public CompletableFuture<GroupedInhalerUsageResponse> inhalerUsageGrouped(
            String userId, VitalsInhalerUsageGroupedRequest request, RequestOptions requestOptions) {
        return this.rawClient
                .inhalerUsageGrouped(userId, request, requestOptions)
                .thenApply(response -> response.body());
    }

    public CompletableFuture<GroupedPeakExpiratoryFlowRateResponse> peakExpiratoryFlowRateGrouped(
            String userId, VitalsPeakExpiratoryFlowRateGroupedRequest request) {
        return this.rawClient.peakExpiratoryFlowRateGrouped(userId, request).thenApply(response -> response.body());
    }

    public CompletableFuture<GroupedPeakExpiratoryFlowRateResponse> peakExpiratoryFlowRateGrouped(
            String userId, VitalsPeakExpiratoryFlowRateGroupedRequest request, RequestOptions requestOptions) {
        return this.rawClient
                .peakExpiratoryFlowRateGrouped(userId, request, requestOptions)
                .thenApply(response -> response.body());
    }

    public CompletableFuture<GroupedForcedVitalCapacityResponse> forcedVitalCapacityGrouped(
            String userId, VitalsForcedVitalCapacityGroupedRequest request) {
        return this.rawClient.forcedVitalCapacityGrouped(userId, request).thenApply(response -> response.body());
    }

    public CompletableFuture<GroupedForcedVitalCapacityResponse> forcedVitalCapacityGrouped(
            String userId, VitalsForcedVitalCapacityGroupedRequest request, RequestOptions requestOptions) {
        return this.rawClient
                .forcedVitalCapacityGrouped(userId, request, requestOptions)
                .thenApply(response -> response.body());
    }

    public CompletableFuture<GroupedForcedExpiratoryVolume1Response> forcedExpiratoryVolume1Grouped(
            String userId, VitalsForcedExpiratoryVolume1GroupedRequest request) {
        return this.rawClient.forcedExpiratoryVolume1Grouped(userId, request).thenApply(response -> response.body());
    }

    public CompletableFuture<GroupedForcedExpiratoryVolume1Response> forcedExpiratoryVolume1Grouped(
            String userId, VitalsForcedExpiratoryVolume1GroupedRequest request, RequestOptions requestOptions) {
        return this.rawClient
                .forcedExpiratoryVolume1Grouped(userId, request, requestOptions)
                .thenApply(response -> response.body());
    }

    public CompletableFuture<GroupedWheelchairPushResponse> wheelchairPushGrouped(
            String userId, VitalsWheelchairPushGroupedRequest request) {
        return this.rawClient.wheelchairPushGrouped(userId, request).thenApply(response -> response.body());
    }

    public CompletableFuture<GroupedWheelchairPushResponse> wheelchairPushGrouped(
            String userId, VitalsWheelchairPushGroupedRequest request, RequestOptions requestOptions) {
        return this.rawClient
                .wheelchairPushGrouped(userId, request, requestOptions)
                .thenApply(response -> response.body());
    }

    public CompletableFuture<GroupedSleepBreathingDisturbanceResponse> sleepBreathingDisturbanceGrouped(
            String userId, VitalsSleepBreathingDisturbanceGroupedRequest request) {
        return this.rawClient.sleepBreathingDisturbanceGrouped(userId, request).thenApply(response -> response.body());
    }

    public CompletableFuture<GroupedSleepBreathingDisturbanceResponse> sleepBreathingDisturbanceGrouped(
            String userId, VitalsSleepBreathingDisturbanceGroupedRequest request, RequestOptions requestOptions) {
        return this.rawClient
                .sleepBreathingDisturbanceGrouped(userId, request, requestOptions)
                .thenApply(response -> response.body());
    }

    public CompletableFuture<GroupedSleepApneaAlertResponse> sleepApneaAlertGrouped(
            String userId, VitalsSleepApneaAlertGroupedRequest request) {
        return this.rawClient.sleepApneaAlertGrouped(userId, request).thenApply(response -> response.body());
    }

    public CompletableFuture<GroupedSleepApneaAlertResponse> sleepApneaAlertGrouped(
            String userId, VitalsSleepApneaAlertGroupedRequest request, RequestOptions requestOptions) {
        return this.rawClient
                .sleepApneaAlertGrouped(userId, request, requestOptions)
                .thenApply(response -> response.body());
    }

    public CompletableFuture<GroupedStandDurationResponse> standDurationGrouped(
            String userId, VitalsStandDurationGroupedRequest request) {
        return this.rawClient.standDurationGrouped(userId, request).thenApply(response -> response.body());
    }

    public CompletableFuture<GroupedStandDurationResponse> standDurationGrouped(
            String userId, VitalsStandDurationGroupedRequest request, RequestOptions requestOptions) {
        return this.rawClient
                .standDurationGrouped(userId, request, requestOptions)
                .thenApply(response -> response.body());
    }

    public CompletableFuture<GroupedStandHourResponse> standHourGrouped(
            String userId, VitalsStandHourGroupedRequest request) {
        return this.rawClient.standHourGrouped(userId, request).thenApply(response -> response.body());
    }

    public CompletableFuture<GroupedStandHourResponse> standHourGrouped(
            String userId, VitalsStandHourGroupedRequest request, RequestOptions requestOptions) {
        return this.rawClient.standHourGrouped(userId, request, requestOptions).thenApply(response -> response.body());
    }

    public CompletableFuture<GroupedHeartRateAlertResponse> heartRateAlertGrouped(
            String userId, VitalsHeartRateAlertGroupedRequest request) {
        return this.rawClient.heartRateAlertGrouped(userId, request).thenApply(response -> response.body());
    }

    public CompletableFuture<GroupedHeartRateAlertResponse> heartRateAlertGrouped(
            String userId, VitalsHeartRateAlertGroupedRequest request, RequestOptions requestOptions) {
        return this.rawClient
                .heartRateAlertGrouped(userId, request, requestOptions)
                .thenApply(response -> response.body());
    }

    public CompletableFuture<GroupedAFibBurdenResponse> afibBurdenGrouped(
            String userId, VitalsAfibBurdenGroupedRequest request) {
        return this.rawClient.afibBurdenGrouped(userId, request).thenApply(response -> response.body());
    }

    public CompletableFuture<GroupedAFibBurdenResponse> afibBurdenGrouped(
            String userId, VitalsAfibBurdenGroupedRequest request, RequestOptions requestOptions) {
        return this.rawClient.afibBurdenGrouped(userId, request, requestOptions).thenApply(response -> response.body());
    }

    public CompletableFuture<GroupedWorkoutDurationResponse> workoutDurationGrouped(
            String userId, VitalsWorkoutDurationGroupedRequest request) {
        return this.rawClient.workoutDurationGrouped(userId, request).thenApply(response -> response.body());
    }

    public CompletableFuture<GroupedWorkoutDurationResponse> workoutDurationGrouped(
            String userId, VitalsWorkoutDurationGroupedRequest request, RequestOptions requestOptions) {
        return this.rawClient
                .workoutDurationGrouped(userId, request, requestOptions)
                .thenApply(response -> response.body());
    }

    public CompletableFuture<GroupedVo2MaxResponse> vo2MaxGrouped(String userId, VitalsVo2MaxGroupedRequest request) {
        return this.rawClient.vo2MaxGrouped(userId, request).thenApply(response -> response.body());
    }

    public CompletableFuture<GroupedVo2MaxResponse> vo2MaxGrouped(
            String userId, VitalsVo2MaxGroupedRequest request, RequestOptions requestOptions) {
        return this.rawClient.vo2MaxGrouped(userId, request, requestOptions).thenApply(response -> response.body());
    }

    public CompletableFuture<GroupedStressLevelResponse> stressLevelGrouped(
            String userId, VitalsStressLevelGroupedRequest request) {
        return this.rawClient.stressLevelGrouped(userId, request).thenApply(response -> response.body());
    }

    public CompletableFuture<GroupedStressLevelResponse> stressLevelGrouped(
            String userId, VitalsStressLevelGroupedRequest request, RequestOptions requestOptions) {
        return this.rawClient
                .stressLevelGrouped(userId, request, requestOptions)
                .thenApply(response -> response.body());
    }

    public CompletableFuture<GroupedMindfulnessMinutesResponse> mindfulnessMinutesGrouped(
            String userId, VitalsMindfulnessMinutesGroupedRequest request) {
        return this.rawClient.mindfulnessMinutesGrouped(userId, request).thenApply(response -> response.body());
    }

    public CompletableFuture<GroupedMindfulnessMinutesResponse> mindfulnessMinutesGrouped(
            String userId, VitalsMindfulnessMinutesGroupedRequest request, RequestOptions requestOptions) {
        return this.rawClient
                .mindfulnessMinutesGrouped(userId, request, requestOptions)
                .thenApply(response -> response.body());
    }

    public CompletableFuture<GroupedCaffeineResponse> caffeineGrouped(
            String userId, VitalsCaffeineGroupedRequest request) {
        return this.rawClient.caffeineGrouped(userId, request).thenApply(response -> response.body());
    }

    public CompletableFuture<GroupedCaffeineResponse> caffeineGrouped(
            String userId, VitalsCaffeineGroupedRequest request, RequestOptions requestOptions) {
        return this.rawClient.caffeineGrouped(userId, request, requestOptions).thenApply(response -> response.body());
    }

    public CompletableFuture<GroupedWaterResponse> waterGrouped(String userId, VitalsWaterGroupedRequest request) {
        return this.rawClient.waterGrouped(userId, request).thenApply(response -> response.body());
    }

    public CompletableFuture<GroupedWaterResponse> waterGrouped(
            String userId, VitalsWaterGroupedRequest request, RequestOptions requestOptions) {
        return this.rawClient.waterGrouped(userId, request, requestOptions).thenApply(response -> response.body());
    }

    public CompletableFuture<GroupedStepsResponse> stepsGrouped(String userId, VitalsStepsGroupedRequest request) {
        return this.rawClient.stepsGrouped(userId, request).thenApply(response -> response.body());
    }

    public CompletableFuture<GroupedStepsResponse> stepsGrouped(
            String userId, VitalsStepsGroupedRequest request, RequestOptions requestOptions) {
        return this.rawClient.stepsGrouped(userId, request, requestOptions).thenApply(response -> response.body());
    }

    public CompletableFuture<GroupedFloorsClimbedResponse> floorsClimbedGrouped(
            String userId, VitalsFloorsClimbedGroupedRequest request) {
        return this.rawClient.floorsClimbedGrouped(userId, request).thenApply(response -> response.body());
    }

    public CompletableFuture<GroupedFloorsClimbedResponse> floorsClimbedGrouped(
            String userId, VitalsFloorsClimbedGroupedRequest request, RequestOptions requestOptions) {
        return this.rawClient
                .floorsClimbedGrouped(userId, request, requestOptions)
                .thenApply(response -> response.body());
    }

    public CompletableFuture<GroupedDistanceResponse> distanceGrouped(
            String userId, VitalsDistanceGroupedRequest request) {
        return this.rawClient.distanceGrouped(userId, request).thenApply(response -> response.body());
    }

    public CompletableFuture<GroupedDistanceResponse> distanceGrouped(
            String userId, VitalsDistanceGroupedRequest request, RequestOptions requestOptions) {
        return this.rawClient.distanceGrouped(userId, request, requestOptions).thenApply(response -> response.body());
    }

    public CompletableFuture<GroupedCaloriesBasalResponse> caloriesBasalGrouped(
            String userId, VitalsCaloriesBasalGroupedRequest request) {
        return this.rawClient.caloriesBasalGrouped(userId, request).thenApply(response -> response.body());
    }

    public CompletableFuture<GroupedCaloriesBasalResponse> caloriesBasalGrouped(
            String userId, VitalsCaloriesBasalGroupedRequest request, RequestOptions requestOptions) {
        return this.rawClient
                .caloriesBasalGrouped(userId, request, requestOptions)
                .thenApply(response -> response.body());
    }

    public CompletableFuture<GroupedCaloriesActiveResponse> caloriesActiveGrouped(
            String userId, VitalsCaloriesActiveGroupedRequest request) {
        return this.rawClient.caloriesActiveGrouped(userId, request).thenApply(response -> response.body());
    }

    public CompletableFuture<GroupedCaloriesActiveResponse> caloriesActiveGrouped(
            String userId, VitalsCaloriesActiveGroupedRequest request, RequestOptions requestOptions) {
        return this.rawClient
                .caloriesActiveGrouped(userId, request, requestOptions)
                .thenApply(response -> response.body());
    }

    public CompletableFuture<GroupedRespiratoryRateResponse> respiratoryRateGrouped(
            String userId, VitalsRespiratoryRateGroupedRequest request) {
        return this.rawClient.respiratoryRateGrouped(userId, request).thenApply(response -> response.body());
    }

    public CompletableFuture<GroupedRespiratoryRateResponse> respiratoryRateGrouped(
            String userId, VitalsRespiratoryRateGroupedRequest request, RequestOptions requestOptions) {
        return this.rawClient
                .respiratoryRateGrouped(userId, request, requestOptions)
                .thenApply(response -> response.body());
    }

    public CompletableFuture<GroupedNoteResponse> noteGrouped(String userId, VitalsNoteGroupedRequest request) {
        return this.rawClient.noteGrouped(userId, request).thenApply(response -> response.body());
    }

    public CompletableFuture<GroupedNoteResponse> noteGrouped(
            String userId, VitalsNoteGroupedRequest request, RequestOptions requestOptions) {
        return this.rawClient.noteGrouped(userId, request, requestOptions).thenApply(response -> response.body());
    }

    public CompletableFuture<GroupedInsulinInjectionResponse> insulinInjectionGrouped(
            String userId, VitalsInsulinInjectionGroupedRequest request) {
        return this.rawClient.insulinInjectionGrouped(userId, request).thenApply(response -> response.body());
    }

    public CompletableFuture<GroupedInsulinInjectionResponse> insulinInjectionGrouped(
            String userId, VitalsInsulinInjectionGroupedRequest request, RequestOptions requestOptions) {
        return this.rawClient
                .insulinInjectionGrouped(userId, request, requestOptions)
                .thenApply(response -> response.body());
    }

    public CompletableFuture<GroupedIgeResponse> igeGrouped(String userId, VitalsIgeGroupedRequest request) {
        return this.rawClient.igeGrouped(userId, request).thenApply(response -> response.body());
    }

    public CompletableFuture<GroupedIgeResponse> igeGrouped(
            String userId, VitalsIgeGroupedRequest request, RequestOptions requestOptions) {
        return this.rawClient.igeGrouped(userId, request, requestOptions).thenApply(response -> response.body());
    }

    public CompletableFuture<GroupedIggResponse> iggGrouped(String userId, VitalsIggGroupedRequest request) {
        return this.rawClient.iggGrouped(userId, request).thenApply(response -> response.body());
    }

    public CompletableFuture<GroupedIggResponse> iggGrouped(
            String userId, VitalsIggGroupedRequest request, RequestOptions requestOptions) {
        return this.rawClient.iggGrouped(userId, request, requestOptions).thenApply(response -> response.body());
    }

    public CompletableFuture<GroupedHypnogramResponse> hypnogramGrouped(
            String userId, VitalsHypnogramGroupedRequest request) {
        return this.rawClient.hypnogramGrouped(userId, request).thenApply(response -> response.body());
    }

    public CompletableFuture<GroupedHypnogramResponse> hypnogramGrouped(
            String userId, VitalsHypnogramGroupedRequest request, RequestOptions requestOptions) {
        return this.rawClient.hypnogramGrouped(userId, request, requestOptions).thenApply(response -> response.body());
    }

    public CompletableFuture<GroupedHrvResponse> hrvGrouped(String userId, VitalsHrvGroupedRequest request) {
        return this.rawClient.hrvGrouped(userId, request).thenApply(response -> response.body());
    }

    public CompletableFuture<GroupedHrvResponse> hrvGrouped(
            String userId, VitalsHrvGroupedRequest request, RequestOptions requestOptions) {
        return this.rawClient.hrvGrouped(userId, request, requestOptions).thenApply(response -> response.body());
    }

    public CompletableFuture<GroupedHeartRateResponse> heartrateGrouped(
            String userId, VitalsHeartrateGroupedRequest request) {
        return this.rawClient.heartrateGrouped(userId, request).thenApply(response -> response.body());
    }

    public CompletableFuture<GroupedHeartRateResponse> heartrateGrouped(
            String userId, VitalsHeartrateGroupedRequest request, RequestOptions requestOptions) {
        return this.rawClient.heartrateGrouped(userId, request, requestOptions).thenApply(response -> response.body());
    }

    public CompletableFuture<GroupedGlucoseResponse> glucoseGrouped(
            String userId, VitalsGlucoseGroupedRequest request) {
        return this.rawClient.glucoseGrouped(userId, request).thenApply(response -> response.body());
    }

    public CompletableFuture<GroupedGlucoseResponse> glucoseGrouped(
            String userId, VitalsGlucoseGroupedRequest request, RequestOptions requestOptions) {
        return this.rawClient.glucoseGrouped(userId, request, requestOptions).thenApply(response -> response.body());
    }

    public CompletableFuture<GroupedCholesterolResponse> cholesterolGrouped(
            String userId, VitalsCholesterolGroupedRequest request) {
        return this.rawClient.cholesterolGrouped(userId, request).thenApply(response -> response.body());
    }

    public CompletableFuture<GroupedCholesterolResponse> cholesterolGrouped(
            String userId, VitalsCholesterolGroupedRequest request, RequestOptions requestOptions) {
        return this.rawClient
                .cholesterolGrouped(userId, request, requestOptions)
                .thenApply(response -> response.body());
    }

    public CompletableFuture<GroupedCarbohydratesResponse> carbohydratesGrouped(
            String userId, VitalsCarbohydratesGroupedRequest request) {
        return this.rawClient.carbohydratesGrouped(userId, request).thenApply(response -> response.body());
    }

    public CompletableFuture<GroupedCarbohydratesResponse> carbohydratesGrouped(
            String userId, VitalsCarbohydratesGroupedRequest request, RequestOptions requestOptions) {
        return this.rawClient
                .carbohydratesGrouped(userId, request, requestOptions)
                .thenApply(response -> response.body());
    }

    public CompletableFuture<GroupedBodyTemperatureDeltaResponse> bodyTemperatureDeltaGrouped(
            String userId, VitalsBodyTemperatureDeltaGroupedRequest request) {
        return this.rawClient.bodyTemperatureDeltaGrouped(userId, request).thenApply(response -> response.body());
    }

    public CompletableFuture<GroupedBodyTemperatureDeltaResponse> bodyTemperatureDeltaGrouped(
            String userId, VitalsBodyTemperatureDeltaGroupedRequest request, RequestOptions requestOptions) {
        return this.rawClient
                .bodyTemperatureDeltaGrouped(userId, request, requestOptions)
                .thenApply(response -> response.body());
    }

    public CompletableFuture<GroupedBodyTemperatureResponse> bodyTemperatureGrouped(
            String userId, VitalsBodyTemperatureGroupedRequest request) {
        return this.rawClient.bodyTemperatureGrouped(userId, request).thenApply(response -> response.body());
    }

    public CompletableFuture<GroupedBodyTemperatureResponse> bodyTemperatureGrouped(
            String userId, VitalsBodyTemperatureGroupedRequest request, RequestOptions requestOptions) {
        return this.rawClient
                .bodyTemperatureGrouped(userId, request, requestOptions)
                .thenApply(response -> response.body());
    }

    public CompletableFuture<GroupedBodyWeightResponse> bodyWeightGrouped(
            String userId, VitalsBodyWeightGroupedRequest request) {
        return this.rawClient.bodyWeightGrouped(userId, request).thenApply(response -> response.body());
    }

    public CompletableFuture<GroupedBodyWeightResponse> bodyWeightGrouped(
            String userId, VitalsBodyWeightGroupedRequest request, RequestOptions requestOptions) {
        return this.rawClient.bodyWeightGrouped(userId, request, requestOptions).thenApply(response -> response.body());
    }

    public CompletableFuture<GroupedBodyFatResponse> bodyFatGrouped(
            String userId, VitalsBodyFatGroupedRequest request) {
        return this.rawClient.bodyFatGrouped(userId, request).thenApply(response -> response.body());
    }

    public CompletableFuture<GroupedBodyFatResponse> bodyFatGrouped(
            String userId, VitalsBodyFatGroupedRequest request, RequestOptions requestOptions) {
        return this.rawClient.bodyFatGrouped(userId, request, requestOptions).thenApply(response -> response.body());
    }

    public CompletableFuture<GroupedBloodOxygenResponse> bloodOxygenGrouped(
            String userId, VitalsBloodOxygenGroupedRequest request) {
        return this.rawClient.bloodOxygenGrouped(userId, request).thenApply(response -> response.body());
    }

    public CompletableFuture<GroupedBloodOxygenResponse> bloodOxygenGrouped(
            String userId, VitalsBloodOxygenGroupedRequest request, RequestOptions requestOptions) {
        return this.rawClient
                .bloodOxygenGrouped(userId, request, requestOptions)
                .thenApply(response -> response.body());
    }

    public CompletableFuture<GroupedElectrocardiogramVoltageResponse> electrocardiogramVoltageGrouped(
            String userId, VitalsElectrocardiogramVoltageGroupedRequest request) {
        return this.rawClient.electrocardiogramVoltageGrouped(userId, request).thenApply(response -> response.body());
    }

    public CompletableFuture<GroupedElectrocardiogramVoltageResponse> electrocardiogramVoltageGrouped(
            String userId, VitalsElectrocardiogramVoltageGroupedRequest request, RequestOptions requestOptions) {
        return this.rawClient
                .electrocardiogramVoltageGrouped(userId, request, requestOptions)
                .thenApply(response -> response.body());
    }

    public CompletableFuture<GroupedBloodPressureResponse> bloodPressureGrouped(
            String userId, VitalsBloodPressureGroupedRequest request) {
        return this.rawClient.bloodPressureGrouped(userId, request).thenApply(response -> response.body());
    }

    public CompletableFuture<GroupedBloodPressureResponse> bloodPressureGrouped(
            String userId, VitalsBloodPressureGroupedRequest request, RequestOptions requestOptions) {
        return this.rawClient
                .bloodPressureGrouped(userId, request, requestOptions)
                .thenApply(response -> response.body());
    }

    public CompletableFuture<List<ClientFacingVo2MaxTimeseries>> vo2Max(String userId, VitalsVo2MaxRequest request) {
        return this.rawClient.vo2Max(userId, request).thenApply(response -> response.body());
    }

    public CompletableFuture<List<ClientFacingVo2MaxTimeseries>> vo2Max(
            String userId, VitalsVo2MaxRequest request, RequestOptions requestOptions) {
        return this.rawClient.vo2Max(userId, request, requestOptions).thenApply(response -> response.body());
    }

    public CompletableFuture<List<ClientFacingStressLevelTimeseries>> stressLevel(
            String userId, VitalsStressLevelRequest request) {
        return this.rawClient.stressLevel(userId, request).thenApply(response -> response.body());
    }

    public CompletableFuture<List<ClientFacingStressLevelTimeseries>> stressLevel(
            String userId, VitalsStressLevelRequest request, RequestOptions requestOptions) {
        return this.rawClient.stressLevel(userId, request, requestOptions).thenApply(response -> response.body());
    }

    public CompletableFuture<List<ClientFacingMindfulnessMinutesTimeseries>> mindfulnessMinutes(
            String userId, VitalsMindfulnessMinutesRequest request) {
        return this.rawClient.mindfulnessMinutes(userId, request).thenApply(response -> response.body());
    }

    public CompletableFuture<List<ClientFacingMindfulnessMinutesTimeseries>> mindfulnessMinutes(
            String userId, VitalsMindfulnessMinutesRequest request, RequestOptions requestOptions) {
        return this.rawClient
                .mindfulnessMinutes(userId, request, requestOptions)
                .thenApply(response -> response.body());
    }

    public CompletableFuture<List<ClientFacingCaffeineTimeseries>> caffeine(
            String userId, VitalsCaffeineRequest request) {
        return this.rawClient.caffeine(userId, request).thenApply(response -> response.body());
    }

    public CompletableFuture<List<ClientFacingCaffeineTimeseries>> caffeine(
            String userId, VitalsCaffeineRequest request, RequestOptions requestOptions) {
        return this.rawClient.caffeine(userId, request, requestOptions).thenApply(response -> response.body());
    }

    public CompletableFuture<List<ClientFacingWaterTimeseries>> water(String userId, VitalsWaterRequest request) {
        return this.rawClient.water(userId, request).thenApply(response -> response.body());
    }

    public CompletableFuture<List<ClientFacingWaterTimeseries>> water(
            String userId, VitalsWaterRequest request, RequestOptions requestOptions) {
        return this.rawClient.water(userId, request, requestOptions).thenApply(response -> response.body());
    }

    public CompletableFuture<List<ClientFacingStepsTimeseries>> steps(String userId, VitalsStepsRequest request) {
        return this.rawClient.steps(userId, request).thenApply(response -> response.body());
    }

    public CompletableFuture<List<ClientFacingStepsTimeseries>> steps(
            String userId, VitalsStepsRequest request, RequestOptions requestOptions) {
        return this.rawClient.steps(userId, request, requestOptions).thenApply(response -> response.body());
    }

    public CompletableFuture<List<ClientFacingFloorsClimbedTimeseries>> floorsClimbed(
            String userId, VitalsFloorsClimbedRequest request) {
        return this.rawClient.floorsClimbed(userId, request).thenApply(response -> response.body());
    }

    public CompletableFuture<List<ClientFacingFloorsClimbedTimeseries>> floorsClimbed(
            String userId, VitalsFloorsClimbedRequest request, RequestOptions requestOptions) {
        return this.rawClient.floorsClimbed(userId, request, requestOptions).thenApply(response -> response.body());
    }

    public CompletableFuture<List<ClientFacingDistanceTimeseries>> distance(
            String userId, VitalsDistanceRequest request) {
        return this.rawClient.distance(userId, request).thenApply(response -> response.body());
    }

    public CompletableFuture<List<ClientFacingDistanceTimeseries>> distance(
            String userId, VitalsDistanceRequest request, RequestOptions requestOptions) {
        return this.rawClient.distance(userId, request, requestOptions).thenApply(response -> response.body());
    }

    public CompletableFuture<List<ClientFacingCaloriesBasalTimeseries>> caloriesBasal(
            String userId, VitalsCaloriesBasalRequest request) {
        return this.rawClient.caloriesBasal(userId, request).thenApply(response -> response.body());
    }

    public CompletableFuture<List<ClientFacingCaloriesBasalTimeseries>> caloriesBasal(
            String userId, VitalsCaloriesBasalRequest request, RequestOptions requestOptions) {
        return this.rawClient.caloriesBasal(userId, request, requestOptions).thenApply(response -> response.body());
    }

    public CompletableFuture<List<ClientFacingCaloriesActiveTimeseries>> caloriesActive(
            String userId, VitalsCaloriesActiveRequest request) {
        return this.rawClient.caloriesActive(userId, request).thenApply(response -> response.body());
    }

    public CompletableFuture<List<ClientFacingCaloriesActiveTimeseries>> caloriesActive(
            String userId, VitalsCaloriesActiveRequest request, RequestOptions requestOptions) {
        return this.rawClient.caloriesActive(userId, request, requestOptions).thenApply(response -> response.body());
    }

    public CompletableFuture<List<ClientFacingRespiratoryRateTimeseries>> respiratoryRate(
            String userId, VitalsRespiratoryRateRequest request) {
        return this.rawClient.respiratoryRate(userId, request).thenApply(response -> response.body());
    }

    public CompletableFuture<List<ClientFacingRespiratoryRateTimeseries>> respiratoryRate(
            String userId, VitalsRespiratoryRateRequest request, RequestOptions requestOptions) {
        return this.rawClient.respiratoryRate(userId, request, requestOptions).thenApply(response -> response.body());
    }

    public CompletableFuture<List<ClientFacingIgeTimeseries>> ige(String userId, VitalsIgeRequest request) {
        return this.rawClient.ige(userId, request).thenApply(response -> response.body());
    }

    public CompletableFuture<List<ClientFacingIgeTimeseries>> ige(
            String userId, VitalsIgeRequest request, RequestOptions requestOptions) {
        return this.rawClient.ige(userId, request, requestOptions).thenApply(response -> response.body());
    }

    public CompletableFuture<List<ClientFacingIggTimeseries>> igg(String userId, VitalsIggRequest request) {
        return this.rawClient.igg(userId, request).thenApply(response -> response.body());
    }

    public CompletableFuture<List<ClientFacingIggTimeseries>> igg(
            String userId, VitalsIggRequest request, RequestOptions requestOptions) {
        return this.rawClient.igg(userId, request, requestOptions).thenApply(response -> response.body());
    }

    public CompletableFuture<List<ClientFacingHypnogramTimeseries>> hypnogram(
            String userId, VitalsHypnogramRequest request) {
        return this.rawClient.hypnogram(userId, request).thenApply(response -> response.body());
    }

    public CompletableFuture<List<ClientFacingHypnogramTimeseries>> hypnogram(
            String userId, VitalsHypnogramRequest request, RequestOptions requestOptions) {
        return this.rawClient.hypnogram(userId, request, requestOptions).thenApply(response -> response.body());
    }

    public CompletableFuture<List<ClientFacingHrvTimeseries>> hrv(String userId, VitalsHrvRequest request) {
        return this.rawClient.hrv(userId, request).thenApply(response -> response.body());
    }

    public CompletableFuture<List<ClientFacingHrvTimeseries>> hrv(
            String userId, VitalsHrvRequest request, RequestOptions requestOptions) {
        return this.rawClient.hrv(userId, request, requestOptions).thenApply(response -> response.body());
    }

    public CompletableFuture<List<ClientFacingHeartRateTimeseries>> heartrate(
            String userId, VitalsHeartrateRequest request) {
        return this.rawClient.heartrate(userId, request).thenApply(response -> response.body());
    }

    public CompletableFuture<List<ClientFacingHeartRateTimeseries>> heartrate(
            String userId, VitalsHeartrateRequest request, RequestOptions requestOptions) {
        return this.rawClient.heartrate(userId, request, requestOptions).thenApply(response -> response.body());
    }

    public CompletableFuture<List<ClientFacingGlucoseTimeseries>> glucose(String userId, VitalsGlucoseRequest request) {
        return this.rawClient.glucose(userId, request).thenApply(response -> response.body());
    }

    public CompletableFuture<List<ClientFacingGlucoseTimeseries>> glucose(
            String userId, VitalsGlucoseRequest request, RequestOptions requestOptions) {
        return this.rawClient.glucose(userId, request, requestOptions).thenApply(response -> response.body());
    }

    public CompletableFuture<List<ClientFacingCholesterolTimeseries>> cholesterolTriglycerides(
            String userId, VitalsCholesterolTriglyceridesRequest request) {
        return this.rawClient.cholesterolTriglycerides(userId, request).thenApply(response -> response.body());
    }

    public CompletableFuture<List<ClientFacingCholesterolTimeseries>> cholesterolTriglycerides(
            String userId, VitalsCholesterolTriglyceridesRequest request, RequestOptions requestOptions) {
        return this.rawClient
                .cholesterolTriglycerides(userId, request, requestOptions)
                .thenApply(response -> response.body());
    }

    public CompletableFuture<List<ClientFacingCholesterolTimeseries>> cholesterolTotal(
            String userId, VitalsCholesterolTotalRequest request) {
        return this.rawClient.cholesterolTotal(userId, request).thenApply(response -> response.body());
    }

    public CompletableFuture<List<ClientFacingCholesterolTimeseries>> cholesterolTotal(
            String userId, VitalsCholesterolTotalRequest request, RequestOptions requestOptions) {
        return this.rawClient.cholesterolTotal(userId, request, requestOptions).thenApply(response -> response.body());
    }

    public CompletableFuture<List<ClientFacingCholesterolTimeseries>> cholesterolLdl(
            String userId, VitalsCholesterolLdlRequest request) {
        return this.rawClient.cholesterolLdl(userId, request).thenApply(response -> response.body());
    }

    public CompletableFuture<List<ClientFacingCholesterolTimeseries>> cholesterolLdl(
            String userId, VitalsCholesterolLdlRequest request, RequestOptions requestOptions) {
        return this.rawClient.cholesterolLdl(userId, request, requestOptions).thenApply(response -> response.body());
    }

    public CompletableFuture<List<ClientFacingCholesterolTimeseries>> cholesterolHdl(
            String userId, VitalsCholesterolHdlRequest request) {
        return this.rawClient.cholesterolHdl(userId, request).thenApply(response -> response.body());
    }

    public CompletableFuture<List<ClientFacingCholesterolTimeseries>> cholesterolHdl(
            String userId, VitalsCholesterolHdlRequest request, RequestOptions requestOptions) {
        return this.rawClient.cholesterolHdl(userId, request, requestOptions).thenApply(response -> response.body());
    }

    public CompletableFuture<List<ClientFacingCholesterolTimeseries>> cholesterol(
            String userId, VitalsCholesterolRequest request) {
        return this.rawClient.cholesterol(userId, request).thenApply(response -> response.body());
    }

    public CompletableFuture<List<ClientFacingCholesterolTimeseries>> cholesterol(
            String userId, VitalsCholesterolRequest request, RequestOptions requestOptions) {
        return this.rawClient.cholesterol(userId, request, requestOptions).thenApply(response -> response.body());
    }

    public CompletableFuture<List<ClientFacingBodyWeightTimeseries>> bodyWeight(
            String userId, VitalsBodyWeightRequest request) {
        return this.rawClient.bodyWeight(userId, request).thenApply(response -> response.body());
    }

    public CompletableFuture<List<ClientFacingBodyWeightTimeseries>> bodyWeight(
            String userId, VitalsBodyWeightRequest request, RequestOptions requestOptions) {
        return this.rawClient.bodyWeight(userId, request, requestOptions).thenApply(response -> response.body());
    }

    public CompletableFuture<List<ClientFacingBodyFatTimeseries>> bodyFat(String userId, VitalsBodyFatRequest request) {
        return this.rawClient.bodyFat(userId, request).thenApply(response -> response.body());
    }

    public CompletableFuture<List<ClientFacingBodyFatTimeseries>> bodyFat(
            String userId, VitalsBodyFatRequest request, RequestOptions requestOptions) {
        return this.rawClient.bodyFat(userId, request, requestOptions).thenApply(response -> response.body());
    }

    public CompletableFuture<List<ClientFacingBloodOxygenTimeseries>> bloodOxygen(
            String userId, VitalsBloodOxygenRequest request) {
        return this.rawClient.bloodOxygen(userId, request).thenApply(response -> response.body());
    }

    public CompletableFuture<List<ClientFacingBloodOxygenTimeseries>> bloodOxygen(
            String userId, VitalsBloodOxygenRequest request, RequestOptions requestOptions) {
        return this.rawClient.bloodOxygen(userId, request, requestOptions).thenApply(response -> response.body());
    }

    public CompletableFuture<List<ClientFacingElectrocardiogramVoltageTimeseries>> electrocardiogramVoltage(
            String userId, VitalsElectrocardiogramVoltageRequest request) {
        return this.rawClient.electrocardiogramVoltage(userId, request).thenApply(response -> response.body());
    }

    public CompletableFuture<List<ClientFacingElectrocardiogramVoltageTimeseries>> electrocardiogramVoltage(
            String userId, VitalsElectrocardiogramVoltageRequest request, RequestOptions requestOptions) {
        return this.rawClient
                .electrocardiogramVoltage(userId, request, requestOptions)
                .thenApply(response -> response.body());
    }

    public CompletableFuture<List<ClientFacingBloodPressureTimeseries>> bloodPressure(
            String userId, VitalsBloodPressureRequest request) {
        return this.rawClient.bloodPressure(userId, request).thenApply(response -> response.body());
    }

    public CompletableFuture<List<ClientFacingBloodPressureTimeseries>> bloodPressure(
            String userId, VitalsBloodPressureRequest request, RequestOptions requestOptions) {
        return this.rawClient.bloodPressure(userId, request, requestOptions).thenApply(response -> response.body());
    }
}
