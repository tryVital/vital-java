/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.vital.api.resources.testkit;

import com.vital.api.core.ClientOptions;
import com.vital.api.core.RequestOptions;
import com.vital.api.resources.testkit.requests.CreateRegistrableTestkitOrderRequest;
import com.vital.api.resources.testkit.requests.RegisterTestkitRequest;
import com.vital.api.types.PostOrderResponse;
import java.util.concurrent.CompletableFuture;

public class AsyncTestkitClient {
    protected final ClientOptions clientOptions;

    private final AsyncRawTestkitClient rawClient;

    public AsyncTestkitClient(ClientOptions clientOptions) {
        this.clientOptions = clientOptions;
        this.rawClient = new AsyncRawTestkitClient(clientOptions);
    }

    /**
     * Get responses with HTTP metadata like headers
     */
    public AsyncRawTestkitClient withRawResponse() {
        return this.rawClient;
    }

    public CompletableFuture<PostOrderResponse> register(RegisterTestkitRequest request) {
        return this.rawClient.register(request).thenApply(response -> response.body());
    }

    public CompletableFuture<PostOrderResponse> register(
            RegisterTestkitRequest request, RequestOptions requestOptions) {
        return this.rawClient.register(request, requestOptions).thenApply(response -> response.body());
    }

    /**
     * Creates an order for an unregistered testkit
     */
    public CompletableFuture<PostOrderResponse> createOrder(CreateRegistrableTestkitOrderRequest request) {
        return this.rawClient.createOrder(request).thenApply(response -> response.body());
    }

    /**
     * Creates an order for an unregistered testkit
     */
    public CompletableFuture<PostOrderResponse> createOrder(
            CreateRegistrableTestkitOrderRequest request, RequestOptions requestOptions) {
        return this.rawClient.createOrder(request, requestOptions).thenApply(response -> response.body());
    }
}
