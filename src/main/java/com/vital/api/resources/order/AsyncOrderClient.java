/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.vital.api.resources.order;

import com.vital.api.core.ClientOptions;
import com.vital.api.core.RequestOptions;
import com.vital.api.resources.order.requests.ResendWebhookBody;
import com.vital.api.types.ResendWebhookResponse;
import java.util.concurrent.CompletableFuture;

public class AsyncOrderClient {
    protected final ClientOptions clientOptions;

    private final AsyncRawOrderClient rawClient;

    public AsyncOrderClient(ClientOptions clientOptions) {
        this.clientOptions = clientOptions;
        this.rawClient = new AsyncRawOrderClient(clientOptions);
    }

    /**
     * Get responses with HTTP metadata like headers
     */
    public AsyncRawOrderClient withRawResponse() {
        return this.rawClient;
    }

    /**
     * Replay a webhook for a given set of orders
     */
    public CompletableFuture<ResendWebhookResponse> resendEvents() {
        return this.rawClient.resendEvents().thenApply(response -> response.body());
    }

    /**
     * Replay a webhook for a given set of orders
     */
    public CompletableFuture<ResendWebhookResponse> resendEvents(ResendWebhookBody request) {
        return this.rawClient.resendEvents(request).thenApply(response -> response.body());
    }

    /**
     * Replay a webhook for a given set of orders
     */
    public CompletableFuture<ResendWebhookResponse> resendEvents(
            ResendWebhookBody request, RequestOptions requestOptions) {
        return this.rawClient.resendEvents(request, requestOptions).thenApply(response -> response.body());
    }
}
