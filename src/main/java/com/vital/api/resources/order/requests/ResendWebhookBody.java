/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.vital.api.resources.order.requests;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.annotation.Nulls;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.vital.api.core.ObjectMappers;
import java.time.OffsetDateTime;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;

@JsonInclude(JsonInclude.Include.NON_ABSENT)
@JsonDeserialize(builder = ResendWebhookBody.Builder.class)
public final class ResendWebhookBody {
    private final Optional<List<String>> orderIds;

    private final Optional<OffsetDateTime> startAt;

    private final Optional<OffsetDateTime> endAt;

    private final Map<String, Object> additionalProperties;

    private ResendWebhookBody(
            Optional<List<String>> orderIds,
            Optional<OffsetDateTime> startAt,
            Optional<OffsetDateTime> endAt,
            Map<String, Object> additionalProperties) {
        this.orderIds = orderIds;
        this.startAt = startAt;
        this.endAt = endAt;
        this.additionalProperties = additionalProperties;
    }

    @JsonProperty("order_ids")
    public Optional<List<String>> getOrderIds() {
        return orderIds;
    }

    @JsonProperty("start_at")
    public Optional<OffsetDateTime> getStartAt() {
        return startAt;
    }

    @JsonProperty("end_at")
    public Optional<OffsetDateTime> getEndAt() {
        return endAt;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof ResendWebhookBody && equalTo((ResendWebhookBody) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(ResendWebhookBody other) {
        return orderIds.equals(other.orderIds) && startAt.equals(other.startAt) && endAt.equals(other.endAt);
    }

    @java.lang.Override
    public int hashCode() {
        return Objects.hash(this.orderIds, this.startAt, this.endAt);
    }

    @java.lang.Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static Builder builder() {
        return new Builder();
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder {
        private Optional<List<String>> orderIds = Optional.empty();

        private Optional<OffsetDateTime> startAt = Optional.empty();

        private Optional<OffsetDateTime> endAt = Optional.empty();

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        public Builder from(ResendWebhookBody other) {
            orderIds(other.getOrderIds());
            startAt(other.getStartAt());
            endAt(other.getEndAt());
            return this;
        }

        @JsonSetter(value = "order_ids", nulls = Nulls.SKIP)
        public Builder orderIds(Optional<List<String>> orderIds) {
            this.orderIds = orderIds;
            return this;
        }

        public Builder orderIds(List<String> orderIds) {
            this.orderIds = Optional.ofNullable(orderIds);
            return this;
        }

        @JsonSetter(value = "start_at", nulls = Nulls.SKIP)
        public Builder startAt(Optional<OffsetDateTime> startAt) {
            this.startAt = startAt;
            return this;
        }

        public Builder startAt(OffsetDateTime startAt) {
            this.startAt = Optional.ofNullable(startAt);
            return this;
        }

        @JsonSetter(value = "end_at", nulls = Nulls.SKIP)
        public Builder endAt(Optional<OffsetDateTime> endAt) {
            this.endAt = endAt;
            return this;
        }

        public Builder endAt(OffsetDateTime endAt) {
            this.endAt = Optional.ofNullable(endAt);
            return this;
        }

        public ResendWebhookBody build() {
            return new ResendWebhookBody(orderIds, startAt, endAt, additionalProperties);
        }
    }
}
