/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.vital.api.resources.activity;

import com.vital.api.core.ClientOptions;
import com.vital.api.core.RequestOptions;
import com.vital.api.resources.activity.requests.ActivityGetRawRequest;
import com.vital.api.resources.activity.requests.ActivityGetRequest;
import com.vital.api.types.ClientActivityResponse;
import com.vital.api.types.RawActivity;
import java.util.concurrent.CompletableFuture;

public class AsyncActivityClient {
    protected final ClientOptions clientOptions;

    private final AsyncRawActivityClient rawClient;

    public AsyncActivityClient(ClientOptions clientOptions) {
        this.clientOptions = clientOptions;
        this.rawClient = new AsyncRawActivityClient(clientOptions);
    }

    /**
     * Get responses with HTTP metadata like headers
     */
    public AsyncRawActivityClient withRawResponse() {
        return this.rawClient;
    }

    /**
     * Get activity summary for user_id
     */
    public CompletableFuture<ClientActivityResponse> get(String userId, ActivityGetRequest request) {
        return this.rawClient.get(userId, request).thenApply(response -> response.body());
    }

    /**
     * Get activity summary for user_id
     */
    public CompletableFuture<ClientActivityResponse> get(
            String userId, ActivityGetRequest request, RequestOptions requestOptions) {
        return this.rawClient.get(userId, request, requestOptions).thenApply(response -> response.body());
    }

    /**
     * Get raw activity summary for user_id
     */
    public CompletableFuture<RawActivity> getRaw(String userId, ActivityGetRawRequest request) {
        return this.rawClient.getRaw(userId, request).thenApply(response -> response.body());
    }

    /**
     * Get raw activity summary for user_id
     */
    public CompletableFuture<RawActivity> getRaw(
            String userId, ActivityGetRawRequest request, RequestOptions requestOptions) {
        return this.rawClient.getRaw(userId, request, requestOptions).thenApply(response -> response.body());
    }
}
