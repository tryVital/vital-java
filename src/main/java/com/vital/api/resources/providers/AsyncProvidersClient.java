/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.vital.api.resources.providers;

import com.vital.api.core.ClientOptions;
import com.vital.api.core.RequestOptions;
import com.vital.api.resources.providers.requests.ProvidersGetAllRequest;
import com.vital.api.types.ClientFacingProviderDetailed;
import java.util.List;
import java.util.concurrent.CompletableFuture;

public class AsyncProvidersClient {
    protected final ClientOptions clientOptions;

    private final AsyncRawProvidersClient rawClient;

    public AsyncProvidersClient(ClientOptions clientOptions) {
        this.clientOptions = clientOptions;
        this.rawClient = new AsyncRawProvidersClient(clientOptions);
    }

    /**
     * Get responses with HTTP metadata like headers
     */
    public AsyncRawProvidersClient withRawResponse() {
        return this.rawClient;
    }

    /**
     * Get Provider list
     */
    public CompletableFuture<List<ClientFacingProviderDetailed>> getAll() {
        return this.rawClient.getAll().thenApply(response -> response.body());
    }

    /**
     * Get Provider list
     */
    public CompletableFuture<List<ClientFacingProviderDetailed>> getAll(ProvidersGetAllRequest request) {
        return this.rawClient.getAll(request).thenApply(response -> response.body());
    }

    /**
     * Get Provider list
     */
    public CompletableFuture<List<ClientFacingProviderDetailed>> getAll(
            ProvidersGetAllRequest request, RequestOptions requestOptions) {
        return this.rawClient.getAll(request, requestOptions).thenApply(response -> response.body());
    }
}
