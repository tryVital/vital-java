/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.vital.api.resources.devices;

import com.vital.api.core.ClientOptions;
import com.vital.api.core.RequestOptions;
import com.vital.api.resources.devices.requests.DevicesGetRawRequest;
import com.vital.api.types.RawDevices;
import java.util.concurrent.CompletableFuture;

public class AsyncDevicesClient {
    protected final ClientOptions clientOptions;

    private final AsyncRawDevicesClient rawClient;

    public AsyncDevicesClient(ClientOptions clientOptions) {
        this.clientOptions = clientOptions;
        this.rawClient = new AsyncRawDevicesClient(clientOptions);
    }

    /**
     * Get responses with HTTP metadata like headers
     */
    public AsyncRawDevicesClient withRawResponse() {
        return this.rawClient;
    }

    /**
     * Get Devices for user_id
     */
    public CompletableFuture<RawDevices> getRaw(String userId) {
        return this.rawClient.getRaw(userId).thenApply(response -> response.body());
    }

    /**
     * Get Devices for user_id
     */
    public CompletableFuture<RawDevices> getRaw(String userId, DevicesGetRawRequest request) {
        return this.rawClient.getRaw(userId, request).thenApply(response -> response.body());
    }

    /**
     * Get Devices for user_id
     */
    public CompletableFuture<RawDevices> getRaw(
            String userId, DevicesGetRawRequest request, RequestOptions requestOptions) {
        return this.rawClient.getRaw(userId, request, requestOptions).thenApply(response -> response.body());
    }
}
