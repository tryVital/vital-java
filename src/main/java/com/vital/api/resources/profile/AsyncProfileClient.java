/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.vital.api.resources.profile;

import com.vital.api.core.ClientOptions;
import com.vital.api.core.RequestOptions;
import com.vital.api.resources.profile.requests.ProfileGetRawRequest;
import com.vital.api.resources.profile.requests.ProfileGetRequest;
import com.vital.api.types.ClientFacingProfile;
import com.vital.api.types.RawProfile;
import java.util.concurrent.CompletableFuture;

public class AsyncProfileClient {
    protected final ClientOptions clientOptions;

    private final AsyncRawProfileClient rawClient;

    public AsyncProfileClient(ClientOptions clientOptions) {
        this.clientOptions = clientOptions;
        this.rawClient = new AsyncRawProfileClient(clientOptions);
    }

    /**
     * Get responses with HTTP metadata like headers
     */
    public AsyncRawProfileClient withRawResponse() {
        return this.rawClient;
    }

    /**
     * Get profile for user_id
     */
    public CompletableFuture<ClientFacingProfile> get(String userId) {
        return this.rawClient.get(userId).thenApply(response -> response.body());
    }

    /**
     * Get profile for user_id
     */
    public CompletableFuture<ClientFacingProfile> get(String userId, ProfileGetRequest request) {
        return this.rawClient.get(userId, request).thenApply(response -> response.body());
    }

    /**
     * Get profile for user_id
     */
    public CompletableFuture<ClientFacingProfile> get(
            String userId, ProfileGetRequest request, RequestOptions requestOptions) {
        return this.rawClient.get(userId, request, requestOptions).thenApply(response -> response.body());
    }

    /**
     * Get raw profile for user_id
     */
    public CompletableFuture<RawProfile> getRaw(String userId) {
        return this.rawClient.getRaw(userId).thenApply(response -> response.body());
    }

    /**
     * Get raw profile for user_id
     */
    public CompletableFuture<RawProfile> getRaw(String userId, ProfileGetRawRequest request) {
        return this.rawClient.getRaw(userId, request).thenApply(response -> response.body());
    }

    /**
     * Get raw profile for user_id
     */
    public CompletableFuture<RawProfile> getRaw(
            String userId, ProfileGetRawRequest request, RequestOptions requestOptions) {
        return this.rawClient.getRaw(userId, request, requestOptions).thenApply(response -> response.body());
    }
}
