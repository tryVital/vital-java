/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.vital.api.resources.link.requests;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.annotation.Nulls;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.vital.api.core.ObjectMappers;
import com.vital.api.resources.link.types.LinkBulkTriggerHistoricalPullRequestTeamId;
import com.vital.api.types.OAuthProviders;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import org.jetbrains.annotations.NotNull;

@JsonInclude(JsonInclude.Include.NON_ABSENT)
@JsonDeserialize(builder = BulkTriggerHistoricalPullBody.Builder.class)
public final class BulkTriggerHistoricalPullBody {
    private final Optional<LinkBulkTriggerHistoricalPullRequestTeamId> teamId;

    private final List<String> userIds;

    private final OAuthProviders provider;

    private final Optional<Boolean> waitForCompletion;

    private final Map<String, Object> additionalProperties;

    private BulkTriggerHistoricalPullBody(
            Optional<LinkBulkTriggerHistoricalPullRequestTeamId> teamId,
            List<String> userIds,
            OAuthProviders provider,
            Optional<Boolean> waitForCompletion,
            Map<String, Object> additionalProperties) {
        this.teamId = teamId;
        this.userIds = userIds;
        this.provider = provider;
        this.waitForCompletion = waitForCompletion;
        this.additionalProperties = additionalProperties;
    }

    @JsonProperty("team_id")
    public Optional<LinkBulkTriggerHistoricalPullRequestTeamId> getTeamId() {
        return teamId;
    }

    @JsonProperty("user_ids")
    public List<String> getUserIds() {
        return userIds;
    }

    @JsonProperty("provider")
    public OAuthProviders getProvider() {
        return provider;
    }

    /**
     * @return Whether or not the endpoint should wait for the Bulk Op to complete before responding.
     * <p>When <code>wait_for_completion</code> is enabled, the endpoint may respond 200 OK if the Bulk Op takes less than 20 seconds to complete.</p>
     * <p>Otherwise, the endpoint always responds with 202 Created once the submitted data have been enqueued successfully. You can use
     * the <a href="https://docs.tryvital.io/api-reference/link/list-bulk-ops">List Bulk Ops</a> endpoint to inspect the progress of the Bulk Op.</p>
     */
    @JsonProperty("wait_for_completion")
    public Optional<Boolean> getWaitForCompletion() {
        return waitForCompletion;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof BulkTriggerHistoricalPullBody && equalTo((BulkTriggerHistoricalPullBody) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(BulkTriggerHistoricalPullBody other) {
        return teamId.equals(other.teamId)
                && userIds.equals(other.userIds)
                && provider.equals(other.provider)
                && waitForCompletion.equals(other.waitForCompletion);
    }

    @java.lang.Override
    public int hashCode() {
        return Objects.hash(this.teamId, this.userIds, this.provider, this.waitForCompletion);
    }

    @java.lang.Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static ProviderStage builder() {
        return new Builder();
    }

    public interface ProviderStage {
        _FinalStage provider(@NotNull OAuthProviders provider);

        Builder from(BulkTriggerHistoricalPullBody other);
    }

    public interface _FinalStage {
        BulkTriggerHistoricalPullBody build();

        _FinalStage teamId(Optional<LinkBulkTriggerHistoricalPullRequestTeamId> teamId);

        _FinalStage teamId(LinkBulkTriggerHistoricalPullRequestTeamId teamId);

        _FinalStage userIds(List<String> userIds);

        _FinalStage addUserIds(String userIds);

        _FinalStage addAllUserIds(List<String> userIds);

        /**
         * <p>Whether or not the endpoint should wait for the Bulk Op to complete before responding.</p>
         * <p>When <code>wait_for_completion</code> is enabled, the endpoint may respond 200 OK if the Bulk Op takes less than 20 seconds to complete.</p>
         * <p>Otherwise, the endpoint always responds with 202 Created once the submitted data have been enqueued successfully. You can use
         * the <a href="https://docs.tryvital.io/api-reference/link/list-bulk-ops">List Bulk Ops</a> endpoint to inspect the progress of the Bulk Op.</p>
         */
        _FinalStage waitForCompletion(Optional<Boolean> waitForCompletion);

        _FinalStage waitForCompletion(Boolean waitForCompletion);
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder implements ProviderStage, _FinalStage {
        private OAuthProviders provider;

        private Optional<Boolean> waitForCompletion = Optional.empty();

        private List<String> userIds = new ArrayList<>();

        private Optional<LinkBulkTriggerHistoricalPullRequestTeamId> teamId = Optional.empty();

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        @java.lang.Override
        public Builder from(BulkTriggerHistoricalPullBody other) {
            teamId(other.getTeamId());
            userIds(other.getUserIds());
            provider(other.getProvider());
            waitForCompletion(other.getWaitForCompletion());
            return this;
        }

        @java.lang.Override
        @JsonSetter("provider")
        public _FinalStage provider(@NotNull OAuthProviders provider) {
            this.provider = Objects.requireNonNull(provider, "provider must not be null");
            return this;
        }

        /**
         * <p>Whether or not the endpoint should wait for the Bulk Op to complete before responding.</p>
         * <p>When <code>wait_for_completion</code> is enabled, the endpoint may respond 200 OK if the Bulk Op takes less than 20 seconds to complete.</p>
         * <p>Otherwise, the endpoint always responds with 202 Created once the submitted data have been enqueued successfully. You can use
         * the <a href="https://docs.tryvital.io/api-reference/link/list-bulk-ops">List Bulk Ops</a> endpoint to inspect the progress of the Bulk Op.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        public _FinalStage waitForCompletion(Boolean waitForCompletion) {
            this.waitForCompletion = Optional.ofNullable(waitForCompletion);
            return this;
        }

        /**
         * <p>Whether or not the endpoint should wait for the Bulk Op to complete before responding.</p>
         * <p>When <code>wait_for_completion</code> is enabled, the endpoint may respond 200 OK if the Bulk Op takes less than 20 seconds to complete.</p>
         * <p>Otherwise, the endpoint always responds with 202 Created once the submitted data have been enqueued successfully. You can use
         * the <a href="https://docs.tryvital.io/api-reference/link/list-bulk-ops">List Bulk Ops</a> endpoint to inspect the progress of the Bulk Op.</p>
         */
        @java.lang.Override
        @JsonSetter(value = "wait_for_completion", nulls = Nulls.SKIP)
        public _FinalStage waitForCompletion(Optional<Boolean> waitForCompletion) {
            this.waitForCompletion = waitForCompletion;
            return this;
        }

        @java.lang.Override
        public _FinalStage addAllUserIds(List<String> userIds) {
            if (userIds != null) {
                this.userIds.addAll(userIds);
            }
            return this;
        }

        @java.lang.Override
        public _FinalStage addUserIds(String userIds) {
            this.userIds.add(userIds);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "user_ids", nulls = Nulls.SKIP)
        public _FinalStage userIds(List<String> userIds) {
            this.userIds.clear();
            this.userIds.addAll(userIds);
            return this;
        }

        @java.lang.Override
        public _FinalStage teamId(LinkBulkTriggerHistoricalPullRequestTeamId teamId) {
            this.teamId = Optional.ofNullable(teamId);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "team_id", nulls = Nulls.SKIP)
        public _FinalStage teamId(Optional<LinkBulkTriggerHistoricalPullRequestTeamId> teamId) {
            this.teamId = teamId;
            return this;
        }

        @java.lang.Override
        public BulkTriggerHistoricalPullBody build() {
            return new BulkTriggerHistoricalPullBody(
                    teamId, userIds, provider, waitForCompletion, additionalProperties);
        }
    }
}
