/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.vital.api.resources.link.requests;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.vital.api.core.ObjectMappers;
import java.util.HashMap;
import java.util.Map;
import java.util.Objects;
import org.jetbrains.annotations.NotNull;

@JsonInclude(JsonInclude.Include.NON_ABSENT)
@JsonDeserialize(builder = LinkTokenValidationRequest.Builder.class)
public final class LinkTokenValidationRequest {
    private final String token;

    private final Map<String, Object> additionalProperties;

    private LinkTokenValidationRequest(String token, Map<String, Object> additionalProperties) {
        this.token = token;
        this.additionalProperties = additionalProperties;
    }

    @JsonProperty("token")
    public String getToken() {
        return token;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof LinkTokenValidationRequest && equalTo((LinkTokenValidationRequest) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(LinkTokenValidationRequest other) {
        return token.equals(other.token);
    }

    @java.lang.Override
    public int hashCode() {
        return Objects.hash(this.token);
    }

    @java.lang.Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static TokenStage builder() {
        return new Builder();
    }

    public interface TokenStage {
        _FinalStage token(@NotNull String token);

        Builder from(LinkTokenValidationRequest other);
    }

    public interface _FinalStage {
        LinkTokenValidationRequest build();
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder implements TokenStage, _FinalStage {
        private String token;

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        @java.lang.Override
        public Builder from(LinkTokenValidationRequest other) {
            token(other.getToken());
            return this;
        }

        @java.lang.Override
        @JsonSetter("token")
        public _FinalStage token(@NotNull String token) {
            this.token = Objects.requireNonNull(token, "token must not be null");
            return this;
        }

        @java.lang.Override
        public LinkTokenValidationRequest build() {
            return new LinkTokenValidationRequest(token, additionalProperties);
        }
    }
}
