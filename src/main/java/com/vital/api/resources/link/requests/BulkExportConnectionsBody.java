/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.vital.api.resources.link.requests;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.annotation.Nulls;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.vital.api.core.ObjectMappers;
import com.vital.api.types.OAuthProviders;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;

@JsonInclude(JsonInclude.Include.NON_EMPTY)
@JsonDeserialize(builder = BulkExportConnectionsBody.Builder.class)
public final class BulkExportConnectionsBody {
    private final Optional<List<String>> userIds;

    private final OAuthProviders provider;

    private final Optional<String> nextToken;

    private final Map<String, Object> additionalProperties;

    private BulkExportConnectionsBody(
            Optional<List<String>> userIds,
            OAuthProviders provider,
            Optional<String> nextToken,
            Map<String, Object> additionalProperties) {
        this.userIds = userIds;
        this.provider = provider;
        this.nextToken = nextToken;
        this.additionalProperties = additionalProperties;
    }

    @JsonProperty("user_ids")
    public Optional<List<String>> getUserIds() {
        return userIds;
    }

    @JsonProperty("provider")
    public OAuthProviders getProvider() {
        return provider;
    }

    @JsonProperty("next_token")
    public Optional<String> getNextToken() {
        return nextToken;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof BulkExportConnectionsBody && equalTo((BulkExportConnectionsBody) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(BulkExportConnectionsBody other) {
        return userIds.equals(other.userIds) && provider.equals(other.provider) && nextToken.equals(other.nextToken);
    }

    @java.lang.Override
    public int hashCode() {
        return Objects.hash(this.userIds, this.provider, this.nextToken);
    }

    @java.lang.Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static ProviderStage builder() {
        return new Builder();
    }

    public interface ProviderStage {
        _FinalStage provider(OAuthProviders provider);

        Builder from(BulkExportConnectionsBody other);
    }

    public interface _FinalStage {
        BulkExportConnectionsBody build();

        _FinalStage userIds(Optional<List<String>> userIds);

        _FinalStage userIds(List<String> userIds);

        _FinalStage nextToken(Optional<String> nextToken);

        _FinalStage nextToken(String nextToken);
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder implements ProviderStage, _FinalStage {
        private OAuthProviders provider;

        private Optional<String> nextToken = Optional.empty();

        private Optional<List<String>> userIds = Optional.empty();

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        @java.lang.Override
        public Builder from(BulkExportConnectionsBody other) {
            userIds(other.getUserIds());
            provider(other.getProvider());
            nextToken(other.getNextToken());
            return this;
        }

        @java.lang.Override
        @JsonSetter("provider")
        public _FinalStage provider(OAuthProviders provider) {
            this.provider = provider;
            return this;
        }

        @java.lang.Override
        public _FinalStage nextToken(String nextToken) {
            this.nextToken = Optional.of(nextToken);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "next_token", nulls = Nulls.SKIP)
        public _FinalStage nextToken(Optional<String> nextToken) {
            this.nextToken = nextToken;
            return this;
        }

        @java.lang.Override
        public _FinalStage userIds(List<String> userIds) {
            this.userIds = Optional.of(userIds);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "user_ids", nulls = Nulls.SKIP)
        public _FinalStage userIds(Optional<List<String>> userIds) {
            this.userIds = userIds;
            return this;
        }

        @java.lang.Override
        public BulkExportConnectionsBody build() {
            return new BulkExportConnectionsBody(userIds, provider, nextToken, additionalProperties);
        }
    }
}
