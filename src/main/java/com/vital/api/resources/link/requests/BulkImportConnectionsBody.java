/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.vital.api.resources.link.requests;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.annotation.Nulls;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.vital.api.core.ObjectMappers;
import com.vital.api.types.ConnectionRecipe;
import com.vital.api.types.OAuthProviders;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Objects;

@JsonInclude(JsonInclude.Include.NON_EMPTY)
@JsonDeserialize(builder = BulkImportConnectionsBody.Builder.class)
public final class BulkImportConnectionsBody {
    private final OAuthProviders provider;

    private final List<ConnectionRecipe> connections;

    private final Map<String, Object> additionalProperties;

    private BulkImportConnectionsBody(
            OAuthProviders provider, List<ConnectionRecipe> connections, Map<String, Object> additionalProperties) {
        this.provider = provider;
        this.connections = connections;
        this.additionalProperties = additionalProperties;
    }

    @JsonProperty("provider")
    public OAuthProviders getProvider() {
        return provider;
    }

    @JsonProperty("connections")
    public List<ConnectionRecipe> getConnections() {
        return connections;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof BulkImportConnectionsBody && equalTo((BulkImportConnectionsBody) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(BulkImportConnectionsBody other) {
        return provider.equals(other.provider) && connections.equals(other.connections);
    }

    @java.lang.Override
    public int hashCode() {
        return Objects.hash(this.provider, this.connections);
    }

    @java.lang.Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static ProviderStage builder() {
        return new Builder();
    }

    public interface ProviderStage {
        _FinalStage provider(OAuthProviders provider);

        Builder from(BulkImportConnectionsBody other);
    }

    public interface _FinalStage {
        BulkImportConnectionsBody build();

        _FinalStage connections(List<ConnectionRecipe> connections);

        _FinalStage addConnections(ConnectionRecipe connections);

        _FinalStage addAllConnections(List<ConnectionRecipe> connections);
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder implements ProviderStage, _FinalStage {
        private OAuthProviders provider;

        private List<ConnectionRecipe> connections = new ArrayList<>();

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        @java.lang.Override
        public Builder from(BulkImportConnectionsBody other) {
            provider(other.getProvider());
            connections(other.getConnections());
            return this;
        }

        @java.lang.Override
        @JsonSetter("provider")
        public _FinalStage provider(OAuthProviders provider) {
            this.provider = provider;
            return this;
        }

        @java.lang.Override
        public _FinalStage addAllConnections(List<ConnectionRecipe> connections) {
            this.connections.addAll(connections);
            return this;
        }

        @java.lang.Override
        public _FinalStage addConnections(ConnectionRecipe connections) {
            this.connections.add(connections);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "connections", nulls = Nulls.SKIP)
        public _FinalStage connections(List<ConnectionRecipe> connections) {
            this.connections.clear();
            this.connections.addAll(connections);
            return this;
        }

        @java.lang.Override
        public BulkImportConnectionsBody build() {
            return new BulkImportConnectionsBody(provider, connections, additionalProperties);
        }
    }
}
