/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.vital.api.resources.team;

import com.vital.api.core.ClientOptions;
import com.vital.api.core.RequestOptions;
import com.vital.api.resources.team.requests.TeamGetLinkConfigRequest;
import com.vital.api.resources.team.requests.TeamGetSourcePrioritiesRequest;
import com.vital.api.resources.team.requests.TeamGetUserByIdRequest;
import com.vital.api.types.ClientFacingPhysician;
import com.vital.api.types.ClientFacingTeam;
import com.vital.api.types.ClientFacingUser;
import java.util.List;
import java.util.Map;
import java.util.concurrent.CompletableFuture;

public class AsyncTeamClient {
    protected final ClientOptions clientOptions;

    private final AsyncRawTeamClient rawClient;

    public AsyncTeamClient(ClientOptions clientOptions) {
        this.clientOptions = clientOptions;
        this.rawClient = new AsyncRawTeamClient(clientOptions);
    }

    /**
     * Get responses with HTTP metadata like headers
     */
    public AsyncRawTeamClient withRawResponse() {
        return this.rawClient;
    }

    /**
     * Post teams.
     */
    public CompletableFuture<Map<String, Object>> getLinkConfig() {
        return this.rawClient.getLinkConfig().thenApply(response -> response.body());
    }

    /**
     * Post teams.
     */
    public CompletableFuture<Map<String, Object>> getLinkConfig(TeamGetLinkConfigRequest request) {
        return this.rawClient.getLinkConfig(request).thenApply(response -> response.body());
    }

    /**
     * Post teams.
     */
    public CompletableFuture<Map<String, Object>> getLinkConfig(
            TeamGetLinkConfigRequest request, RequestOptions requestOptions) {
        return this.rawClient.getLinkConfig(request, requestOptions).thenApply(response -> response.body());
    }

    /**
     * Get team.
     */
    public CompletableFuture<ClientFacingTeam> get(String teamId) {
        return this.rawClient.get(teamId).thenApply(response -> response.body());
    }

    /**
     * Get team.
     */
    public CompletableFuture<ClientFacingTeam> get(String teamId, RequestOptions requestOptions) {
        return this.rawClient.get(teamId, requestOptions).thenApply(response -> response.body());
    }

    /**
     * Search team users by user_id
     */
    public CompletableFuture<List<ClientFacingUser>> getUserById() {
        return this.rawClient.getUserById().thenApply(response -> response.body());
    }

    /**
     * Search team users by user_id
     */
    public CompletableFuture<List<ClientFacingUser>> getUserById(TeamGetUserByIdRequest request) {
        return this.rawClient.getUserById(request).thenApply(response -> response.body());
    }

    /**
     * Search team users by user_id
     */
    public CompletableFuture<List<ClientFacingUser>> getUserById(
            TeamGetUserByIdRequest request, RequestOptions requestOptions) {
        return this.rawClient.getUserById(request, requestOptions).thenApply(response -> response.body());
    }

    public CompletableFuture<Map<String, Object>> getSvixUrl() {
        return this.rawClient.getSvixUrl().thenApply(response -> response.body());
    }

    public CompletableFuture<Map<String, Object>> getSvixUrl(RequestOptions requestOptions) {
        return this.rawClient.getSvixUrl(requestOptions).thenApply(response -> response.body());
    }

    /**
     * GET source priorities.
     */
    public CompletableFuture<List<Map<String, Object>>> getSourcePriorities() {
        return this.rawClient.getSourcePriorities().thenApply(response -> response.body());
    }

    /**
     * GET source priorities.
     */
    public CompletableFuture<List<Map<String, Object>>> getSourcePriorities(TeamGetSourcePrioritiesRequest request) {
        return this.rawClient.getSourcePriorities(request).thenApply(response -> response.body());
    }

    /**
     * GET source priorities.
     */
    public CompletableFuture<List<Map<String, Object>>> getSourcePriorities(
            TeamGetSourcePrioritiesRequest request, RequestOptions requestOptions) {
        return this.rawClient.getSourcePriorities(request, requestOptions).thenApply(response -> response.body());
    }

    /**
     * Patch source priorities.
     */
    public CompletableFuture<List<Map<String, Object>>> updateSourcePriorities() {
        return this.rawClient.updateSourcePriorities().thenApply(response -> response.body());
    }

    /**
     * Patch source priorities.
     */
    public CompletableFuture<List<Map<String, Object>>> updateSourcePriorities(RequestOptions requestOptions) {
        return this.rawClient.updateSourcePriorities(requestOptions).thenApply(response -> response.body());
    }

    public CompletableFuture<List<ClientFacingPhysician>> getPhysicians(String teamId) {
        return this.rawClient.getPhysicians(teamId).thenApply(response -> response.body());
    }

    public CompletableFuture<List<ClientFacingPhysician>> getPhysicians(String teamId, RequestOptions requestOptions) {
        return this.rawClient.getPhysicians(teamId, requestOptions).thenApply(response -> response.body());
    }
}
