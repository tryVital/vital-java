/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.vital.api.resources.team;

import com.vital.api.core.ClientOptions;
import com.vital.api.core.RequestOptions;
import com.vital.api.resources.team.requests.TeamGetLinkConfigRequest;
import com.vital.api.resources.team.requests.TeamGetSourcePrioritiesRequest;
import com.vital.api.resources.team.requests.TeamGetUserByIdRequest;
import com.vital.api.types.ClientFacingPhysician;
import com.vital.api.types.ClientFacingTeam;
import com.vital.api.types.ClientFacingUser;
import java.util.List;
import java.util.Map;

public class TeamClient {
    protected final ClientOptions clientOptions;

    private final RawTeamClient rawClient;

    public TeamClient(ClientOptions clientOptions) {
        this.clientOptions = clientOptions;
        this.rawClient = new RawTeamClient(clientOptions);
    }

    /**
     * Get responses with HTTP metadata like headers
     */
    public RawTeamClient withRawResponse() {
        return this.rawClient;
    }

    /**
     * Post teams.
     */
    public Map<String, Object> getLinkConfig() {
        return this.rawClient.getLinkConfig().body();
    }

    /**
     * Post teams.
     */
    public Map<String, Object> getLinkConfig(TeamGetLinkConfigRequest request) {
        return this.rawClient.getLinkConfig(request).body();
    }

    /**
     * Post teams.
     */
    public Map<String, Object> getLinkConfig(TeamGetLinkConfigRequest request, RequestOptions requestOptions) {
        return this.rawClient.getLinkConfig(request, requestOptions).body();
    }

    /**
     * Get team.
     */
    public ClientFacingTeam get(String teamId) {
        return this.rawClient.get(teamId).body();
    }

    /**
     * Get team.
     */
    public ClientFacingTeam get(String teamId, RequestOptions requestOptions) {
        return this.rawClient.get(teamId, requestOptions).body();
    }

    /**
     * Search team users by user_id
     */
    public List<ClientFacingUser> getUserById() {
        return this.rawClient.getUserById().body();
    }

    /**
     * Search team users by user_id
     */
    public List<ClientFacingUser> getUserById(TeamGetUserByIdRequest request) {
        return this.rawClient.getUserById(request).body();
    }

    /**
     * Search team users by user_id
     */
    public List<ClientFacingUser> getUserById(TeamGetUserByIdRequest request, RequestOptions requestOptions) {
        return this.rawClient.getUserById(request, requestOptions).body();
    }

    public Map<String, Object> getSvixUrl() {
        return this.rawClient.getSvixUrl().body();
    }

    public Map<String, Object> getSvixUrl(RequestOptions requestOptions) {
        return this.rawClient.getSvixUrl(requestOptions).body();
    }

    /**
     * GET source priorities.
     */
    public List<Map<String, Object>> getSourcePriorities() {
        return this.rawClient.getSourcePriorities().body();
    }

    /**
     * GET source priorities.
     */
    public List<Map<String, Object>> getSourcePriorities(TeamGetSourcePrioritiesRequest request) {
        return this.rawClient.getSourcePriorities(request).body();
    }

    /**
     * GET source priorities.
     */
    public List<Map<String, Object>> getSourcePriorities(
            TeamGetSourcePrioritiesRequest request, RequestOptions requestOptions) {
        return this.rawClient.getSourcePriorities(request, requestOptions).body();
    }

    /**
     * Patch source priorities.
     */
    public List<Map<String, Object>> updateSourcePriorities() {
        return this.rawClient.updateSourcePriorities().body();
    }

    /**
     * Patch source priorities.
     */
    public List<Map<String, Object>> updateSourcePriorities(RequestOptions requestOptions) {
        return this.rawClient.updateSourcePriorities(requestOptions).body();
    }

    public List<ClientFacingPhysician> getPhysicians(String teamId) {
        return this.rawClient.getPhysicians(teamId).body();
    }

    public List<ClientFacingPhysician> getPhysicians(String teamId, RequestOptions requestOptions) {
        return this.rawClient.getPhysicians(teamId, requestOptions).body();
    }
}
