/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.vital.api.resources.workouts;

import com.vital.api.core.ClientOptions;
import com.vital.api.core.RequestOptions;
import com.vital.api.resources.workouts.requests.WorkoutsGetRawRequest;
import com.vital.api.resources.workouts.requests.WorkoutsGetRequest;
import com.vital.api.types.ClientFacingStream;
import com.vital.api.types.ClientWorkoutResponse;
import com.vital.api.types.RawWorkout;
import java.util.concurrent.CompletableFuture;

public class AsyncWorkoutsClient {
    protected final ClientOptions clientOptions;

    private final AsyncRawWorkoutsClient rawClient;

    public AsyncWorkoutsClient(ClientOptions clientOptions) {
        this.clientOptions = clientOptions;
        this.rawClient = new AsyncRawWorkoutsClient(clientOptions);
    }

    /**
     * Get responses with HTTP metadata like headers
     */
    public AsyncRawWorkoutsClient withRawResponse() {
        return this.rawClient;
    }

    /**
     * Get workout summary for user_id
     */
    public CompletableFuture<ClientWorkoutResponse> get(String userId, WorkoutsGetRequest request) {
        return this.rawClient.get(userId, request).thenApply(response -> response.body());
    }

    /**
     * Get workout summary for user_id
     */
    public CompletableFuture<ClientWorkoutResponse> get(
            String userId, WorkoutsGetRequest request, RequestOptions requestOptions) {
        return this.rawClient.get(userId, request, requestOptions).thenApply(response -> response.body());
    }

    /**
     * Get raw workout summary for user_id
     */
    public CompletableFuture<RawWorkout> getRaw(String userId, WorkoutsGetRawRequest request) {
        return this.rawClient.getRaw(userId, request).thenApply(response -> response.body());
    }

    /**
     * Get raw workout summary for user_id
     */
    public CompletableFuture<RawWorkout> getRaw(
            String userId, WorkoutsGetRawRequest request, RequestOptions requestOptions) {
        return this.rawClient.getRaw(userId, request, requestOptions).thenApply(response -> response.body());
    }

    public CompletableFuture<ClientFacingStream> getByWorkoutId(String workoutId) {
        return this.rawClient.getByWorkoutId(workoutId).thenApply(response -> response.body());
    }

    public CompletableFuture<ClientFacingStream> getByWorkoutId(String workoutId, RequestOptions requestOptions) {
        return this.rawClient.getByWorkoutId(workoutId, requestOptions).thenApply(response -> response.body());
    }
}
