/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.vital.api.resources.labtests.requests;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.annotation.Nulls;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.vital.api.core.ObjectMappers;
import com.vital.api.types.UsAddress;
import java.util.HashMap;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;

@JsonInclude(JsonInclude.Include.NON_EMPTY)
@JsonDeserialize(builder = LabTestsGetPhlebotomyAppointmentAvailabilityRequest.Builder.class)
public final class LabTestsGetPhlebotomyAppointmentAvailabilityRequest {
    private final Optional<String> startDate;

    private final UsAddress body;

    private final Map<String, Object> additionalProperties;

    private LabTestsGetPhlebotomyAppointmentAvailabilityRequest(
            Optional<String> startDate, UsAddress body, Map<String, Object> additionalProperties) {
        this.startDate = startDate;
        this.body = body;
        this.additionalProperties = additionalProperties;
    }

    /**
     * @return Start date for appointment availability
     */
    @JsonProperty("start_date")
    public Optional<String> getStartDate() {
        return startDate;
    }

    /**
     * @return At-home phlebotomy appointment address.
     */
    @JsonProperty("body")
    public UsAddress getBody() {
        return body;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof LabTestsGetPhlebotomyAppointmentAvailabilityRequest
                && equalTo((LabTestsGetPhlebotomyAppointmentAvailabilityRequest) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(LabTestsGetPhlebotomyAppointmentAvailabilityRequest other) {
        return startDate.equals(other.startDate) && body.equals(other.body);
    }

    @java.lang.Override
    public int hashCode() {
        return Objects.hash(this.startDate, this.body);
    }

    @java.lang.Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static BodyStage builder() {
        return new Builder();
    }

    public interface BodyStage {
        _FinalStage body(UsAddress body);

        Builder from(LabTestsGetPhlebotomyAppointmentAvailabilityRequest other);
    }

    public interface _FinalStage {
        LabTestsGetPhlebotomyAppointmentAvailabilityRequest build();

        _FinalStage startDate(Optional<String> startDate);

        _FinalStage startDate(String startDate);
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder implements BodyStage, _FinalStage {
        private UsAddress body;

        private Optional<String> startDate = Optional.empty();

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        @java.lang.Override
        public Builder from(LabTestsGetPhlebotomyAppointmentAvailabilityRequest other) {
            startDate(other.getStartDate());
            body(other.getBody());
            return this;
        }

        /**
         * <p>At-home phlebotomy appointment address.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        @JsonSetter("body")
        public _FinalStage body(UsAddress body) {
            this.body = body;
            return this;
        }

        /**
         * <p>Start date for appointment availability</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        public _FinalStage startDate(String startDate) {
            this.startDate = Optional.of(startDate);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "start_date", nulls = Nulls.SKIP)
        public _FinalStage startDate(Optional<String> startDate) {
            this.startDate = startDate;
            return this;
        }

        @java.lang.Override
        public LabTestsGetPhlebotomyAppointmentAvailabilityRequest build() {
            return new LabTestsGetPhlebotomyAppointmentAvailabilityRequest(startDate, body, additionalProperties);
        }
    }
}
