/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.vital.api;

import com.vital.api.core.ClientOptions;
import com.vital.api.core.Suppliers;
import com.vital.api.resources.activity.ActivityClient;
import com.vital.api.resources.aggregate.AggregateClient;
import com.vital.api.resources.body.BodyClient;
import com.vital.api.resources.devices.DevicesClient;
import com.vital.api.resources.electrocardiogram.ElectrocardiogramClient;
import com.vital.api.resources.insurance.InsuranceClient;
import com.vital.api.resources.introspect.IntrospectClient;
import com.vital.api.resources.labtests.LabTestsClient;
import com.vital.api.resources.link.LinkClient;
import com.vital.api.resources.meal.MealClient;
import com.vital.api.resources.menstrualcycle.MenstrualCycleClient;
import com.vital.api.resources.order.OrderClient;
import com.vital.api.resources.payor.PayorClient;
import com.vital.api.resources.profile.ProfileClient;
import com.vital.api.resources.providers.ProvidersClient;
import com.vital.api.resources.sleep.SleepClient;
import com.vital.api.resources.sleepcycle.SleepCycleClient;
import com.vital.api.resources.team.TeamClient;
import com.vital.api.resources.testkit.TestkitClient;
import com.vital.api.resources.user.UserClient;
import com.vital.api.resources.vitals.VitalsClient;
import com.vital.api.resources.workouts.WorkoutsClient;
import java.util.function.Supplier;

public class Vital {
    protected final ClientOptions clientOptions;

    protected final Supplier<UserClient> userClient;

    protected final Supplier<ProvidersClient> providersClient;

    protected final Supplier<LinkClient> linkClient;

    protected final Supplier<ElectrocardiogramClient> electrocardiogramClient;

    protected final Supplier<SleepCycleClient> sleepCycleClient;

    protected final Supplier<ProfileClient> profileClient;

    protected final Supplier<DevicesClient> devicesClient;

    protected final Supplier<ActivityClient> activityClient;

    protected final Supplier<WorkoutsClient> workoutsClient;

    protected final Supplier<SleepClient> sleepClient;

    protected final Supplier<BodyClient> bodyClient;

    protected final Supplier<MealClient> mealClient;

    protected final Supplier<MenstrualCycleClient> menstrualCycleClient;

    protected final Supplier<VitalsClient> vitalsClient;

    protected final Supplier<TeamClient> teamClient;

    protected final Supplier<IntrospectClient> introspectClient;

    protected final Supplier<LabTestsClient> labTestsClient;

    protected final Supplier<TestkitClient> testkitClient;

    protected final Supplier<OrderClient> orderClient;

    protected final Supplier<InsuranceClient> insuranceClient;

    protected final Supplier<PayorClient> payorClient;

    protected final Supplier<AggregateClient> aggregateClient;

    public Vital(ClientOptions clientOptions) {
        this.clientOptions = clientOptions;
        this.userClient = Suppliers.memoize(() -> new UserClient(clientOptions));
        this.providersClient = Suppliers.memoize(() -> new ProvidersClient(clientOptions));
        this.linkClient = Suppliers.memoize(() -> new LinkClient(clientOptions));
        this.electrocardiogramClient = Suppliers.memoize(() -> new ElectrocardiogramClient(clientOptions));
        this.sleepCycleClient = Suppliers.memoize(() -> new SleepCycleClient(clientOptions));
        this.profileClient = Suppliers.memoize(() -> new ProfileClient(clientOptions));
        this.devicesClient = Suppliers.memoize(() -> new DevicesClient(clientOptions));
        this.activityClient = Suppliers.memoize(() -> new ActivityClient(clientOptions));
        this.workoutsClient = Suppliers.memoize(() -> new WorkoutsClient(clientOptions));
        this.sleepClient = Suppliers.memoize(() -> new SleepClient(clientOptions));
        this.bodyClient = Suppliers.memoize(() -> new BodyClient(clientOptions));
        this.mealClient = Suppliers.memoize(() -> new MealClient(clientOptions));
        this.menstrualCycleClient = Suppliers.memoize(() -> new MenstrualCycleClient(clientOptions));
        this.vitalsClient = Suppliers.memoize(() -> new VitalsClient(clientOptions));
        this.teamClient = Suppliers.memoize(() -> new TeamClient(clientOptions));
        this.introspectClient = Suppliers.memoize(() -> new IntrospectClient(clientOptions));
        this.labTestsClient = Suppliers.memoize(() -> new LabTestsClient(clientOptions));
        this.testkitClient = Suppliers.memoize(() -> new TestkitClient(clientOptions));
        this.orderClient = Suppliers.memoize(() -> new OrderClient(clientOptions));
        this.insuranceClient = Suppliers.memoize(() -> new InsuranceClient(clientOptions));
        this.payorClient = Suppliers.memoize(() -> new PayorClient(clientOptions));
        this.aggregateClient = Suppliers.memoize(() -> new AggregateClient(clientOptions));
    }

    public UserClient user() {
        return this.userClient.get();
    }

    public ProvidersClient providers() {
        return this.providersClient.get();
    }

    public LinkClient link() {
        return this.linkClient.get();
    }

    public ElectrocardiogramClient electrocardiogram() {
        return this.electrocardiogramClient.get();
    }

    public SleepCycleClient sleepCycle() {
        return this.sleepCycleClient.get();
    }

    public ProfileClient profile() {
        return this.profileClient.get();
    }

    public DevicesClient devices() {
        return this.devicesClient.get();
    }

    public ActivityClient activity() {
        return this.activityClient.get();
    }

    public WorkoutsClient workouts() {
        return this.workoutsClient.get();
    }

    public SleepClient sleep() {
        return this.sleepClient.get();
    }

    public BodyClient body() {
        return this.bodyClient.get();
    }

    public MealClient meal() {
        return this.mealClient.get();
    }

    public MenstrualCycleClient menstrualCycle() {
        return this.menstrualCycleClient.get();
    }

    public VitalsClient vitals() {
        return this.vitalsClient.get();
    }

    public TeamClient team() {
        return this.teamClient.get();
    }

    public IntrospectClient introspect() {
        return this.introspectClient.get();
    }

    public LabTestsClient labTests() {
        return this.labTestsClient.get();
    }

    public TestkitClient testkit() {
        return this.testkitClient.get();
    }

    public OrderClient order() {
        return this.orderClient.get();
    }

    public InsuranceClient insurance() {
        return this.insuranceClient.get();
    }

    public PayorClient payor() {
        return this.payorClient.get();
    }

    public AggregateClient aggregate() {
        return this.aggregateClient.get();
    }

    public static VitalBuilder builder() {
        return new VitalBuilder();
    }
}
